!function e(a,t,o){function s(h,r){if(!t[h]){if(!a[h]){var d="function"==typeof require&&require;if(!r&&d)return d(h,!0);if(i)return i(h,!0);var n=new Error("Cannot find module '"+h+"'");throw n.code="MODULE_NOT_FOUND",n}var c=t[h]={exports:{}};a[h][0].call(c.exports,function(e){var t=a[h][1][e];return s(t?t:e)},c,c.exports,e,a,t,o)}return t[h].exports}for(var i="function"==typeof require&&require,h=0;h<o.length;h++)s(o[h]);return s}({1:[function(e,a,t){e("./src/shadows").registerAll()},{"./src/shadows":2}],2:[function(e,a,t){a.exports={shadow:e("./shadow"),"shadow-light":e("./shadow-light"),registerAll:function(e){this._registered||(e=e||window.AFRAME,e.components.shadow||e.registerComponent("shadow",this.shadow),e.components["shadow-light"]||e.registerComponent("shadow-light",this["shadow-light"]),this._registered=!0)}}},{"./shadow":4,"./shadow-light":3}],3:[function(e,a,t){a.exports={schema:{angle:{"default":Math.PI/3},castShadow:{"default":!0},color:{"default":"#FFF"},groundColor:{"default":"#FFF"},decay:{"default":1},distance:{"default":0},exponent:{"default":10},intensity:{"default":1},shadowBias:{"default":0},shadowCameraFar:{"default":5e3},shadowCameraFov:{"default":50},shadowCameraNear:{"default":.5},shadowCameraTop:{"default":10},shadowCameraRight:{"default":10},shadowCameraBottom:{"default":-10},shadowCameraLeft:{"default":-10},shadowDarkness:{"default":.5},shadowMapHeight:{"default":512},shadowMapWidth:{"default":512},type:{"default":"directional",oneOf:["ambient","directional","hemisphere","point","spot"]}},init:function(){var e=this.el;this.light=this.getLight(),e.object3D.add(this.light),e.sceneEl.systems.light.registerLight(e),e.sceneEl.hasLoaded||e.sceneEl.addEventListener("loaded",this.play.bind(this))},update:function(e){e=e||{},Object.keys(e).length&&(this.el.object3D.remove(this.light),this.light=this.getLight(),this.el.object3D.add(this.light))},play:function(){var e=this.el,a=e.sceneEl.renderer;a&&!a.shadowMap.enabled&&(a.shadowMap.enabled=!0)},getLight:function(){var e=this.data,a=new THREE.Color(e.color).getHex(),t=e.intensity,o=e.type;switch(o&&(o=o.toLowerCase()),o){case"ambient":return new THREE.AmbientLight(a);case"directional":return this.setShadow(new THREE.DirectionalLight(a,t));case"hemisphere":return new THREE.HemisphereLight(a,e.groundColor,t);case"point":return this.setShadow(new THREE.PointLight(a,t,e.distance,e.decay));case"spot":return this.setShadow(new THREE.SpotLight(a,t,e.distance,e.angle,e.exponent,e.decay));default:return new THREE.AmbientLight(a)}},setShadow:function(e){var a=this.data;return a.castShadow?(e.castShadow=a.castShadow,e.shadow.bias=a.shadowBias,e.shadow.darkness=a.shadowDarkness,e.shadow.mapSize.height=a.shadowMapHeight,e.shadow.mapSize.width=a.shadowMapWidth,e.shadow.camera.near=a.shadowCameraNear,e.shadow.camera.far=a.shadowCameraFar,e.shadow.camera instanceof THREE.OrthographicCamera?(e.shadow.camera.top=a.shadowCameraTop,e.shadow.camera.right=a.shadowCameraRight,e.shadow.camera.bottom=a.shadowCameraBottom,e.shadow.camera.left=a.shadowCameraLeft):e.shadow.camera.fov=a.shadowCameraFov,e):e}}},{}],4:[function(e,a,t){a.exports={schema:{cast:{"default":!1},receive:{"default":!1}},init:function(){this.el.addEventListener("model-loaded",this.update.bind(this))},update:function(){var e=this.data;this.el.object3D.traverse(function(a){a instanceof THREE.Mesh&&(a.castShadow=e.cast,a.receiveShadow=e.receive)})},remove:function(){}}},{}]},{},[1]);