!function t(e,n,i){function r(s,a){if(!n[s]){if(!e[s]){var c="function"==typeof require&&require;if(!a&&c)return c(s,!0);if(o)return o(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var h=n[s]={exports:{}};e[s][0].call(h.exports,function(t){var n=e[s][1][t];return r(n||t)},h,h.exports,t,e,n,i)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<i.length;s++)r(i[s]);return r}({1:[function(t,e,n){"use strict";t("./")},{"./":2}],2:[function(t,e,n){"use strict";t("./src/controls"),t("./src/loaders"),t("./src/misc"),t("./src/pathfinding"),t("./src/primitives")},{"./src/controls":14,"./src/loaders":24,"./src/misc":29,"./src/pathfinding":32,"./src/primitives":39}],3:[function(t,e,n){"use strict";e.exports=THREE.ColladaLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ColladaLoader.prototype={constructor:THREE.ColladaLoader,crossOrigin:"anonymous",load:function(t,e,n,i){var r=this,o=void 0===r.path?THREE.LoaderUtils.extractUrlBase(t):r.path,s=new THREE.FileLoader(r.manager);s.setPath(r.path),s.load(t,function(t){e(r.parse(t,o))},n,i)},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},options:{set convertUpAxis(t){console.warn("THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.")}},setCrossOrigin:function(t){return this.crossOrigin=t,this},parse:function(t,e){function n(t,e){for(var n=[],i=t.childNodes,r=0,o=i.length;r<o;r++){var s=i[r];s.nodeName===e&&n.push(s)}return n}function i(t){if(0===t.length)return[];for(var e=t.trim().split(/\s+/),n=new Array(e.length),i=0,r=e.length;i<r;i++)n[i]=e[i];return n}function r(t){if(0===t.length)return[];for(var e=t.trim().split(/\s+/),n=new Array(e.length),i=0,r=e.length;i<r;i++)n[i]=parseFloat(e[i]);return n}function o(t){if(0===t.length)return[];for(var e=t.trim().split(/\s+/),n=new Array(e.length),i=0,r=e.length;i<r;i++)n[i]=parseInt(e[i]);return n}function s(t){return t.substring(1)}function a(){return"three_default_"+at++}function c(t){return 0===Object.keys(t).length}function l(t,e,i,r){var o=n(t,e)[0];if(void 0!==o)for(var s=n(o,i),a=0;a<s.length;a++)r(s[a])}function h(t,e){for(var n in t){t[n].build=e(t[n])}}function u(t,e){return void 0!==t.build?t.build:(t.build=e(t),t.build)}function d(t){var e=[],n=t.channels,i=t.samplers,r=t.sources;for(var o in n)if(n.hasOwnProperty(o)){var s=n[o],a=i[s.sampler],c=a.inputs.INPUT,l=a.inputs.OUTPUT;!function(t,e){for(var n=t.keyframes,i=t.name,r=[],o=[],s=[],a=[],c=0,l=n.length;c<l;c++){var h=n[c],u=h.time,d=h.value;J.fromArray(d).transpose(),J.decompose(Y,Z,K),r.push(u),o.push(Y.x,Y.y,Y.z),s.push(Z.x,Z.y,Z.z,Z.w),a.push(K.x,K.y,K.z)}o.length>0&&e.push(new THREE.VectorKeyframeTrack(i+".position",r,o));s.length>0&&e.push(new THREE.QuaternionKeyframeTrack(i+".quaternion",r,s));a.length>0&&e.push(new THREE.VectorKeyframeTrack(i+".scale",r,a))}(function(t,e,n){var i,r,o,s,a,c,l=ct.nodes[t.id],h=j(l.id),u=l.transforms[t.sid],d=l.matrix.clone().transpose(),p={};switch(u){case"matrix":for(o=0,s=e.array.length;o<s;o++)if(i=e.array[o],r=o*n.stride,void 0===p[i]&&(p[i]={}),!0===t.arraySyntax){var f=n.array[r],m=t.indices[0]+4*t.indices[1];p[i][m]=f}else for(a=0,c=n.stride;a<c;a++)p[i][a]=n.array[r+a];break;case"translate":case"rotate":case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',u)}var g=function(t,e){var n=[];for(var i in t)n.push({time:parseFloat(i),value:t[i]});n.sort(function(t,e){return t.time-e.time});for(var r=0;r<16;r++)!function(t,e,n){var i,r,o,s=!0;for(r=0,o=t.length;r<o;r++)void 0===(i=t[r]).value[e]?i.value[e]=null:s=!1;if(!0===s)for(r=0,o=t.length;r<o;r++)(i=t[r]).value[e]=n;else!function(t,e){for(var n,i,r=0,o=t.length;r<o;r++){var s=t[r];if(null===s.value[e]){if(n=function(t,e,n){for(;e>=0;){var i=t[e];if(null!==i.value[n])return i;e--}return null}(t,r,e),i=function(t,e,n){for(;e<t.length;){var i=t[e];if(null!==i.value[n])return i;e++}return null}(t,r,e),null===n){s.value[e]=i.value[e];continue}if(null===i){s.value[e]=n.value[e];continue}!function(t,e,n,i){if(n.time-e.time==0)return void(t.value[i]=e.value[i]);t.value[i]=(t.time-e.time)*(n.value[i]-e.value[i])/(n.time-e.time)+e.value[i]}(s,n,i,e)}}}(t,e)}(n,r,e.elements[r]);return n}(p,d);return{name:h.uuid,keyframes:g}}(s,r[c],r[l]),e)}return e}function p(t){return u(ct.animations[t],d)}function f(t){for(var e=[],n=t.name,i=t.end-t.start||-1,r=t.animations,o=0,s=r.length;o<s;o++)for(var a=p(r[o]),c=0,l=a.length;c<l;c++)e.push(a[c]);return new THREE.AnimationClip(n,i,e)}function m(t){return u(ct.clips[t],f)}function g(t){var e={id:t.id},n=ct.geometries[e.id];return void 0!==t.skin&&(e.skin=function(t){function e(t,e){return e.weight-t.weight}var n,i,r,o={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},s=t.sources,a=t.vertexWeights,c=a.vcount,l=a.v,h=a.inputs.JOINT.offset,u=a.inputs.WEIGHT.offset,d=t.sources[t.joints.inputs.JOINT],p=t.sources[t.joints.inputs.INV_BIND_MATRIX],f=s[a.inputs.WEIGHT.id].array,m=0;for(n=0,r=c.length;n<r;n++){var g=c[n],v=[];for(i=0;i<g;i++){var y=l[m+h],x=l[m+u],_=f[x];v.push({index:y,weight:_}),m+=2}for(v.sort(e),i=0;i<4;i++){var b=v[i];void 0!==b?(o.indices.array.push(b.index),o.weights.array.push(b.weight)):(o.indices.array.push(0),o.weights.array.push(0))}}t.bindShapeMatrix?o.bindMatrix=(new THREE.Matrix4).fromArray(t.bindShapeMatrix).transpose():o.bindMatrix=(new THREE.Matrix4).identity();for(n=0,r=d.array.length;n<r;n++){var E=d.array[n],w=(new THREE.Matrix4).fromArray(p.array,n*p.stride).transpose();o.joints.push({name:E,boneInverse:w})}return o}(t.skin),n.sources.skinIndices=e.skin.indices,n.sources.skinWeights=e.skin.weights),e}function v(t){return u(ct.controllers[t],g)}function y(t){return void 0!==t.build?t.build:t.init_from}function x(t){var e=ct.images[t];return void 0!==e?u(e,y):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",t),null)}function _(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var o=t.childNodes[n];if(1===o.nodeType)switch(o.nodeName){case"color":e[o.nodeName]=r(o.textContent);break;case"float":e[o.nodeName]=parseFloat(o.textContent);break;case"texture":e[o.nodeName]={id:o.getAttribute("texture"),extra:function(t){for(var e={technique:{}},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"extra":!function(t,e){for(var n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"technique":!function(t,e){for(var n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":e.technique[r.nodeName]=parseFloat(r.textContent);break;case"wrapU":case"wrapV":"TRUE"===r.textContent.toUpperCase()?e.technique[r.nodeName]=1:"FALSE"===r.textContent.toUpperCase()?e.technique[r.nodeName]=0:e.technique[r.nodeName]=parseInt(r.textContent)}}}(r,e)}}}(r,e)}}return e}(o)}}}return e}function b(t){return t}function E(t){function e(t){var e=i.profile.samplers[t.id],n=null;if(void 0!==e){n=x(i.profile.surfaces[e.source].init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),n=x(t.id);if(null!==n){var r=function(t){var e,n=t.slice(2+(t.lastIndexOf(".")-1>>>0));switch(n=n.toLowerCase()){case"tga":e=rt;break;default:e=it}return e}(n);if(void 0!==r){var o=r.load(n),s=t.extra;if(void 0!==s&&void 0!==s.technique&&!1===c(s.technique)){var a=s.technique;o.wrapS=a.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,o.wrapT=a.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,o.offset.set(a.offsetU||0,a.offsetV||0),o.repeat.set(a.repeatU||1,a.repeatV||1)}else o.wrapS=THREE.RepeatWrapping,o.wrapT=THREE.RepeatWrapping;return o}return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",n),null}return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",t.id),null}var n,i=function(t){return u(ct.effects[t],b)}(t.url),r=i.profile.technique,o=i.profile.extra;switch(r.type){case"phong":case"blinn":n=new THREE.MeshPhongMaterial;break;case"lambert":n=new THREE.MeshLambertMaterial;break;default:n=new THREE.MeshBasicMaterial}n.name=t.name;var s=r.parameters;for(var a in s){var l=s[a];switch(a){case"diffuse":l.color&&n.color.fromArray(l.color),l.texture&&(n.map=e(l.texture));break;case"specular":l.color&&n.specular&&n.specular.fromArray(l.color),l.texture&&(n.specularMap=e(l.texture));break;case"bump":l.texture&&(n.normalMap=e(l.texture));break;case"ambient":l.texture&&(n.lightMap=e(l.texture));break;case"shininess":l.float&&n.shininess&&(n.shininess=l.float);break;case"emission":l.color&&n.emissive&&n.emissive.fromArray(l.color),l.texture&&(n.emissiveMap=e(l.texture))}}var h=s.transparent,d=s.transparency;if(void 0===d&&h&&(d={float:1}),void 0===h&&d&&(h={opaque:"A_ONE",data:{color:[1,1,1,1]}}),h&&d)if(h.data.texture)n.transparent=!0;else{var p=h.data.color;switch(h.opaque){case"A_ONE":n.opacity=p[3]*d.float;break;case"RGB_ZERO":n.opacity=1-p[0]*d.float;break;case"A_ZERO":n.opacity=1-p[3]*d.float;break;case"RGB_ONE":n.opacity=p[0]*d.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',h.opaque)}n.opacity<1&&(n.transparent=!0)}return void 0!==o&&void 0!==o.technique&&1===o.technique.double_sided&&(n.side=THREE.DoubleSide),n}function w(t){return u(ct.materials[t],E)}function M(t){var e;switch(t.optics.technique){case"perspective":e=new THREE.PerspectiveCamera(t.optics.parameters.yfov,t.optics.parameters.aspect_ratio,t.optics.parameters.znear,t.optics.parameters.zfar);break;case"orthographic":var n=t.optics.parameters.ymag,i=t.optics.parameters.xmag,r=t.optics.parameters.aspect_ratio;i=void 0===i?n*r:i,n=void 0===n?i/r:n,i*=.5,n*=.5,e=new THREE.OrthographicCamera(-i,i,n,-n,t.optics.parameters.znear,t.optics.parameters.zfar);break;default:e=new THREE.PerspectiveCamera}return e.name=t.name,e}function T(t){var e=ct.cameras[t];return void 0!==e?u(e,M):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",t),null)}function S(t){var e;switch(t.technique){case"directional":e=new THREE.DirectionalLight;break;case"point":e=new THREE.PointLight;break;case"spot":e=new THREE.SpotLight;break;case"ambient":e=new THREE.AmbientLight}return t.parameters.color&&e.color.copy(t.parameters.color),t.parameters.distance&&(e.distance=t.parameters.distance),e}function A(t){var e=ct.lights[t];return void 0!==e?u(e,S):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",t),null)}function R(t){for(var e={array:[],stride:3},o=0;o<t.childNodes.length;o++){var s=t.childNodes[o];if(1===s.nodeType)switch(s.nodeName){case"float_array":e.array=r(s.textContent);break;case"Name_array":e.array=i(s.textContent);break;case"technique_common":var a=n(s,"accessor")[0];void 0!==a&&(e.stride=parseInt(a.getAttribute("stride")))}}return e}function L(t){for(var e=0,n=0,i=t.length;n<i;n++){!0===t[n].hasUV&&e++}e>0&&e<t.length&&(t.uvsNeedsFix=!0)}function C(t){var e={},n=t.sources,i=t.vertices,r=t.primitives;if(0===r.length)return{};var o=function(t){for(var e={},n=0;n<t.length;n++){var i=t[n];void 0===e[i.type]&&(e[i.type]=[]),e[i.type].push(i)}return e}(r);for(var s in o){var a=o[s];L(a),e[s]=function(t,e,n){for(var i={},r={array:[],stride:0},o={array:[],stride:0},s={array:[],stride:0},a={array:[],stride:0},c={array:[],stride:0},l={array:[],stride:4},h={array:[],stride:4},u=new THREE.BufferGeometry,d=[],p=0,f=0;f<t.length;f++){var m=t[f],g=m.inputs,v=0;switch(m.type){case"lines":case"linestrips":v=2*m.count;break;case"triangles":v=3*m.count;break;case"polylist":for(var y=0;y<m.count;y++){var x=m.vcount[y];switch(x){case 3:v+=3;break;case 4:v+=6;break;default:v+=3*(x-2)}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",m.type)}u.addGroup(p,v,f),p+=v,m.material&&d.push(m.material);for(var _ in g){var b=g[_];switch(_){case"VERTEX":for(var E in n){var w=n[E];switch(E){case"POSITION":var M=r.array.length;if(P(m,e[w],b.offset,r.array),r.stride=e[w].stride,e.skinWeights&&e.skinIndices&&(P(m,e.skinIndices,b.offset,l.array),P(m,e.skinWeights,b.offset,h.array)),!1===m.hasUV&&!0===t.uvsNeedsFix)for(var v=(r.array.length-M)/r.stride,T=0;T<v;T++)s.array.push(0,0);break;case"NORMAL":P(m,e[w],b.offset,o.array),o.stride=e[w].stride;break;case"COLOR":P(m,e[w],b.offset,c.array),c.stride=e[w].stride;break;case"TEXCOORD":P(m,e[w],b.offset,s.array),s.stride=e[w].stride;break;case"TEXCOORD1":P(m,e[w],b.offset,a.array),s.stride=e[w].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',E)}}break;case"NORMAL":P(m,e[b.id],b.offset,o.array),o.stride=e[b.id].stride;break;case"COLOR":P(m,e[b.id],b.offset,c.array),c.stride=e[b.id].stride;break;case"TEXCOORD":P(m,e[b.id],b.offset,s.array),s.stride=e[b.id].stride;break;case"TEXCOORD1":P(m,e[b.id],b.offset,a.array),a.stride=e[b.id].stride}}}r.array.length>0&&u.addAttribute("position",new THREE.Float32BufferAttribute(r.array,r.stride));o.array.length>0&&u.addAttribute("normal",new THREE.Float32BufferAttribute(o.array,o.stride));c.array.length>0&&u.addAttribute("color",new THREE.Float32BufferAttribute(c.array,c.stride));s.array.length>0&&u.addAttribute("uv",new THREE.Float32BufferAttribute(s.array,s.stride));a.array.length>0&&u.addAttribute("uv2",new THREE.Float32BufferAttribute(a.array,a.stride));l.array.length>0&&u.addAttribute("skinIndex",new THREE.Float32BufferAttribute(l.array,l.stride));h.array.length>0&&u.addAttribute("skinWeight",new THREE.Float32BufferAttribute(h.array,h.stride));return i.data=u,i.type=t[0].type,i.materialKeys=d,i}(a,n,i)}return e}function P(t,e,n,i){function r(t){for(var e=o[t+n]*l,r=e+l;e<r;e++)i.push(c[e])}var o=t.p,s=t.stride,a=t.vcount,c=e.array,l=e.stride;if(void 0!==t.vcount)for(var h=0,u=0,d=a.length;u<d;u++){var p=a[u];if(4===p){var f=h+1*s,m=h+2*s,g=h+3*s;r(x=h+0*s),r(f),r(g),r(f),r(m),r(g)}else if(3===p){var f=h+1*s,m=h+2*s;r(x=h+0*s),r(f),r(m)}else if(p>4)for(var v=1,y=p-2;v<=y;v++){var x=h+0*s,f=h+s*v,m=h+s*(v+1);r(x),r(f),r(m)}h+=s*p}else for(var u=0,d=o.length;u<d;u+=s)r(u)}function N(t){return u(ct.geometries[t],C)}function D(t){return void 0!==t.build?t.build:t}function I(t){for(var e={sid:t.getAttribute("sid"),name:t.getAttribute("name")||"",attachments:[],transforms:[]},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"attachment_full":e.attachments.push(function(t){for(var e={joint:t.getAttribute("joint").split("/").pop(),transforms:[],links:[]},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"link":e.links.push(I(i));break;case"matrix":case"translate":case"rotate":e.transforms.push(O(i))}}return e}(i));break;case"matrix":case"translate":case"rotate":e.transforms.push(O(i))}}return e}function O(t){var e={type:t.nodeName},n=r(t.textContent);switch(e.type){case"matrix":e.obj=new THREE.Matrix4,e.obj.fromArray(n).transpose();break;case"translate":e.obj=new THREE.Vector3,e.obj.fromArray(n);break;case"rotate":e.obj=new THREE.Vector3,e.obj.fromArray(n),e.angle=THREE.MathUtils.degToRad(n[3])}return e}function F(t){return void 0!==t.build?t.build:t}function k(t){for(var e={name:t.getAttribute("name")||"",type:t.getAttribute("type"),id:t.getAttribute("id"),sid:t.getAttribute("sid"),matrix:new THREE.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"node":e.nodes.push(i.getAttribute("id")),k(i);break;case"instance_camera":e.instanceCameras.push(s(i.getAttribute("url")));break;case"instance_controller":e.instanceControllers.push(B(i));break;case"instance_light":e.instanceLights.push(s(i.getAttribute("url")));break;case"instance_geometry":e.instanceGeometries.push(B(i));break;case"instance_node":e.instanceNodes.push(s(i.getAttribute("url")));break;case"matrix":o=r(i.textContent);e.matrix.multiply(J.fromArray(o).transpose()),e.transforms[i.getAttribute("sid")]=i.nodeName;break;case"translate":o=r(i.textContent);Q.fromArray(o),e.matrix.multiply(J.makeTranslation(Q.x,Q.y,Q.z)),e.transforms[i.getAttribute("sid")]=i.nodeName;break;case"rotate":var o=r(i.textContent),a=THREE.MathUtils.degToRad(o[3]);e.matrix.multiply(J.makeRotationAxis(Q.fromArray(o),a)),e.transforms[i.getAttribute("sid")]=i.nodeName;break;case"scale":o=r(i.textContent);e.matrix.scale(Q.fromArray(o)),e.transforms[i.getAttribute("sid")]=i.nodeName;break;case"extra":break;default:console.log(i)}}return W(e.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",e.id):ct.nodes[e.id]=e,e}function B(t){for(var e={id:s(t.getAttribute("url")),materials:{},skeletons:[]},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];switch(i.nodeName){case"bind_material":for(var r=i.getElementsByTagName("instance_material"),o=0;o<r.length;o++){var a=r[o],c=a.getAttribute("symbol"),l=a.getAttribute("target");e.materials[c]=s(l)}break;case"skeleton":e.skeletons.push(s(i.textContent))}}return e}function H(t,e){var n,i,r=[],o=[];for(n=0;n<t.length;n++){var s=t[n];if(W(s))U(j(s),e,r);else if(function(t){return void 0!==ct.visualScenes[t]}(s))for(var a=ct.visualScenes[s].children,c=0;c<a.length;c++){var l=a[c];if("JOINT"===l.type){U(j(l.id),e,r)}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",s)}for(n=0;n<e.length;n++)for(c=0;c<r.length;c++)if((i=r[c]).bone.name===e[n].name){o[n]=i,i.processed=!0;break}for(n=0;n<r.length;n++)!1===(i=r[n]).processed&&(o.push(i),i.processed=!0);var h=[],u=[];for(n=0;n<o.length;n++)i=o[n],h.push(i.bone),u.push(i.boneInverse);return new THREE.Skeleton(h,u)}function U(t,e,n){t.traverse(function(t){if(!0===t.isBone){for(var i,r=0;r<e.length;r++){var o=e[r];if(o.name===t.name){i=o.boneInverse;break}}void 0===i&&(i=new THREE.Matrix4),n.push({bone:t,boneInverse:i,processed:!1})}})}function z(t){for(var e=[],n=t.matrix,i=t.nodes,r=t.type,o=t.instanceCameras,s=t.instanceControllers,a=t.instanceLights,c=t.instanceGeometries,l=t.instanceNodes,h=0,u=i.length;h<u;h++)e.push(j(i[h]));for(var h=0,u=o.length;h<u;h++){var d=T(o[h]);null!==d&&e.push(d.clone())}for(var h=0,u=s.length;h<u;h++)for(var p=v((_=s[h]).id),f=V(b=N(p.id),_.materials),m=H(_.skeletons,p.skin.joints),g=0,y=f.length;g<y;g++){(E=f[g]).isSkinnedMesh&&(E.bind(m,p.skin.bindMatrix),E.normalizeSkinWeights()),e.push(E)}for(var h=0,u=a.length;h<u;h++){var x=A(a[h]);null!==x&&e.push(x.clone())}for(var h=0,u=c.length;h<u;h++)for(var _=c[h],b=N(_.id),g=0,y=(f=V(b,_.materials)).length;g<y;g++)e.push(f[g]);for(var h=0,u=l.length;h<u;h++)e.push(j(l[h]).clone());var E;if(0===i.length&&1===e.length)E=e[0];else{E="JOINT"===r?new THREE.Bone:new THREE.Group;for(h=0;h<e.length;h++)E.add(e[h])}return""===E.name&&(E.name="JOINT"===r?t.sid:t.name),E.matrix.copy(n),E.matrix.decompose(E.position,E.quaternion,E.scale),E}function G(t,e){for(var n=[],i=0,r=t.length;i<r;i++){var o=e[t[i]];void 0===o?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",t[i]),n.push($)):n.push(w(o))}return n}function V(t,e){var n=[];for(var i in t){var r=t[i],o=G(r.materialKeys,e);0===o.length&&("lines"===i||"linestrips"===i?o.push(new THREE.LineBasicMaterial):o.push(new THREE.MeshPhongMaterial));var s=void 0!==r.data.attributes.skinIndex;if(s)for(var a=0,c=o.length;a<c;a++)o[a].skinning=!0;var l,h=1===o.length?o[0]:o;switch(i){case"lines":l=new THREE.LineSegments(r.data,h);break;case"linestrips":l=new THREE.Line(r.data,h);break;case"triangles":case"polylist":l=s?new THREE.SkinnedMesh(r.data,h):new THREE.Mesh(r.data,h)}n.push(l)}return n}function W(t){return void 0!==ct.nodes[t]}function j(t){return u(ct.nodes[t],z)}function X(t){var e=new THREE.Group;e.name=t.name;for(var n=t.children,i=0;i<n.length;i++){var r=n[i];e.add(j(r.id))}return e}function q(t){return u(ct.visualScenes[t],X)}var Y=new THREE.Vector3,K=new THREE.Vector3,Z=new THREE.Quaternion,J=new THREE.Matrix4,Q=new THREE.Vector3,$=new THREE.MeshBasicMaterial({color:16711935});if(0===t.length)return{scene:new THREE.Scene};var tt=n((new DOMParser).parseFromString(t,"application/xml"),"COLLADA")[0],et=tt.getAttribute("version");console.log("THREE.ColladaLoader: File version",et);var nt=function(t){return{unit:function(t){return void 0!==t&&!0===t.hasAttribute("meter")?parseFloat(t.getAttribute("meter")):1}(n(t,"unit")[0]),upAxis:function(t){return void 0!==t?t.textContent:"Y_UP"}(n(t,"up_axis")[0])}}(n(tt,"asset")[0]),it=new THREE.TextureLoader(this.manager);it.setPath(this.resourcePath||e).setCrossOrigin(this.crossOrigin);var rt;THREE.TGALoader&&(rt=new THREE.TGALoader(this.manager)).setPath(this.resourcePath||e);var ot=[],st={},at=0,ct={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};l(tt,"library_animations","animation",function(t){for(var e={sources:{},samplers:{},channels:{}},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType){var o;switch(r.nodeName){case"source":o=r.getAttribute("id"),e.sources[o]=R(r);break;case"sampler":o=r.getAttribute("id"),e.samplers[o]=function(t){for(var e={inputs:{}},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"input":var o=s(r.getAttribute("source")),a=r.getAttribute("semantic");e.inputs[a]=o}}return e}(r);break;case"channel":o=r.getAttribute("target"),e.channels[o]=function(t){var e={},n=t.getAttribute("target").split("/"),i=n.shift(),r=n.shift(),o=-1!==r.indexOf("("),a=-1!==r.indexOf(".");if(a)n=r.split("."),r=n.shift(),e.member=n.shift();else if(o){var c=r.split("(");r=c.shift();for(var l=0;l<c.length;l++)c[l]=parseInt(c[l].replace(/\)/,""));e.indices=c}return e.id=i,e.sid=r,e.arraySyntax=o,e.memberSyntax=a,e.sampler=s(t.getAttribute("source")),e}(r);break;default:console.log(r)}}}ct.animations[t.getAttribute("id")]=e}),l(tt,"library_animation_clips","animation_clip",function(t){for(var e={name:t.getAttribute("id")||"default",start:parseFloat(t.getAttribute("start")||0),end:parseFloat(t.getAttribute("end")||0),animations:[]},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"instance_animation":e.animations.push(s(r.getAttribute("url")))}}ct.clips[t.getAttribute("id")]=e}),l(tt,"library_controllers","controller",function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var a=t.childNodes[n];if(1===a.nodeType)switch(a.nodeName){case"skin":e.id=s(a.getAttribute("source")),e.skin=function(t){for(var e={sources:{}},n=0,i=t.childNodes.length;n<i;n++){var a=t.childNodes[n];if(1===a.nodeType)switch(a.nodeName){case"bind_shape_matrix":e.bindShapeMatrix=r(a.textContent);break;case"source":var c=a.getAttribute("id");e.sources[c]=R(a);break;case"joints":e.joints=function(t){for(var e={inputs:{}},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"input":var o=r.getAttribute("semantic"),a=s(r.getAttribute("source"));e.inputs[o]=a}}return e}(a);break;case"vertex_weights":e.vertexWeights=function(t){for(var e={inputs:{}},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"input":var a=r.getAttribute("semantic"),c=s(r.getAttribute("source")),l=parseInt(r.getAttribute("offset"));e.inputs[a]={id:c,offset:l};break;case"vcount":e.vcount=o(r.textContent);break;case"v":e.v=o(r.textContent)}}return e}(a)}}return e}(a);break;case"morph":e.id=s(a.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.")}}ct.controllers[t.getAttribute("id")]=e}),l(tt,"library_images","image",function(t){var e={init_from:n(t,"init_from")[0].textContent};ct.images[t.getAttribute("id")]=e}),l(tt,"library_effects","effect",function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"profile_COMMON":e.profile=function(t){for(var e={surfaces:{},samplers:{}},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"newparam":!function(t,e){for(var n=t.getAttribute("sid"),i=0,r=t.childNodes.length;i<r;i++){var o=t.childNodes[i];if(1===o.nodeType)switch(o.nodeName){case"surface":e.surfaces[n]=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"init_from":e.init_from=r.textContent}}return e}(o);break;case"sampler2D":e.samplers[n]=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"source":e.source=r.textContent}}return e}(o)}}}(r,e);break;case"technique":e.technique=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"constant":case"lambert":case"blinn":case"phong":e.type=r.nodeName,e.parameters=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":e[r.nodeName]=_(r);break;case"transparent":e[r.nodeName]={opaque:r.getAttribute("opaque"),data:_(r)}}}return e}(r)}}return e}(r);break;case"extra":e.extra=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"technique":e.technique=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"double_sided":e[r.nodeName]=parseInt(r.textContent)}}return e}(r)}}return e}(r)}}return e}(r)}}ct.effects[t.getAttribute("id")]=e}),l(tt,"library_materials","material",function(t){for(var e={name:t.getAttribute("name")},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"instance_effect":e.url=s(r.getAttribute("url"))}}ct.materials[t.getAttribute("id")]=e}),l(tt,"library_cameras","camera",function(t){for(var e={name:t.getAttribute("name")},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"optics":e.optics=function(t){for(var e=0;e<t.childNodes.length;e++){var n=t.childNodes[e];switch(n.nodeName){case"technique_common":return function(t){for(var e={},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];switch(i.nodeName){case"perspective":case"orthographic":e.technique=i.nodeName,e.parameters=function(t){for(var e={},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];switch(i.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":e[i.nodeName]=parseFloat(i.textContent)}}return e}(i)}}return e}(n)}}return{}}(r)}}ct.cameras[t.getAttribute("id")]=e}),l(tt,"library_lights","light",function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var o=t.childNodes[n];if(1===o.nodeType)switch(o.nodeName){case"technique_common":e=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var o=t.childNodes[n];if(1===o.nodeType)switch(o.nodeName){case"directional":case"point":case"spot":case"ambient":e.technique=o.nodeName,e.parameters=function(t){for(var e={},n=0,i=t.childNodes.length;n<i;n++){var o=t.childNodes[n];if(1===o.nodeType)switch(o.nodeName){case"color":var s=r(o.textContent);e.color=(new THREE.Color).fromArray(s);break;case"falloff_angle":e.falloffAngle=parseFloat(o.textContent);break;case"quadratic_attenuation":var a=parseFloat(o.textContent);e.distance=a?Math.sqrt(1/a):0}}return e}(o)}}return e}(o)}}ct.lights[t.getAttribute("id")]=e}),l(tt,"library_geometries","geometry",function(t){var e={name:t.getAttribute("name"),sources:{},vertices:{},primitives:[]},i=n(t,"mesh")[0];if(void 0!==i){for(var r=0;r<i.childNodes.length;r++){var a=i.childNodes[r];if(1===a.nodeType){var c=a.getAttribute("id");switch(a.nodeName){case"source":e.sources[c]=R(a);break;case"vertices":e.vertices=function(t){for(var e={},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];1===i.nodeType&&(e[i.getAttribute("semantic")]=s(i.getAttribute("source")))}return e}(a);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",a.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":e.primitives.push(function(t){for(var e={type:t.nodeName,material:t.getAttribute("material"),count:parseInt(t.getAttribute("count")),inputs:{},stride:0,hasUV:!1},n=0,i=t.childNodes.length;n<i;n++){var r=t.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"input":var a=s(r.getAttribute("source")),c=r.getAttribute("semantic"),l=parseInt(r.getAttribute("offset")),h=parseInt(r.getAttribute("set")),u=h>0?c+h:c;e.inputs[u]={id:a,offset:l},e.stride=Math.max(e.stride,l+1),"TEXCOORD"===c&&(e.hasUV=!0);break;case"vcount":e.vcount=o(r.textContent);break;case"p":e.p=o(r.textContent)}}return e}(a));break;default:console.log(a)}}}ct.geometries[t.getAttribute("id")]=e}}),l(tt,"library_nodes","node",k),l(tt,"library_visual_scenes","visual_scene",function(t){var e={name:t.getAttribute("name"),children:[]};!function(t){for(var e=t.getElementsByTagName("node"),n=0;n<e.length;n++){var i=e[n];!1===i.hasAttribute("id")&&i.setAttribute("id",a())}}(t);for(var i=n(t,"node"),r=0;r<i.length;r++)e.children.push(k(i[r]));ct.visualScenes[t.getAttribute("id")]=e}),l(tt,"library_kinematics_models","kinematics_model",function(t){for(var e={name:t.getAttribute("name")||"",joints:{},links:[]},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"technique_common":!function(t,e){for(var n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"joint":e.joints[i.getAttribute("sid")]=function(t){for(var e,n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"prismatic":case"revolute":e=function(t,e){for(var e={sid:t.getAttribute("sid"),name:t.getAttribute("name")||"",axis:new THREE.Vector3,limits:{min:0,max:0},type:t.nodeName,static:!1,zeroPosition:0,middlePosition:0},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"axis":var o=r(i.textContent);e.axis.fromArray(o);break;case"limits":var s=i.getElementsByTagName("max")[0],a=i.getElementsByTagName("min")[0];e.limits.max=parseFloat(s.textContent),e.limits.min=parseFloat(a.textContent)}}return e.limits.min>=e.limits.max&&(e.static=!0),e.middlePosition=(e.limits.min+e.limits.max)/2,e}(i)}}return e}(i);break;case"link":e.links.push(I(i))}}}(i,e)}}ct.kinematicsModels[t.getAttribute("id")]=e}),l(tt,"library_physics_models","physics_model",function(t){for(var e={name:t.getAttribute("name")||"",rigidBodies:{}},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"rigid_body":e.rigidBodies[i.getAttribute("name")]={},function(t,e){for(var n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"technique_common":!function(t,e){for(var n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"inertia":e.inertia=r(i.textContent);break;case"mass":e.mass=r(i.textContent)[0]}}}(i,e)}}}(i,e.rigidBodies[i.getAttribute("name")])}}ct.physicsModels[t.getAttribute("id")]=e}),l(tt,"scene","instance_kinematics_scene",function(t){for(var e={bindJointAxis:[]},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"bind_joint_axis":e.bindJointAxis.push(function(t){for(var e={target:t.getAttribute("target").split("/").pop()},n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case"axis":var r=i.getElementsByTagName("param")[0];e.axis=r.textContent;var o=e.axis.split("inst_").pop().split("axis")[0];e.jointIndex=o.substr(0,o.length-1)}}return e}(i))}}ct.kinematicsScenes[s(t.getAttribute("url"))]=e}),h(ct.animations,d),h(ct.clips,f),h(ct.controllers,g),h(ct.images,y),h(ct.effects,b),h(ct.materials,E),h(ct.cameras,M),h(ct.lights,S),h(ct.geometries,C),h(ct.visualScenes,X),function(){var t=ct.clips;if(!0===c(t)){if(!1===c(ct.animations)){var e=[];for(var n in ct.animations)for(var i=p(n),r=0,o=i.length;r<o;r++)e.push(i[r]);ot.push(new THREE.AnimationClip("default",-1,e))}}else for(var n in t)ot.push(m(n))}(),function(){function t(t,e){var n=e.getAttribute("name"),i=o.joints[t];a.traverse(function(o){o.name===n&&(l[t]={object:o,transforms:function(t){for(var e=[],n=tt.querySelector('[id="'+t.id+'"]'),i=0;i<n.childNodes.length;i++){var o=n.childNodes[i];if(1===o.nodeType)switch(o.nodeName){case"matrix":var s=r(o.textContent),a=(new THREE.Matrix4).fromArray(s).transpose();e.push({sid:o.getAttribute("sid"),type:o.nodeName,obj:a});break;case"translate":case"scale":var s=r(o.textContent),c=(new THREE.Vector3).fromArray(s);e.push({sid:o.getAttribute("sid"),type:o.nodeName,obj:c});break;case"rotate":var s=r(o.textContent),c=(new THREE.Vector3).fromArray(s),l=THREE.MathUtils.degToRad(s[3]);e.push({sid:o.getAttribute("sid"),type:o.nodeName,obj:c,angle:l})}}return e}(e),joint:i,position:i.zeroPosition})})}var e=Object.keys(ct.kinematicsModels)[0],n=Object.keys(ct.kinematicsScenes)[0],i=Object.keys(ct.visualScenes)[0];if(void 0!==e&&void 0!==n){for(var o=function(t){return u(ct.kinematicsModels[t],D)}(e),s=function(t){return u(ct.kinematicsScenes[t],F)}(n),a=q(i),c=s.bindJointAxis,l={},h=0,d=c.length;h<d;h++){var p=c[h],f=tt.querySelector('[sid="'+p.target+'"]');if(f){var m=f.parentElement;t(p.jointIndex,m)}}var g=new THREE.Matrix4;st={joints:o&&o.joints,getJointValue:function(t){var e=l[t];if(e)return e.position;console.warn("THREE.ColladaLoader: Joint "+t+" doesn't exist.")},setJointValue:function(t,e){var n=l[t];if(n){var i=n.joint;if(e>i.limits.max||e<i.limits.min)console.warn("THREE.ColladaLoader: Joint "+t+" value "+e+" outside of limits (min: "+i.limits.min+", max: "+i.limits.max+").");else if(i.static)console.warn("THREE.ColladaLoader: Joint "+t+" is static.");else{var r=n.object,o=i.axis,s=n.transforms;J.identity();for(var a=0;a<s.length;a++){var c=s[a];if(c.sid&&-1!==c.sid.indexOf(t))switch(i.type){case"revolute":J.multiply(g.makeRotationAxis(o,THREE.MathUtils.degToRad(e)));break;case"prismatic":J.multiply(g.makeTranslation(o.x*e,o.y*e,o.z*e));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+i.type)}else switch(c.type){case"matrix":J.multiply(c.obj);break;case"translate":J.multiply(g.makeTranslation(c.obj.x,c.obj.y,c.obj.z));break;case"scale":J.scale(c.obj);break;case"rotate":J.multiply(g.makeRotationAxis(c.obj,c.angle))}}r.matrix.copy(J),r.matrix.decompose(r.position,r.quaternion,r.scale),l[t].position=e}}else console.log("THREE.ColladaLoader: "+t+" does not exist.")}}}}();var lt=function(t){return q(s(n(t,"instance_visual_scene")[0].getAttribute("url")))}(n(tt,"scene")[0]);return"Z_UP"===nt.upAxis&&lt.quaternion.setFromEuler(new THREE.Euler(-Math.PI/2,0,0)),lt.scale.multiplyScalar(nt.unit),{animations:ot,kinematics:st,library:ct,scene:lt}}}},{}],4:[function(t,e,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r="function"==typeof Symbol&&"symbol"===i(Symbol.iterator)?function(t){return void 0===t?"undefined":i(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":void 0===t?"undefined":i(t)};e.exports=THREE.FBXLoader=function(){function t(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager}function e(t){this.textureLoader=t}function n(){}function i(){}function o(){}function s(){}function a(t,e){this.dv=new DataView(t),this.offset=0,this.littleEndian=void 0===e||e}function c(){}function l(t){var e=t.match(/FBXVersion: (\d+)/);if(e){return parseInt(e[1])}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function h(t){return t/46186158e3}function u(t,e,n,i){var r;switch(i.mappingType){case"ByPolygonVertex":r=t;break;case"ByPolygon":r=e;break;case"ByVertice":r=n;break;case"AllSame":r=i.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+i.mappingType)}"IndexToDirect"===i.referenceType&&(r=i.indices[r]);var o=r*i.dataSize,s=o+i.dataSize;return function(t,e,n,i){for(var r=n,o=0;r<i;r++,o++)t[o]=e[r];return t}(_,i.buffer,o,s)}function d(t){var e=new THREE.Matrix4;M.set(0,0,0),T.identity();var n=p(t.eulerOrder?t.eulerOrder:0);if(t.translation&&M.fromArray(t.translation),t.rotationOffset&&M.add(w.fromArray(t.rotationOffset)),t.rotation){(i=t.rotation.map(THREE.MathUtils.degToRad)).push(n),T.makeRotationFromEuler(E.fromArray(i))}if(t.preRotation){(i=t.preRotation.map(THREE.MathUtils.degToRad)).push(n),b.makeRotationFromEuler(E.fromArray(i)),T.premultiply(b)}if(t.postRotation){var i=t.postRotation.map(THREE.MathUtils.degToRad);i.push(n),b.makeRotationFromEuler(E.fromArray(i)),b.getInverse(b),T.multiply(b)}return t.scale&&e.scale(w.fromArray(t.scale)),e.setPosition(M),e.multiply(T),e}function p(t){var e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===t?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[t]}function f(t){return t.split(",").map(function(t){return parseFloat(t)})}function m(t,e,n){return void 0===e&&(e=0),void 0===n&&(n=t.byteLength),THREE.LoaderUtils.decodeText(new Uint8Array(t,e,n))}function g(t,e,n){return t.slice(0,e).concat(n).concat(t.slice(e))}var v,y,x;t.prototype={constructor:t,crossOrigin:"anonymous",load:function(t,e,n,i){var r=this,o=THREE.LoaderUtils.extractUrlBase(t),s=new THREE.FileLoader(this.manager);s.setResponseType("arraybuffer"),s.load(t,function(n){try{var s=r.parse(n,o);e(s)}catch(e){setTimeout(function(){i&&i(e),r.manager.itemError(t)},0)}},n,i)},setCrossOrigin:function(t){return this.crossOrigin=t,this},parse:function(t,n){if(function(t){var e="Kaydara FBX Binary  \0";return t.byteLength>=e.length&&e===m(t,0,e.length)}(t))v=(new s).parse(t);else{var i=m(t);if(!function(t){function e(e){var n=t[e-1];return t=t.slice(i+e),i++,n}for(var n=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],i=0,r=0;r<n.length;++r)if(e(1)===n[r])return!1;return!0}(i))throw new Error("THREE.FBXLoader: Unknown format.");if(l(i)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+l(i));v=(new o).parse(i)}return new e(new THREE.TextureLoader(this.manager).setPath(n).setCrossOrigin(this.crossOrigin)).parse(v)}},e.prototype={constructor:e,parse:function(){y=this.parseConnections();var t=this.parseImages(),e=this.parseTextures(t),i=this.parseMaterials(e),r=this.parseDeformers(),o=(new n).parse(r);return this.parseScene(r,o,i),x},parseConnections:function(){var t=new Map;if("Connections"in v){v.Connections.connections.forEach(function(e){var n=e[0],i=e[1],r=e[2];t.has(n)||t.set(n,{parents:[],children:[]});var o={ID:i,relationship:r};t.get(n).parents.push(o),t.has(i)||t.set(i,{parents:[],children:[]});var s={ID:n,relationship:r};t.get(i).children.push(s)})}return t},parseImages:function(){var t={},e={};if("Video"in v.Objects){var n=v.Objects.Video;for(var i in n){var r=n[i];if(t[c=parseInt(i)]=r.RelativeFilename||r.Filename,"Content"in r){var o=r.Content instanceof ArrayBuffer&&r.Content.byteLength>0,s="string"==typeof r.Content&&""!==r.Content;if(o||s){var a=this.parseImage(n[i]);e[r.RelativeFilename||r.Filename]=a}}}}for(var c in t){var l=t[c];void 0!==e[l]?t[c]=e[l]:t[c]=t[c].split("\\").pop()}return t},parseImage:function(t){var e,n=t.Content,i=t.RelativeFilename||t.Filename,r=i.slice(i.lastIndexOf(".")+1).toLowerCase();switch(r){case"bmp":e="image/bmp";break;case"jpg":case"jpeg":e="image/jpeg";break;case"png":e="image/png";break;case"tif":e="image/tiff";break;case"tga":if("function"!=typeof THREE.TGALoader)return void console.warn("FBXLoader: THREE.TGALoader is required to load TGA textures");null===THREE.Loader.Handlers.get(".tga")&&THREE.Loader.Handlers.add(/\.tga$/i,new THREE.TGALoader),e="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+r+'" is not supported.')}if("string"==typeof n)return"data:"+e+";base64,"+n;var o=new Uint8Array(n);return window.URL.createObjectURL(new Blob([o],{type:e}))},parseTextures:function(t){var e=new Map;if("Texture"in v.Objects){var n=v.Objects.Texture;for(var i in n){var r=this.parseTexture(n[i],t);e.set(parseInt(i),r)}}return e},parseTexture:function(t,e){var n=this.loadTexture(t,e);n.ID=t.id,n.name=t.attrName;var i=t.WrapModeU,r=t.WrapModeV,o=void 0!==i?i.value:0,s=void 0!==r?r.value:0;if(n.wrapS=0===o?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.wrapT=0===s?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,"Scaling"in t){var a=t.Scaling.value;n.repeat.x=a[0],n.repeat.y=a[1]}return n},loadTexture:function(t,e){var n,i=this.textureLoader.path,r=y.get(t.id).children;void 0!==r&&r.length>0&&void 0!==e[r[0].ID]&&(0!==(n=e[r[0].ID]).indexOf("blob:")&&0!==n.indexOf("data:")||this.textureLoader.setPath(void 0));var o,s=t.FileName.slice(-3).toLowerCase();if("tga"===s){var a=THREE.Loader.Handlers.get(".tga");null===a?(console.warn("FBXLoader: TGALoader not found, creating empty placeholder texture for",n),o=new THREE.Texture):o=a.load(n)}else"psd"===s?(console.warn("FBXLoader: PSD textures are not supported, creating empty placeholder texture for",n),o=new THREE.Texture):o=this.textureLoader.load(n);return this.textureLoader.setPath(i),o},parseMaterials:function(t){var e=new Map;if("Material"in v.Objects){var n=v.Objects.Material;for(var i in n){var r=this.parseMaterial(n[i],t);null!==r&&e.set(parseInt(i),r)}}return e},parseMaterial:function(t,e){var n=t.id,i=t.attrName,o=t.ShadingModel;if("object"===(void 0===o?"undefined":r(o))&&(o=o.value),!y.has(n))return null;var s,a=this.parseParameters(t,e,n);switch(o.toLowerCase()){case"phong":s=new THREE.MeshPhongMaterial;break;case"lambert":s=new THREE.MeshLambertMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',o),s=new THREE.MeshPhongMaterial({color:3342591})}return s.setValues(a),s.name=i,s},parseParameters:function(t,e,n){var i={};t.BumpFactor&&(i.bumpScale=t.BumpFactor.value),t.Diffuse?i.color=(new THREE.Color).fromArray(t.Diffuse.value):t.DiffuseColor&&"Color"===t.DiffuseColor.type&&(i.color=(new THREE.Color).fromArray(t.DiffuseColor.value)),t.DisplacementFactor&&(i.displacementScale=t.DisplacementFactor.value),t.Emissive?i.emissive=(new THREE.Color).fromArray(t.Emissive.value):t.EmissiveColor&&"Color"===t.EmissiveColor.type&&(i.emissive=(new THREE.Color).fromArray(t.EmissiveColor.value)),t.EmissiveFactor&&(i.emissiveIntensity=parseFloat(t.EmissiveFactor.value)),t.Opacity&&(i.opacity=parseFloat(t.Opacity.value)),i.opacity<1&&(i.transparent=!0),t.ReflectionFactor&&(i.reflectivity=t.ReflectionFactor.value),t.Shininess&&(i.shininess=t.Shininess.value),t.Specular?i.specular=(new THREE.Color).fromArray(t.Specular.value):t.SpecularColor&&"Color"===t.SpecularColor.type&&(i.specular=(new THREE.Color).fromArray(t.SpecularColor.value));var r=this;return y.get(n).children.forEach(function(t){var n=t.relationship;switch(n){case"Bump":i.bumpMap=r.getTexture(e,t.ID);break;case"DiffuseColor":i.map=r.getTexture(e,t.ID);break;case"DisplacementColor":i.displacementMap=r.getTexture(e,t.ID);break;case"EmissiveColor":i.emissiveMap=r.getTexture(e,t.ID);break;case"NormalMap":i.normalMap=r.getTexture(e,t.ID);break;case"ReflectionColor":i.envMap=r.getTexture(e,t.ID),i.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":i.specularMap=r.getTexture(e,t.ID);break;case"TransparentColor":i.alphaMap=r.getTexture(e,t.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",n)}}),i},getTexture:function(t,e){return"LayeredTexture"in v.Objects&&e in v.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),e=y.get(e).children[0].ID),t.get(e)},parseDeformers:function(){var t={},e={};if("Deformer"in v.Objects){var n=v.Objects.Deformer;for(var i in n){var r=n[i],o=y.get(parseInt(i));if("Skin"===r.attrType){var s=this.parseSkeleton(o,n);s.ID=i,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),s.geometryID=o.parents[0].ID,t[i]=s}else if("BlendShape"===r.attrType){var a={id:i};a.rawTargets=this.parseMorphTargets(o,n),a.id=i,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),e[i]=a}}}return{skeletons:t,morphTargets:e}},parseSkeleton:function(t,e){var n=[];return t.children.forEach(function(t){var i=e[t.ID];if("Cluster"===i.attrType){var r={ID:t.ID,indices:[],weights:[],transform:(new THREE.Matrix4).fromArray(i.Transform.a),transformLink:(new THREE.Matrix4).fromArray(i.TransformLink.a),linkMode:i.Mode};"Indexes"in i&&(r.indices=i.Indexes.a,r.weights=i.Weights.a),n.push(r)}}),{rawBones:n,bones:[]}},parseMorphTargets:function(t,e){for(var n=[],i=0;i<t.children.length;i++){if(8===i){console.warn("FBXLoader: maximum of 8 morph targets supported. Ignoring additional targets.");break}var r=t.children[i],o=e[r.ID],s={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if("BlendShapeChannel"!==o.attrType)return;y.get(parseInt(r.ID)).children.forEach(function(t){void 0===t.relationship&&(s.geoID=t.ID)}),n.push(s)}return n},parseScene:function(t,e,n){x=new THREE.Group;var r=this.parseModels(t.skeletons,e,n),o=v.Objects.Model,s=this;r.forEach(function(t){var e=o[t.ID];s.setLookAtProperties(t,e);y.get(t.ID).parents.forEach(function(e){var n=r.get(e.ID);void 0!==n&&n.add(t)}),null===t.parent&&x.add(t)}),this.bindSkeleton(t.skeletons,e,r),this.createAmbientLight(),this.setupMorphMaterials();var a=(new i).parse();1===x.children.length&&x.children[0].isGroup&&(x.children[0].animations=a,x=x.children[0]),x.animations=a},parseModels:function(t,e,n){var i=new Map,r=v.Objects.Model;for(var o in r){var s=parseInt(o),a=r[o],c=y.get(s),l=this.buildSkeleton(c,t,s,a.attrName);if(!l){switch(a.attrType){case"Camera":l=this.createCamera(c);break;case"Light":l=this.createLight(c);break;case"Mesh":l=this.createMesh(c,e,n);break;case"NurbsCurve":l=this.createCurve(c,e);break;case"LimbNode":case"Null":default:l=new THREE.Group}l.name=THREE.PropertyBinding.sanitizeNodeName(a.attrName),l.ID=s}this.setModelTransforms(l,a),i.set(s,l)}return i},buildSkeleton:function(t,e,n,i){var r=null;return t.parents.forEach(function(t){for(var o in e){var s=e[o];s.rawBones.forEach(function(e,o){if(e.ID===t.ID){var a=r;(r=new THREE.Bone).matrixWorld.copy(e.transformLink),r.name=THREE.PropertyBinding.sanitizeNodeName(i),r.ID=n,s.bones[o]=r,null!==a&&r.add(a)}})}}),r},createCamera:function(t){var e,n;if(t.children.forEach(function(t){var e=v.Objects.NodeAttribute[t.ID];void 0!==e&&(n=e)}),void 0===n)e=new THREE.Object3D;else{var i=0;void 0!==n.CameraProjectionType&&1===n.CameraProjectionType.value&&(i=1);var r=1;void 0!==n.NearPlane&&(r=n.NearPlane.value/1e3);var o=1e3;void 0!==n.FarPlane&&(o=n.FarPlane.value/1e3);var s=window.innerWidth,a=window.innerHeight;void 0!==n.AspectWidth&&void 0!==n.AspectHeight&&(s=n.AspectWidth.value,a=n.AspectHeight.value);var c=s/a,l=45;void 0!==n.FieldOfView&&(l=n.FieldOfView.value);var h=n.FocalLength?n.FocalLength.value:null;switch(i){case 0:e=new THREE.PerspectiveCamera(l,c,r,o),null!==h&&e.setFocalLength(h);break;case 1:e=new THREE.OrthographicCamera(-s/2,s/2,a/2,-a/2,r,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+i+"."),e=new THREE.Object3D}}return e},createLight:function(t){var e,n;if(t.children.forEach(function(t){var e=v.Objects.NodeAttribute[t.ID];void 0!==e&&(n=e)}),void 0===n)e=new THREE.Object3D;else{var i;i=void 0===n.LightType?0:n.LightType.value;var r=16777215;void 0!==n.Color&&(r=(new THREE.Color).fromArray(n.Color.value));var o=void 0===n.Intensity?1:n.Intensity.value/100;void 0!==n.CastLightOnObject&&0===n.CastLightOnObject.value&&(o=0);var s=0;void 0!==n.FarAttenuationEnd&&(s=void 0!==n.EnableFarAttenuation&&0===n.EnableFarAttenuation.value?0:n.FarAttenuationEnd.value);switch(i){case 0:e=new THREE.PointLight(r,o,s,1);break;case 1:e=new THREE.DirectionalLight(r,o);break;case 2:var a=Math.PI/3;void 0!==n.InnerAngle&&(a=THREE.MathUtils.degToRad(n.InnerAngle.value));var c=0;void 0!==n.OuterAngle&&(c=THREE.MathUtils.degToRad(n.OuterAngle.value),c=Math.max(c,1)),e=new THREE.SpotLight(r,o,s,a,c,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a THREE.PointLight."),e=new THREE.PointLight(r,o)}void 0!==n.CastShadows&&1===n.CastShadows.value&&(e.castShadow=!0)}return e},createMesh:function(t,e,n){var i,r=null,o=null,s=[];return t.children.forEach(function(t){e.has(t.ID)&&(r=e.get(t.ID)),n.has(t.ID)&&s.push(n.get(t.ID))}),s.length>1?o=s:s.length>0?o=s[0]:(o=new THREE.MeshPhongMaterial({color:13421772}),s.push(o)),"color"in r.attributes&&s.forEach(function(t){t.vertexColors=THREE.VertexColors}),r.FBX_Deformer?(s.forEach(function(t){t.skinning=!0}),i=new THREE.SkinnedMesh(r,o)):i=new THREE.Mesh(r,o),i},createCurve:function(t,e){var n=t.children.reduce(function(t,n){return e.has(n.ID)&&(t=e.get(n.ID)),t},null),i=new THREE.LineBasicMaterial({color:3342591,linewidth:1});return new THREE.Line(n,i)},setModelTransforms:function(t,e){var n={};"RotationOrder"in e&&(n.eulerOrder=parseInt(e.RotationOrder.value)),"Lcl_Translation"in e&&(n.translation=e.Lcl_Translation.value),"RotationOffset"in e&&(n.rotationOffset=e.RotationOffset.value),"Lcl_Rotation"in e&&(n.rotation=e.Lcl_Rotation.value),"PreRotation"in e&&(n.preRotation=e.PreRotation.value),"PostRotation"in e&&(n.postRotation=e.PostRotation.value),"Lcl_Scaling"in e&&(n.scale=e.Lcl_Scaling.value);var i=d(n);t.applyMatrix(i)},setLookAtProperties:function(t,e){if("LookAtProperty"in e){y.get(t.ID).children.forEach(function(e){if("LookAtProperty"===e.relationship){var n=v.Objects.Model[e.ID];if("Lcl_Translation"in n){var i=n.Lcl_Translation.value;void 0!==t.target?(t.target.position.fromArray(i),x.add(t.target)):t.lookAt((new THREE.Vector3).fromArray(i))}}})}},bindSkeleton:function(t,e,n){var i=this.parsePoseNodes();for(var r in t){var o=t[r];y.get(parseInt(o.ID)).parents.forEach(function(t){if(e.has(t.ID)){var r=t.ID;y.get(r).parents.forEach(function(t){if(n.has(t.ID)){n.get(t.ID).bind(new THREE.Skeleton(o.bones),i[t.ID])}})}})}},parsePoseNodes:function(){var t={};if("Pose"in v.Objects){var e=v.Objects.Pose;for(var n in e)if("BindPose"===e[n].attrType){var i=e[n].PoseNode;Array.isArray(i)?i.forEach(function(e){t[e.Node]=(new THREE.Matrix4).fromArray(e.Matrix.a)}):t[i.Node]=(new THREE.Matrix4).fromArray(i.Matrix.a)}}return t},createAmbientLight:function(){if("GlobalSettings"in v&&"AmbientColor"in v.GlobalSettings){var t=v.GlobalSettings.AmbientColor.value,e=t[0],n=t[1],i=t[2];if(0!==e||0!==n||0!==i){var r=new THREE.Color(e,n,i);x.add(new THREE.AmbientLight(r,1))}}},setupMorphMaterials:function(){x.traverse(function(t){if(t.isMesh&&(t.geometry.morphAttributes.position||t.geometry.morphAttributes.normal)){var e=t.uuid,n=t.material.uuid,i=!1;x.traverse(function(t){t.isMesh&&t.material.uuid===n&&t.uuid!==e&&(i=!0)}),!0===i&&(t.material=t.material.clone()),t.material.morphTargets=!0}})}},n.prototype={constructor:n,parse:function(t){var e=new Map;if("Geometry"in v.Objects){var n=v.Objects.Geometry;for(var i in n){var r=y.get(parseInt(i)),o=this.parseGeometry(r,n[i],t);e.set(parseInt(i),o)}}return e},parseGeometry:function(t,e,n){switch(e.attrType){case"Mesh":return this.parseMeshGeometry(t,e,n);case"NurbsCurve":return this.parseNurbsGeometry(e)}},parseMeshGeometry:function(t,e,n){var i=n.skeletons,r=n.morphTargets,o=t.parents.map(function(t){return v.Objects.Model[t.ID]});if(0!==o.length){var s=t.children.reduce(function(t,e){return void 0!==i[e.ID]&&(t=i[e.ID]),t},null),a=t.children.reduce(function(t,e){return void 0!==r[e.ID]&&(t=r[e.ID]),t},null),c=o[0],l={};"RotationOrder"in c&&(l.eulerOrder=c.RotationOrder.value),"GeometricTranslation"in c&&(l.translation=c.GeometricTranslation.value),"GeometricRotation"in c&&(l.rotation=c.GeometricRotation.value),"GeometricScaling"in c&&(l.scale=c.GeometricScaling.value);var h=d(l);return this.genGeometry(e,s,a,h)}},genGeometry:function(t,e,n,i){var r=new THREE.BufferGeometry;t.attrName&&(r.name=t.attrName);var o=this.parseGeoNode(t,e),s=this.genBuffers(o),a=new THREE.Float32BufferAttribute(s.vertex,3);if(i.applyToBufferAttribute(a),r.addAttribute("position",a),s.colors.length>0&&r.addAttribute("color",new THREE.Float32BufferAttribute(s.colors,3)),e&&(r.addAttribute("skinIndex",new THREE.Uint16BufferAttribute(s.weightsIndices,4)),r.addAttribute("skinWeight",new THREE.Float32BufferAttribute(s.vertexWeights,4)),r.FBX_Deformer=e),s.normal.length>0){var c=new THREE.Float32BufferAttribute(s.normal,3);(new THREE.Matrix3).getNormalMatrix(i).applyToBufferAttribute(c),r.addAttribute("normal",c)}if(s.uvs.forEach(function(t,e){var n="uv"+(e+1).toString();0===e&&(n="uv"),r.addAttribute(n,new THREE.Float32BufferAttribute(s.uvs[e],2))}),o.material&&"AllSame"!==o.material.mappingType){var l=s.materialIndex[0],h=0;if(s.materialIndex.forEach(function(t,e){t!==l&&(r.addGroup(h,e-h,l),l=t,h=e)}),r.groups.length>0){var u=r.groups[r.groups.length-1],d=u.start+u.count;d!==s.materialIndex.length&&r.addGroup(d,s.materialIndex.length-d,l)}0===r.groups.length&&r.addGroup(0,s.materialIndex.length,s.materialIndex[0])}return this.addMorphTargets(r,t,n,i),r},parseGeoNode:function(t,e){var n={};if(n.vertexPositions=void 0!==t.Vertices?t.Vertices.a:[],n.vertexIndices=void 0!==t.PolygonVertexIndex?t.PolygonVertexIndex.a:[],t.LayerElementColor&&(n.color=this.parseVertexColors(t.LayerElementColor[0])),t.LayerElementMaterial&&(n.material=this.parseMaterialIndices(t.LayerElementMaterial[0])),t.LayerElementNormal&&(n.normal=this.parseNormals(t.LayerElementNormal[0])),t.LayerElementUV){n.uv=[];for(var i=0;t.LayerElementUV[i];)n.uv.push(this.parseUVs(t.LayerElementUV[i])),i++}return n.weightTable={},null!==e&&(n.skeleton=e,e.rawBones.forEach(function(t,e){t.indices.forEach(function(i,r){void 0===n.weightTable[i]&&(n.weightTable[i]=[]),n.weightTable[i].push({id:e,weight:t.weights[r]})})})),n},genBuffers:function(t){var e={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},n=0,i=0,r=!1,o=[],s=[],a=[],c=[],l=[],h=[],d=this;return t.vertexIndices.forEach(function(p,f){var m=!1;p<0&&(p^=-1,m=!0);var g=[],v=[];if(o.push(3*p,3*p+1,3*p+2),t.color){b=u(f,n,p,t.color);a.push(b[0],b[1],b[2])}if(t.skeleton){if(void 0!==t.weightTable[p]&&t.weightTable[p].forEach(function(t){v.push(t.weight),g.push(t.id)}),v.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);var y=[0,0,0,0],x=[0,0,0,0];v.forEach(function(t,e){var n=t,i=g[e];x.forEach(function(t,e,r){if(n>t){r[e]=n,n=t;var o=y[e];y[e]=i,i=o}})}),g=y,v=x}for(;v.length<4;)v.push(0),g.push(0);for(var _=0;_<4;++_)l.push(v[_]),h.push(g[_])}if(t.normal){var b=u(f,n,p,t.normal);s.push(b[0],b[1],b[2])}if(t.material&&"AllSame"!==t.material.mappingType)var E=u(f,n,p,t.material)[0];t.uv&&t.uv.forEach(function(t,e){var i=u(f,n,p,t);void 0===c[e]&&(c[e]=[]),c[e].push(i[0]),c[e].push(i[1])}),i++,m&&(d.genFace(e,t,o,E,s,a,c,l,h,i),n++,i=0,o=[],s=[],a=[],c=[],l=[],h=[])}),e},genFace:function(t,e,n,i,r,o,s,a,c,l){for(var h=2;h<l;h++)t.vertex.push(e.vertexPositions[n[0]]),t.vertex.push(e.vertexPositions[n[1]]),t.vertex.push(e.vertexPositions[n[2]]),t.vertex.push(e.vertexPositions[n[3*(h-1)]]),t.vertex.push(e.vertexPositions[n[3*(h-1)+1]]),t.vertex.push(e.vertexPositions[n[3*(h-1)+2]]),t.vertex.push(e.vertexPositions[n[3*h]]),t.vertex.push(e.vertexPositions[n[3*h+1]]),t.vertex.push(e.vertexPositions[n[3*h+2]]),e.skeleton&&(t.vertexWeights.push(a[0]),t.vertexWeights.push(a[1]),t.vertexWeights.push(a[2]),t.vertexWeights.push(a[3]),t.vertexWeights.push(a[4*(h-1)]),t.vertexWeights.push(a[4*(h-1)+1]),t.vertexWeights.push(a[4*(h-1)+2]),t.vertexWeights.push(a[4*(h-1)+3]),t.vertexWeights.push(a[4*h]),t.vertexWeights.push(a[4*h+1]),t.vertexWeights.push(a[4*h+2]),t.vertexWeights.push(a[4*h+3]),t.weightsIndices.push(c[0]),t.weightsIndices.push(c[1]),t.weightsIndices.push(c[2]),t.weightsIndices.push(c[3]),t.weightsIndices.push(c[4*(h-1)]),t.weightsIndices.push(c[4*(h-1)+1]),t.weightsIndices.push(c[4*(h-1)+2]),t.weightsIndices.push(c[4*(h-1)+3]),t.weightsIndices.push(c[4*h]),t.weightsIndices.push(c[4*h+1]),t.weightsIndices.push(c[4*h+2]),t.weightsIndices.push(c[4*h+3])),e.color&&(t.colors.push(o[0]),t.colors.push(o[1]),t.colors.push(o[2]),t.colors.push(o[3*(h-1)]),t.colors.push(o[3*(h-1)+1]),t.colors.push(o[3*(h-1)+2]),t.colors.push(o[3*h]),t.colors.push(o[3*h+1]),t.colors.push(o[3*h+2])),e.material&&"AllSame"!==e.material.mappingType&&(t.materialIndex.push(i),t.materialIndex.push(i),t.materialIndex.push(i)),e.normal&&(t.normal.push(r[0]),t.normal.push(r[1]),t.normal.push(r[2]),t.normal.push(r[3*(h-1)]),t.normal.push(r[3*(h-1)+1]),t.normal.push(r[3*(h-1)+2]),t.normal.push(r[3*h]),t.normal.push(r[3*h+1]),t.normal.push(r[3*h+2])),e.uv&&e.uv.forEach(function(e,n){void 0===t.uvs[n]&&(t.uvs[n]=[]),t.uvs[n].push(s[n][0]),t.uvs[n].push(s[n][1]),t.uvs[n].push(s[n][2*(h-1)]),t.uvs[n].push(s[n][2*(h-1)+1]),t.uvs[n].push(s[n][2*h]),t.uvs[n].push(s[n][2*h+1])})},addMorphTargets:function(t,e,n,i){if(null!==n){t.morphAttributes.position=[],t.morphAttributes.normal=[];var r=this;n.rawTargets.forEach(function(n){var o=v.Objects.Geometry[n.geoID];void 0!==o&&r.genMorphGeometry(t,e,o,i)})}},genMorphGeometry:function(t,e,n,i){var r=new THREE.BufferGeometry;n.attrName&&(r.name=n.attrName);for(var o=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],s=void 0!==e.Vertices?e.Vertices.a.slice():[],a=void 0!==n.Vertices?n.Vertices.a:[],c=void 0!==n.Indexes?n.Indexes.a:[],l=0;l<c.length;l++){var h=3*c[l];s[h]+=a[3*l],s[h+1]+=a[3*l+1],s[h+2]+=a[3*l+2]}var u={vertexIndices:o,vertexPositions:s},d=this.genBuffers(u),p=new THREE.Float32BufferAttribute(d.vertex,3);p.name=n.attrName,i.applyToBufferAttribute(p),t.morphAttributes.position.push(p)},parseNormals:function(t){var e=t.MappingInformationType,n=t.ReferenceInformationType,i=t.Normals.a,r=[];return"IndexToDirect"===n&&("NormalIndex"in t?r=t.NormalIndex.a:"NormalsIndex"in t&&(r=t.NormalsIndex.a)),{dataSize:3,buffer:i,indices:r,mappingType:e,referenceType:n}},parseUVs:function(t){var e=t.MappingInformationType,n=t.ReferenceInformationType,i=t.UV.a,r=[];return"IndexToDirect"===n&&(r=t.UVIndex.a),{dataSize:2,buffer:i,indices:r,mappingType:e,referenceType:n}},parseVertexColors:function(t){var e=t.MappingInformationType,n=t.ReferenceInformationType,i=t.Colors.a,r=[];return"IndexToDirect"===n&&(r=t.ColorIndex.a),{dataSize:4,buffer:i,indices:r,mappingType:e,referenceType:n}},parseMaterialIndices:function(t){var e=t.MappingInformationType,n=t.ReferenceInformationType;if("NoMappingInformation"===e)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};for(var i=t.Materials.a,r=[],o=0;o<i.length;++o)r.push(o);return{dataSize:1,buffer:i,indices:r,mappingType:e,referenceType:n}},parseNurbsGeometry:function(t){if(void 0===THREE.NURBSCurve)return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new THREE.BufferGeometry;var e=parseInt(t.Order);if(isNaN(e))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",t.Order,t.id),new THREE.BufferGeometry;for(var n=e-1,i=t.KnotVector.a,r=[],o=t.Points.a,s=0,a=o.length;s<a;s+=4)r.push((new THREE.Vector4).fromArray(o,s));var c,l;if("Closed"===t.Form)r.push(r[0]);else if("Periodic"===t.Form){c=n,l=i.length-1-c;for(s=0;s<n;++s)r.push(r[s])}var h=new THREE.NURBSCurve(n,i,r,c,l).getPoints(7*r.length),u=new Float32Array(3*h.length);h.forEach(function(t,e){t.toArray(u,3*e)});var d=new THREE.BufferGeometry;return d.addAttribute("position",new THREE.BufferAttribute(u,3)),d}},i.prototype={constructor:i,parse:function(){var t=[],e=this.parseClips();if(void 0===e)return t;for(var n in e){var i=e[n],r=this.addClip(i);t.push(r)}return t},parseClips:function(){if(void 0!==v.Objects.AnimationCurve){var t=this.parseAnimationCurveNodes();this.parseAnimationCurves(t);var e=this.parseAnimationLayers(t);return this.parseAnimStacks(e)}},parseAnimationCurveNodes:function(){var t=v.Objects.AnimationCurveNode,e=new Map;for(var n in t){var i=t[n];if(null!==i.attrName.match(/S|R|T|DeformPercent/)){var r={id:i.id,attr:i.attrName,curves:{}};e.set(r.id,r)}}return e},parseAnimationCurves:function(t){var e=v.Objects.AnimationCurve;for(var n in e){var i={id:e[n].id,times:e[n].KeyTime.a.map(h),values:e[n].KeyValueFloat.a},r=y.get(i.id);if(void 0!==r){var o=r.parents[0].ID,s=r.parents[0].relationship;s.match(/X/)?t.get(o).curves.x=i:s.match(/Y/)?t.get(o).curves.y=i:s.match(/Z/)?t.get(o).curves.z=i:s.match(/d|DeformPercent/)&&t.has(o)&&(t.get(o).curves.morph=i)}}},parseAnimationLayers:function(t){var e=v.Objects.AnimationLayer,n=new Map;for(var i in e){var r=[],o=y.get(parseInt(i));if(void 0!==o){var s=this;o.children.forEach(function(e,n){if(t.has(e.ID)){var i=t.get(e.ID);if(void 0!==i.curves.x||void 0!==i.curves.y||void 0!==i.curves.z){if(void 0===r[n]){y.get(e.ID).parents.forEach(function(t){void 0!==t.relationship&&(u=t.ID)});var o=v.Objects.Model[u.toString()],a={modelName:THREE.PropertyBinding.sanitizeNodeName(o.attrName),initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1],transform:s.getModelAnimTransform(o)};"PreRotation"in o&&(a.preRotations=o.PreRotation.value),"PostRotation"in o&&(a.postRotations=o.PostRotation.value),r[n]=a}r[n][i.attr]=i}else if(void 0!==i.curves.morph){if(void 0===r[n]){var c;y.get(e.ID).parents.forEach(function(t){void 0!==t.relationship&&(c=t.ID)});var l=y.get(c).parents[0].ID,h=y.get(l).parents[0].ID,u=y.get(h).parents[0].ID,o=v.Objects.Model[u],a={modelName:THREE.PropertyBinding.sanitizeNodeName(o.attrName),morphName:v.Objects.Deformer[c].attrName};r[n]=a}r[n][i.attr]=i}}}),n.set(parseInt(i),r)}}return n},getModelAnimTransform:function(t){var e={};return"RotationOrder"in t&&(e.eulerOrder=parseInt(t.RotationOrder.value)),"Lcl_Translation"in t&&(e.translation=t.Lcl_Translation.value),"RotationOffset"in t&&(e.rotationOffset=t.RotationOffset.value),"Lcl_Rotation"in t&&(e.rotation=t.Lcl_Rotation.value),"PreRotation"in t&&(e.preRotation=t.PreRotation.value),"PostRotation"in t&&(e.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(e.scale=t.Lcl_Scaling.value),d(e)},parseAnimStacks:function(t){var e=v.Objects.AnimationStack,n={};for(var i in e){var r=y.get(parseInt(i)).children;r.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var o=t.get(r[0].ID);n[i]={name:e[i].attrName,layer:o}}return n},addClip:function(t){var e=[],n=this;return t.layer.forEach(function(t){e=e.concat(n.generateTracks(t))}),new THREE.AnimationClip(t.name,-1,e)},generateTracks:function(t){var e=[],n=new THREE.Vector3,i=new THREE.Quaternion,r=new THREE.Vector3;if(t.transform&&t.transform.decompose(n,i,r),n=n.toArray(),i=(new THREE.Euler).setFromQuaternion(i).toArray(),r=r.toArray(),void 0!==t.T&&Object.keys(t.T.curves).length>0){var o=this.generateVectorTrack(t.modelName,t.T.curves,n,"position");void 0!==o&&e.push(o)}if(void 0!==t.R&&Object.keys(t.R.curves).length>0){var s=this.generateRotationTrack(t.modelName,t.R.curves,i,t.preRotations,t.postRotations);void 0!==s&&e.push(s)}if(void 0!==t.S&&Object.keys(t.S.curves).length>0){var a=this.generateVectorTrack(t.modelName,t.S.curves,r,"scale");void 0!==a&&e.push(a)}if(void 0!==t.DeformPercent){var c=this.generateMorphTrack(t);void 0!==c&&e.push(c)}return e},generateVectorTrack:function(t,e,n,i){var r=this.getTimesForAllAxes(e),o=this.getKeyframeTrackValues(r,e,n);return new THREE.VectorKeyframeTrack(t+"."+i,r,o)},generateRotationTrack:function(t,e,n,i,r){void 0!==e.x&&(this.interpolateRotations(e.x),e.x.values=e.x.values.map(THREE.MathUtils.degToRad)),void 0!==e.y&&(this.interpolateRotations(e.y),e.y.values=e.y.values.map(THREE.MathUtils.degToRad)),void 0!==e.z&&(this.interpolateRotations(e.z),e.z.values=e.z.values.map(THREE.MathUtils.degToRad));var o=this.getTimesForAllAxes(e),s=this.getKeyframeTrackValues(o,e,n);void 0!==i&&((i=i.map(THREE.MathUtils.degToRad)).push("ZYX"),i=(new THREE.Euler).fromArray(i),i=(new THREE.Quaternion).setFromEuler(i)),void 0!==r&&((r=r.map(THREE.MathUtils.degToRad)).push("ZYX"),r=(new THREE.Euler).fromArray(r),r=(new THREE.Quaternion).setFromEuler(r).inverse());for(var a=new THREE.Quaternion,c=new THREE.Euler,l=[],h=0;h<s.length;h+=3)c.set(s[h],s[h+1],s[h+2],"ZYX"),a.setFromEuler(c),void 0!==i&&a.premultiply(i),void 0!==r&&a.multiply(r),a.toArray(l,h/3*4);return new THREE.QuaternionKeyframeTrack(t+".quaternion",o,l)},generateMorphTrack:function(t){var e=t.DeformPercent.curves.morph,n=e.values.map(function(t){return t/100}),i=x.getObjectByName(t.modelName).morphTargetDictionary[t.morphName];return new THREE.NumberKeyframeTrack(t.modelName+".morphTargetInfluences["+i+"]",e.times,n)},getTimesForAllAxes:function(t){var e=[];return void 0!==t.x&&(e=e.concat(t.x.times)),void 0!==t.y&&(e=e.concat(t.y.times)),void 0!==t.z&&(e=e.concat(t.z.times)),e=e.sort(function(t,e){return t-e}).filter(function(t,e,n){return n.indexOf(t)==e})},getKeyframeTrackValues:function(t,e,n){var i=n,r=[],o=-1,s=-1,a=-1;return t.forEach(function(t){if(e.x&&(o=e.x.times.indexOf(t)),e.y&&(s=e.y.times.indexOf(t)),e.z&&(a=e.z.times.indexOf(t)),-1!==o){var n=e.x.values[o];r.push(n),i[0]=n}else r.push(i[0]);if(-1!==s){var c=e.y.values[s];r.push(c),i[1]=c}else r.push(i[1]);if(-1!==a){var l=e.z.values[a];r.push(l),i[2]=l}else r.push(i[2])}),r},interpolateRotations:function(t){for(var e=1;e<t.values.length;e++){var n=t.values[e-1],i=t.values[e]-n,r=Math.abs(i);if(r>=180){for(var o=r/180,s=i/o,a=n+s,c=t.times[e-1],l=(t.times[e]-c)/o,h=c+l,u=[],d=[];h<t.times[e];)u.push(h),h+=l,d.push(a),a+=s;t.times=g(t.times,e,u),t.values=g(t.values,e,d)}}}},o.prototype={constructor:o,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(t){this.nodeStack.push(t),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(t,e){this.currentProp=t,this.currentPropName=e},parse:function(t){this.currentIndent=0,console.log("FBXTree: ",c),this.allNodes=new c,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var e=this,n=t.split(/[\r\n]+/);return n.forEach(function(t,i){var r=t.match(/^[\s\t]*;/),o=t.match(/^[\s\t]*$/);if(!r&&!o){var s=t.match("^\\t{"+e.currentIndent+"}(\\w+):(.*){",""),a=t.match("^\\t{"+e.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),c=t.match("^\\t{"+(e.currentIndent-1)+"}}");s?e.parseNodeBegin(t,s):a?e.parseNodeProperty(t,a,n[++i]):c?e.popStack():t.match(/^[^\s\t}]/)&&e.parseNodePropertyContinued(t)}}),this.allNodes},parseNodeBegin:function(t,e){var n=e[1].trim().replace(/^"/,"").replace(/"$/,""),i=e[2].split(",").map(function(t){return t.trim().replace(/^"/,"").replace(/"$/,"")}),r={name:n},o=this.parseNodeAttr(i),s=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(n,r):n in s?("PoseNode"===n?s.PoseNode.push(r):void 0!==s[n].id&&(s[n]={},s[n][s[n].id]=s[n]),""!==o.id&&(s[n][o.id]=r)):"number"==typeof o.id?(s[n]={},s[n][o.id]=r):"Properties70"!==n&&(s[n]="PoseNode"===n?[r]:r),"number"==typeof o.id&&(r.id=o.id),""!==o.name&&(r.attrName=o.name),""!==o.type&&(r.attrType=o.type),this.pushStack(r)},parseNodeAttr:function(t){var e=t[0];""!==t[0]&&(e=parseInt(t[0]),isNaN(e)&&(e=t[0]));var n="",i="";return t.length>1&&(n=t[1].replace(/^(\w+)::/,""),i=t[2]),{id:e,name:n,type:i}},parseNodeProperty:function(t,e,n){var i=e[1].replace(/^"/,"").replace(/"$/,"").trim(),r=e[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===i&&","===r&&(r=n.replace(/"/g,"").replace(/,$/,"").trim());var o=this.getCurrentNode();if("Properties70"!==o.name){if("C"===i){var s=r.split(",").slice(1),a=parseInt(s[0]),c=parseInt(s[1]),l=r.split(",").slice(3);i="connections",function(t,e){for(var n=0,i=t.length,r=e.length;n<r;n++,i++)t[i]=e[n]}(r=[a,c],l=l.map(function(t){return t.trim().replace(/^"/,"")})),void 0===o[i]&&(o[i]=[])}"Node"===i&&(o.id=r),i in o&&Array.isArray(o[i])?o[i].push(r):"a"!==i?o[i]=r:o.a=r,this.setCurrentProp(o,i),"a"===i&&","!==r.slice(-1)&&(o.a=f(r))}else this.parseNodeSpecialProperty(t,i,r)},parseNodePropertyContinued:function(t){var e=this.getCurrentNode();e.a+=t,","!==t.slice(-1)&&(e.a=f(e.a))},parseNodeSpecialProperty:function(t,e,n){var i=n.split('",').map(function(t){return t.trim().replace(/^\"/,"").replace(/\s/,"_")}),r=i[0],o=i[1],s=i[2],a=i[3],c=i[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=f(c)}this.getPrevNode()[r]={type:o,type2:s,flag:a,value:c},this.setCurrentProp(this.getPrevNode(),r)}},s.prototype={constructor:s,parse:function(t){var e=new a(t);e.skip(23);var n=e.getUint32();console.log("THREE.FBXLoader: FBX binary version: "+n);for(var i=new c;!this.endOfContent(e);){var r=this.parseNode(e,n);null!==r&&i.add(r.name,r)}return i},endOfContent:function(t){return t.size()%16==0?(t.getOffset()+160+16&-16)>=t.size():t.getOffset()+160+16>=t.size()},parseNode:function(t,e){var n={},i=e>=7500?t.getUint64():t.getUint32(),r=e>=7500?t.getUint64():t.getUint32(),o=(e>=7500?t.getUint64():t.getUint32(),t.getUint8()),s=t.getString(o);if(0===i)return null;for(var a=[],c=0;c<r;c++)a.push(this.parseProperty(t));var l=a.length>0?a[0]:"",h=a.length>1?a[1]:"",u=a.length>2?a[2]:"";for(n.singleProperty=1===r&&t.getOffset()===i;i>t.getOffset();){var d=this.parseNode(t,e);null!==d&&this.parseSubNode(s,n,d)}return n.propertyList=a,"number"==typeof l&&(n.id=l),""!==h&&(n.attrName=h),""!==u&&(n.attrType=u),""!==s&&(n.name=s),n},parseSubNode:function(t,e,n){if(!0===n.singleProperty){var i=n.propertyList[0];Array.isArray(i)?(e[n.name]=n,n.a=i):e[n.name]=i}else if("Connections"===t&&"C"===n.name){var r=[];n.propertyList.forEach(function(t,e){0!==e&&r.push(t)}),void 0===e.connections&&(e.connections=[]),e.connections.push(r)}else if("Properties70"===n.name){Object.keys(n).forEach(function(t){e[t]=n[t]})}else if("Properties70"===t&&"P"===n.name){var o,s=n.propertyList[0],a=n.propertyList[1],c=n.propertyList[2],l=n.propertyList[3];0===s.indexOf("Lcl ")&&(s=s.replace("Lcl ","Lcl_")),0===a.indexOf("Lcl ")&&(a=a.replace("Lcl ","Lcl_")),o="Color"===a||"ColorRGB"===a||"Vector"===a||"Vector3D"===a||0===a.indexOf("Lcl_")?[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:n.propertyList[4],e[s]={type:a,type2:c,flag:l,value:o}}else void 0===e[n.name]?"number"==typeof n.id?(e[n.name]={},e[n.name][n.id]=n):e[n.name]=n:"PoseNode"===n.name?(Array.isArray(e[n.name])||(e[n.name]=[e[n.name]]),e[n.name].push(n)):void 0===e[n.name][n.id]&&(e[n.name][n.id]=n)},parseProperty:function(t){var e=t.getString(1);switch(e){case"C":return t.getBoolean();case"D":return t.getFloat64();case"F":return t.getFloat32();case"I":return t.getInt32();case"L":return t.getInt64();case"R":n=t.getUint32();return t.getArrayBuffer(n);case"S":var n=t.getUint32();return t.getString(n);case"Y":return t.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var i=t.getUint32(),r=t.getUint32(),o=t.getUint32();if(0===r)switch(e){case"b":case"c":return t.getBooleanArray(i);case"d":return t.getFloat64Array(i);case"f":return t.getFloat32Array(i);case"i":return t.getInt32Array(i);case"l":return t.getInt64Array(i)}"undefined"==typeof Zlib&&console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var s=new a(new Zlib.Inflate(new Uint8Array(t.getArrayBuffer(o))).decompress().buffer);switch(e){case"b":case"c":return s.getBooleanArray(i);case"d":return s.getFloat64Array(i);case"f":return s.getFloat32Array(i);case"i":return s.getInt32Array(i);case"l":return s.getInt64Array(i)}default:throw new Error("THREE.FBXLoader: Unknown property type "+e)}}},a.prototype={constructor:a,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(t){this.offset+=t},getBoolean:function(){return 1==(1&this.getUint8())},getBooleanArray:function(t){for(var e=[],n=0;n<t;n++)e.push(this.getBoolean());return e},getUint8:function(){var t=this.dv.getUint8(this.offset);return this.offset+=1,t},getInt16:function(){var t=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,t},getInt32:function(){var t=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,t},getInt32Array:function(t){for(var e=[],n=0;n<t;n++)e.push(this.getInt32());return e},getUint32:function(){var t=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,t},getInt64:function(){var t,e;return this.littleEndian?(t=this.getUint32(),e=this.getUint32()):(e=this.getUint32(),t=this.getUint32()),2147483648&e?(e=4294967295&~e,4294967295===(t=4294967295&~t)&&(e=e+1&4294967295),t=t+1&4294967295,-(4294967296*e+t)):4294967296*e+t},getInt64Array:function(t){for(var e=[],n=0;n<t;n++)e.push(this.getInt64());return e},getUint64:function(){var t,e;return this.littleEndian?(t=this.getUint32(),e=this.getUint32()):(e=this.getUint32(),t=this.getUint32()),4294967296*e+t},getFloat32:function(){var t=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,t},getFloat32Array:function(t){for(var e=[],n=0;n<t;n++)e.push(this.getFloat32());return e},getFloat64:function(){var t=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,t},getFloat64Array:function(t){for(var e=[],n=0;n<t;n++)e.push(this.getFloat64());return e},getArrayBuffer:function(t){var e=this.dv.buffer.slice(this.offset,this.offset+t);return this.offset+=t,e},getString:function(t){for(var e=[],n=0;n<t;n++)e[n]=this.getUint8();var i=e.indexOf(0);return i>=0&&(e=e.slice(0,i)),THREE.LoaderUtils.decodeText(new Uint8Array(e))}},c.prototype={constructor:c,add:function(t,e){this[t]=e}};var _=[],b=new THREE.Matrix4,E=new THREE.Euler,w=new THREE.Vector3,M=new THREE.Vector3,T=new THREE.Matrix4;return t}()},{}],5:[function(t,e,n){"use strict";e.exports=Object.assign(function(){},{FACE_1:0,FACE_2:1,FACE_3:2,FACE_4:3,L_SHOULDER_1:4,R_SHOULDER_1:5,L_SHOULDER_2:6,R_SHOULDER_2:7,SELECT:8,START:9,DPAD_UP:12,DPAD_DOWN:13,DPAD_LEFT:14,DPAD_RIGHT:15,VENDOR:16})},{}],6:[function(t,e,n){"use strict";e.exports=function(t,e,n){this.type=t,this.index=e,this.pressed=n.pressed,this.value=n.value}},{}],7:[function(t,e,n){"use strict";function i(t){var e=document.getElementById(t),n=e.parentNode;try{n&&n.removeChild(e)}catch(t){}}function r(t,e,n){return new n(function(n,r){var o=e.timeout||5e3,s="script_"+Date.now()+"_"+Math.ceil(1e5*Math.random()),a=function(t,e){var n=document.createElement("script");return n.type="text/javascript",n.async=!0,n.id=e,n.src=t,n}(t,s),c=setTimeout(function(){r(new Error("Script request to "+t+" timed out")),i(s)},o),l=function(t){clearTimeout(t)};a.addEventListener("load",function(t){n({ok:!0}),l(c),i(s)}),a.addEventListener("error",function(e){r(new Error("Script request to "+t+" failed "+e)),l(c),i(s)}),function(t){var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(t,e)}(a)})}e.exports=function(t){return t=t||{},function(e,n){return n=n||{},r(e,n,t.Promise||Promise)}}},{}],8:[function(t,e,n){"use strict";!function(t){function e(t,e){return-1!==String(t).indexOf(e)}function n(t,e,n){u!==e&&h!==e&&l!==e||Object.keys(n).forEach(function(e){t[e]=n[e]})}function i(t){var e="keyCode"in t?t.keyCode:"which"in t?t.which:0,n=function(){if(y||"keyLocation"in t){var n=y?t.location:t.keyLocation;if(n&&e in f[n])return f[n][e]}return"keyIdentifier"in t&&t.keyIdentifier in p?p[t.keyIdentifier]:e in d?d[e]:null}();if(!n)return null;var i=function(){var e=m[n.code];return e?t.shiftKey&&"shiftKey"in e?e.shiftKey:e.key:n.code}();return{code:n.code,key:i,location:n.location,keyCap:n.keyCap}}var r="KeyboardEvent"in t;r||(t.KeyboardEvent=function(){throw TypeError("Illegal constructor")}),"DOM_KEY_LOCATION_STANDARD"in t.KeyboardEvent||(t.KeyboardEvent.DOM_KEY_LOCATION_STANDARD=0),"DOM_KEY_LOCATION_LEFT"in t.KeyboardEvent||(t.KeyboardEvent.DOM_KEY_LOCATION_LEFT=1),"DOM_KEY_LOCATION_RIGHT"in t.KeyboardEvent||(t.KeyboardEvent.DOM_KEY_LOCATION_RIGHT=2),"DOM_KEY_LOCATION_NUMPAD"in t.KeyboardEvent||(t.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD=3);var o=window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,s=window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,a=window.KeyboardEvent.DOM_KEY_LOCATION_RIGHT,c=window.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD,l=e(navigator.platform,"Win")?"win":e(navigator.platform,"Mac")?"mac":e(navigator.platform,"CrOS")?"cros":e(navigator.platform,"Linux")?"linux":e(navigator.userAgent,"iPad")||e(navigator.platform,"iPod")||e(navigator.platform,"iPhone")?"ios":"",h=e(navigator.userAgent,"Chrome/")?"chrome":e(navigator.vendor,"Apple")?"safari":e(navigator.userAgent,"MSIE")?"ie":e(navigator.userAgent,"Gecko/")?"moz":e(navigator.userAgent,"Opera/")?"opera":"",u=h+"-"+l,d={3:{code:"Cancel"},6:{code:"Help"},8:{code:"Backspace"},9:{code:"Tab"},12:{code:"Clear"},13:{code:"Enter"},16:{code:"Shift"},17:{code:"Control"},18:{code:"Alt"},19:{code:"Pause"},20:{code:"CapsLock"},21:{code:"KanaMode"},22:{code:"HangulMode"},23:{code:"JunjaMode"},24:{code:"FinalMode"},25:{code:"KanjiMode"},27:{code:"Escape"},28:{code:"Convert"},29:{code:"NonConvert"},30:{code:"Accept"},31:{code:"ModeChange"},32:{code:"Space"},33:{code:"PageUp"},34:{code:"PageDown"},35:{code:"End"},36:{code:"Home"},37:{code:"ArrowLeft"},38:{code:"ArrowUp"},39:{code:"ArrowRight"},40:{code:"ArrowDown"},41:{code:"Select"},42:{code:"Print"},43:{code:"Execute"},44:{code:"PrintScreen"},45:{code:"Insert"},46:{code:"Delete"},47:{code:"Help"},48:{code:"Digit0",keyCap:"0"},49:{code:"Digit1",keyCap:"1"},50:{code:"Digit2",keyCap:"2"},51:{code:"Digit3",keyCap:"3"},52:{code:"Digit4",keyCap:"4"},53:{code:"Digit5",keyCap:"5"},54:{code:"Digit6",keyCap:"6"},55:{code:"Digit7",keyCap:"7"},56:{code:"Digit8",keyCap:"8"},57:{code:"Digit9",keyCap:"9"},65:{code:"KeyA",keyCap:"a"},66:{code:"KeyB",keyCap:"b"},67:{code:"KeyC",keyCap:"c"},68:{code:"KeyD",keyCap:"d"},69:{code:"KeyE",keyCap:"e"},70:{code:"KeyF",keyCap:"f"},71:{code:"KeyG",keyCap:"g"},72:{code:"KeyH",keyCap:"h"},73:{code:"KeyI",keyCap:"i"},74:{code:"KeyJ",keyCap:"j"},75:{code:"KeyK",keyCap:"k"},76:{code:"KeyL",keyCap:"l"},77:{code:"KeyM",keyCap:"m"},78:{code:"KeyN",keyCap:"n"},79:{code:"KeyO",keyCap:"o"},80:{code:"KeyP",keyCap:"p"},81:{code:"KeyQ",keyCap:"q"},82:{code:"KeyR",keyCap:"r"},83:{code:"KeyS",keyCap:"s"},84:{code:"KeyT",keyCap:"t"},85:{code:"KeyU",keyCap:"u"},86:{code:"KeyV",keyCap:"v"},87:{code:"KeyW",keyCap:"w"},88:{code:"KeyX",keyCap:"x"},89:{code:"KeyY",keyCap:"y"},90:{code:"KeyZ",keyCap:"z"},91:{code:"OSLeft",location:s},92:{code:"OSRight",location:a},93:{code:"ContextMenu"},95:{code:"Standby"},96:{code:"Numpad0",keyCap:"0",location:c},97:{code:"Numpad1",keyCap:"1",location:c},98:{code:"Numpad2",keyCap:"2",location:c},99:{code:"Numpad3",keyCap:"3",location:c},100:{code:"Numpad4",keyCap:"4",location:c},101:{code:"Numpad5",keyCap:"5",location:c},102:{code:"Numpad6",keyCap:"6",location:c},103:{code:"Numpad7",keyCap:"7",location:c},104:{code:"Numpad8",keyCap:"8",location:c},105:{code:"Numpad9",keyCap:"9",location:c},106:{code:"NumpadMultiply",keyCap:"*",location:c},107:{code:"NumpadAdd",keyCap:"+",location:c},108:{code:"NumpadComma",keyCap:",",location:c},109:{code:"NumpadSubtract",keyCap:"-",location:c},110:{code:"NumpadDecimal",keyCap:".",location:c},111:{code:"NumpadDivide",keyCap:"/",location:c},112:{code:"F1"},113:{code:"F2"},114:{code:"F3"},115:{code:"F4"},116:{code:"F5"},117:{code:"F6"},118:{code:"F7"},119:{code:"F8"},120:{code:"F9"},121:{code:"F10"},122:{code:"F11"},123:{code:"F12"},124:{code:"F13"},125:{code:"F14"},126:{code:"F15"},127:{code:"F16"},128:{code:"F17"},129:{code:"F18"},130:{code:"F19"},131:{code:"F20"},132:{code:"F21"},133:{code:"F22"},134:{code:"F23"},135:{code:"F24"},144:{code:"NumLock",location:c},145:{code:"ScrollLock"},160:{code:"ShiftLeft",location:s},161:{code:"ShiftRight",location:a},162:{code:"ControlLeft",location:s},163:{code:"ControlRight",location:a},164:{code:"AltLeft",location:s},165:{code:"AltRight",location:a},166:{code:"BrowserBack"},167:{code:"BrowserForward"},168:{code:"BrowserRefresh"},169:{code:"BrowserStop"},170:{code:"BrowserSearch"},171:{code:"BrowserFavorites"},172:{code:"BrowserHome"},173:{code:"VolumeMute"},174:{code:"VolumeDown"},175:{code:"VolumeUp"},176:{code:"MediaTrackNext"},177:{code:"MediaTrackPrevious"},178:{code:"MediaStop"},179:{code:"MediaPlayPause"},180:{code:"LaunchMail"},181:{code:"MediaSelect"},182:{code:"LaunchApp1"},183:{code:"LaunchApp2"},186:{code:"Semicolon",keyCap:";"},187:{code:"Equal",keyCap:"="},188:{code:"Comma",keyCap:","},189:{code:"Minus",keyCap:"-"},190:{code:"Period",keyCap:"."},191:{code:"Slash",keyCap:"/"},192:{code:"Backquote",keyCap:"`"},219:{code:"BracketLeft",keyCap:"["},220:{code:"Backslash",keyCap:"\\"},221:{code:"BracketRight",keyCap:"]"},222:{code:"Quote",keyCap:"'"},226:{code:"IntlBackslash",keyCap:"\\"},229:{code:"Process"},246:{code:"Attn"},247:{code:"CrSel"},248:{code:"ExSel"},249:{code:"EraseEof"},250:{code:"Play"},251:{code:"ZoomToggle"},254:{code:"Clear"}};n(d,"moz",{59:{code:"Semicolon",keyCap:";"},61:{code:"Equal",keyCap:"="},107:{code:"Equal",keyCap:"="},109:{code:"Minus",keyCap:"-"},187:{code:"NumpadAdd",keyCap:"+",location:c},189:{code:"NumpadSubtract",keyCap:"-",location:c}}),n(d,"moz-mac",{12:{code:"NumLock",location:c},173:{code:"Minus",keyCap:"-"}}),n(d,"moz-win",{173:{code:"Minus",keyCap:"-"}}),n(d,"chrome-mac",{93:{code:"OSRight",location:a}}),n(d,"safari",{3:{code:"Enter"},25:{code:"Tab"}}),n(d,"ios",{10:{code:"Enter",location:o}}),n(d,"safari-mac",{91:{code:"OSLeft",location:s},93:{code:"OSRight",location:a},229:{code:"KeyQ",keyCap:"Q"}});var p={};"cros"===l&&(p["U+00A0"]={code:"ShiftLeft",location:s},p["U+00A1"]={code:"ShiftRight",location:a},p["U+00A2"]={code:"ControlLeft",location:s},p["U+00A3"]={code:"ControlRight",location:a},p["U+00A4"]={code:"AltLeft",location:s},p["U+00A5"]={code:"AltRight",location:a}),"chrome-mac"===u&&(p["U+0010"]={code:"ContextMenu"}),"safari-mac"===u&&(p["U+0010"]={code:"ContextMenu"}),"ios"===l&&(p["U+0010"]={code:"Function"},p["U+001C"]={code:"ArrowLeft"},p["U+001D"]={code:"ArrowRight"},p["U+001E"]={code:"ArrowUp"},p["U+001F"]={code:"ArrowDown"},p["U+0001"]={code:"Home"},p["U+0004"]={code:"End"},p["U+000B"]={code:"PageUp"},p["U+000C"]={code:"PageDown"});var f=[];f[s]={16:{code:"ShiftLeft",location:s},17:{code:"ControlLeft",location:s},18:{code:"AltLeft",location:s}},f[a]={16:{code:"ShiftRight",location:a},17:{code:"ControlRight",location:a},18:{code:"AltRight",location:a}},f[c]={13:{code:"NumpadEnter",location:c}},n(f[c],"moz",{109:{code:"NumpadSubtract",location:c},107:{code:"NumpadAdd",location:c}}),n(f[s],"moz-mac",{224:{code:"OSLeft",location:s}}),n(f[a],"moz-mac",{224:{code:"OSRight",location:a}}),n(f[a],"moz-win",{91:{code:"OSRight",location:a}}),n(f[a],"mac",{93:{code:"OSRight",location:a}}),n(f[c],"chrome-mac",{12:{code:"NumLock",location:c}}),n(f[c],"safari-mac",{12:{code:"NumLock",location:c},187:{code:"NumpadAdd",location:c},189:{code:"NumpadSubtract",location:c},190:{code:"NumpadDecimal",location:c},191:{code:"NumpadDivide",location:c}});var m={ShiftLeft:{key:"Shift"},ShiftRight:{key:"Shift"},ControlLeft:{key:"Control"},ControlRight:{key:"Control"},AltLeft:{key:"Alt"},AltRight:{key:"Alt"},OSLeft:{key:"OS"},OSRight:{key:"OS"},NumpadEnter:{key:"Enter"},Space:{key:" "},Digit0:{key:"0",shiftKey:")"},Digit1:{key:"1",shiftKey:"!"},Digit2:{key:"2",shiftKey:"@"},Digit3:{key:"3",shiftKey:"#"},Digit4:{key:"4",shiftKey:"$"},Digit5:{key:"5",shiftKey:"%"},Digit6:{key:"6",shiftKey:"^"},Digit7:{key:"7",shiftKey:"&"},Digit8:{key:"8",shiftKey:"*"},Digit9:{key:"9",shiftKey:"("},KeyA:{key:"a",shiftKey:"A"},KeyB:{key:"b",shiftKey:"B"},KeyC:{key:"c",shiftKey:"C"},KeyD:{key:"d",shiftKey:"D"},KeyE:{key:"e",shiftKey:"E"},KeyF:{key:"f",shiftKey:"F"},KeyG:{key:"g",shiftKey:"G"},KeyH:{key:"h",shiftKey:"H"},KeyI:{key:"i",shiftKey:"I"},KeyJ:{key:"j",shiftKey:"J"},KeyK:{key:"k",shiftKey:"K"},KeyL:{key:"l",shiftKey:"L"},KeyM:{key:"m",shiftKey:"M"},KeyN:{key:"n",shiftKey:"N"},KeyO:{key:"o",shiftKey:"O"},KeyP:{key:"p",shiftKey:"P"},KeyQ:{key:"q",shiftKey:"Q"},KeyR:{key:"r",shiftKey:"R"},KeyS:{key:"s",shiftKey:"S"},KeyT:{key:"t",shiftKey:"T"},KeyU:{key:"u",shiftKey:"U"},KeyV:{key:"v",shiftKey:"V"},KeyW:{key:"w",shiftKey:"W"},KeyX:{key:"x",shiftKey:"X"},KeyY:{key:"y",shiftKey:"Y"},KeyZ:{key:"z",shiftKey:"Z"},Numpad0:{key:"0"},Numpad1:{key:"1"},Numpad2:{key:"2"},Numpad3:{key:"3"},Numpad4:{key:"4"},Numpad5:{key:"5"},Numpad6:{key:"6"},Numpad7:{key:"7"},Numpad8:{key:"8"},Numpad9:{key:"9"},NumpadMultiply:{key:"*"},NumpadAdd:{key:"+"},NumpadComma:{key:","},NumpadSubtract:{key:"-"},NumpadDecimal:{key:"."},NumpadDivide:{key:"/"},Semicolon:{key:";",shiftKey:":"},Equal:{key:"=",shiftKey:"+"},Comma:{key:",",shiftKey:"<"},Minus:{key:"-",shiftKey:"_"},Period:{key:".",shiftKey:">"},Slash:{key:"/",shiftKey:"?"},Backquote:{key:"`",shiftKey:"~"},BracketLeft:{key:"[",shiftKey:"{"},Backslash:{key:"\\",shiftKey:"|"},BracketRight:{key:"]",shiftKey:"}"},Quote:{key:"'",shiftKey:'"'},IntlBackslash:{key:"\\",shiftKey:"|"}};n(m,"mac",{OSLeft:{key:"Meta"},OSRight:{key:"Meta"}});var g={Esc:"Escape",Nonconvert:"NonConvert",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Menu:"ContextMenu",MediaNextTrack:"MediaTrackNext",MediaPreviousTrack:"MediaTrackPrevious",SelectMedia:"MediaSelect",HalfWidth:"Hankaku",FullWidth:"Zenkaku",RomanCharacters:"Romaji",Crsel:"CrSel",Exsel:"ExSel",Zoom:"ZoomToggle"},v=function(t,e){var n={};return Object.keys(t).forEach(function(i){var r=t[i];e in r&&(n[r[e]]=r)}),n}(d,"code");try{var y=r&&"location"in new KeyboardEvent("")}catch(t){}"KeyboardEvent"in t&&"defineProperty"in Object&&function(){function t(t,e,n){e in t||Object.defineProperty(t,e,n)}if(t(KeyboardEvent.prototype,"code",{get:function(){var t=i(this);return t?t.code:""}}),"key"in KeyboardEvent.prototype){var e=Object.getOwnPropertyDescriptor(KeyboardEvent.prototype,"key");Object.defineProperty(KeyboardEvent.prototype,"key",{get:function(){var t=e.get.call(this);return g.hasOwnProperty(t)?g[t]:t}})}t(KeyboardEvent.prototype,"key",{get:function(){var t=i(this);return t&&"key"in t?t.key:"Unidentified"}}),t(KeyboardEvent.prototype,"location",{get:function(){var t=i(this);return t&&"location"in t?t.location:o}}),t(KeyboardEvent.prototype,"locale",{get:function(){return""}})}(),"queryKeyCap"in t.KeyboardEvent||(t.KeyboardEvent.queryKeyCap=function(t,e){if(t=String(t),!v.hasOwnProperty(t))return"Undefined";if(e&&"en-us"!==String(e).toLowerCase())throw Error("Unsupported locale");var n=v[t];return n.keyCap||n.code||"Undefined"}),t.identifyKey=function(t){if(!("code"in t)){var e=i(t);t.code=e?e.code:"",t.key=e&&"key"in e?e.key:"Unidentified",t.location="location"in t?t.location:"keyLocation"in t?t.keyLocation:e&&"location"in e?e.location:o,t.locale=""}}}(window)},{}],9:[function(t,e,n){!function(t,i){"object"==typeof n&&"object"==typeof e?e.exports=i():"function"==typeof define&&define.amd?define("nipplejs",[],i):"object"==typeof n?n.nipplejs=i():t.nipplejs=i()}(window,function(){return function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(i,r,function(e){return t[e]}.bind(null,r));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e,n){"use strict";function i(){}function r(t,e){return this.identifier=e.identifier,this.position=e.position,this.frontPosition=e.frontPosition,this.collection=t,this.defaults={size:100,threshold:.1,color:"white",fadeTime:250,dataOnly:!1,restJoystick:!0,restOpacity:.5,mode:"dynamic",zone:document.body,lockX:!1,lockY:!1,shape:"circle"},this.config(e),"dynamic"===this.options.mode&&(this.options.restOpacity=0),this.id=r.id,r.id+=1,this.buildEl().stylize(),this.instance={el:this.ui.el,on:this.on.bind(this),off:this.off.bind(this),show:this.show.bind(this),hide:this.hide.bind(this),add:this.addToDom.bind(this),remove:this.removeFromDom.bind(this),destroy:this.destroy.bind(this),setPosition:this.setPosition.bind(this),resetDirection:this.resetDirection.bind(this),computeDirection:this.computeDirection.bind(this),trigger:this.trigger.bind(this),position:this.position,frontPosition:this.frontPosition,ui:this.ui,identifier:this.identifier,id:this.id,options:this.options},this.instance}function o(t,e){this.nipples=[],this.idles=[],this.actives=[],this.ids=[],this.pressureIntervals={},this.manager=t,this.id=o.id,o.id+=1,this.defaults={zone:document.body,multitouch:!1,maxNumberOfNipples:10,mode:"dynamic",position:{top:0,left:0},catchDistance:200,size:100,threshold:.1,color:"white",fadeTime:250,dataOnly:!1,restJoystick:!0,restOpacity:.5,lockX:!1,lockY:!1,shape:"circle",dynamicPage:!1,follow:!1},this.config(e),"static"!==this.options.mode&&"semi"!==this.options.mode||(this.options.multitouch=!1),this.options.multitouch||(this.options.maxNumberOfNipples=1);var n=getComputedStyle(this.options.zone.parentElement);return n&&"flex"===n.display&&(this.parentIsFlex=!0),this.updateBox(),this.prepareNipples(),this.bindings(),this.begin(),this.nipples}function s(t){var e=this;e.ids={},e.index=0,e.collections=[],e.scroll=m(),e.config(t),e.prepareCollections();var n=function(){var t;e.collections.forEach(function(n){n.forEach(function(n){t=n.el.getBoundingClientRect(),n.position={x:e.scroll.x+t.left,y:e.scroll.y+t.top}})})};d(window,"resize",function(){u(n)});var i=function(){e.scroll=m()};return d(window,"scroll",function(){u(i)}),e.collections}n.r(e);var a,c=function(t,e){var n=e.x-t.x,i=e.y-t.y;return Math.sqrt(n*n+i*i)},l=function(t){return t*(Math.PI/180)},h=new Map,u=function(t){h.has(t)&&clearTimeout(h.get(t)),h.set(t,setTimeout(t,100))},d=function(t,e,n){for(var i,r=e.split(/[ ,]+/g),o=0;o<r.length;o+=1)i=r[o],t.addEventListener?t.addEventListener(i,n,!1):t.attachEvent&&t.attachEvent(i,n)},p=function(t,e,n){for(var i,r=e.split(/[ ,]+/g),o=0;o<r.length;o+=1)i=r[o],t.removeEventListener?t.removeEventListener(i,n):t.detachEvent&&t.detachEvent(i,n)},f=function(t){return t.preventDefault(),t.type.match(/^touch/)?t.changedTouches:t},m=function(){return{x:void 0!==window.pageXOffset?window.pageXOffset:(document.documentElement||document.body.parentNode||document.body).scrollLeft,y:void 0!==window.pageYOffset?window.pageYOffset:(document.documentElement||document.body.parentNode||document.body).scrollTop}},g=function(t,e){e.top||e.right||e.bottom||e.left?(t.style.top=e.top,t.style.right=e.right,t.style.bottom=e.bottom,t.style.left=e.left):(t.style.left=e.x+"px",t.style.top=e.y+"px")},v=function(t,e,n){var i=y(t);for(var r in i)if(i.hasOwnProperty(r))if("string"==typeof e)i[r]=e+" "+n;else{for(var o="",s=0,a=e.length;s<a;s+=1)o+=e[s]+" "+n+", ";i[r]=o.slice(0,-2)}return i},y=function(t){var e={};return e[t]="",["webkit","Moz","o"].forEach(function(n){e[n+t.charAt(0).toUpperCase()+t.slice(1)]=""}),e},x=function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},_=function(t,e){if(t.length)for(var n=0,i=t.length;n<i;n+=1)e(t[n]);else e(t)},b=!!("ontouchstart"in window),E=!!window.PointerEvent,w=!!window.MSPointerEvent,M={start:"mousedown",move:"mousemove",end:"mouseup"},T={};E?a={start:"pointerdown",move:"pointermove",end:"pointerup, pointercancel"}:w?a={start:"MSPointerDown",move:"MSPointerMove",end:"MSPointerUp"}:b?(a={start:"touchstart",move:"touchmove",end:"touchend, touchcancel"},T=M):a=M,i.prototype.on=function(t,e){var n,i=t.split(/[ ,]+/g);this._handlers_=this._handlers_||{};for(var r=0;r<i.length;r+=1)n=i[r],this._handlers_[n]=this._handlers_[n]||[],this._handlers_[n].push(e);return this},i.prototype.off=function(t,e){return this._handlers_=this._handlers_||{},void 0===t?this._handlers_={}:void 0===e?this._handlers_[t]=null:this._handlers_[t]&&this._handlers_[t].indexOf(e)>=0&&this._handlers_[t].splice(this._handlers_[t].indexOf(e),1),this},i.prototype.trigger=function(t,e){var n,i=this,r=t.split(/[ ,]+/g);i._handlers_=i._handlers_||{};for(var o=0;o<r.length;o+=1)n=r[o],i._handlers_[n]&&i._handlers_[n].length&&i._handlers_[n].forEach(function(t){t.call(i,{type:n,target:i},e)})},i.prototype.config=function(t){this.options=this.defaults||{},t&&(this.options=function(t,e){var n={};for(var i in t)t.hasOwnProperty(i)&&e.hasOwnProperty(i)?n[i]=e[i]:t.hasOwnProperty(i)&&(n[i]=t[i]);return n}(this.options,t))},i.prototype.bindEvt=function(t,e){var n=this;return n._domHandlers_=n._domHandlers_||{},n._domHandlers_[e]=function(){"function"==typeof n["on"+e]?n["on"+e].apply(n,arguments):console.warn('[WARNING] : Missing "on'+e+'" handler.')},d(t,a[e],n._domHandlers_[e]),T[e]&&d(t,T[e],n._domHandlers_[e]),n},i.prototype.unbindEvt=function(t,e){return this._domHandlers_=this._domHandlers_||{},p(t,a[e],this._domHandlers_[e]),T[e]&&p(t,T[e],this._domHandlers_[e]),delete this._domHandlers_[e],this};var S=i;r.prototype=new S,r.constructor=r,r.id=0,r.prototype.buildEl=function(t){return this.ui={},this.options.dataOnly||(this.ui.el=document.createElement("div"),this.ui.back=document.createElement("div"),this.ui.front=document.createElement("div"),this.ui.el.className="nipple collection_"+this.collection.id,this.ui.back.className="back",this.ui.front.className="front",this.ui.el.setAttribute("id","nipple_"+this.collection.id+"_"+this.id),this.ui.el.appendChild(this.ui.back),this.ui.el.appendChild(this.ui.front)),this},r.prototype.stylize=function(){if(this.options.dataOnly)return this;var t=this.options.fadeTime+"ms",e=function(t,e){var n=y("borderRadius");for(var i in n)n.hasOwnProperty(i)&&(n[i]="50%");return n}(),n=v("transition","opacity",t),i={};return i.el={position:"absolute",opacity:this.options.restOpacity,display:"block",zIndex:999},i.back={position:"absolute",display:"block",width:this.options.size+"px",height:this.options.size+"px",marginLeft:-this.options.size/2+"px",marginTop:-this.options.size/2+"px",background:this.options.color,opacity:".5"},i.front={width:this.options.size/2+"px",height:this.options.size/2+"px",position:"absolute",display:"block",marginLeft:-this.options.size/4+"px",marginTop:-this.options.size/4+"px",background:this.options.color,opacity:".5",transform:"translate(0px, 0px)"},x(i.el,n),"circle"===this.options.shape&&x(i.back,e),x(i.front,e),this.applyStyles(i),this},r.prototype.applyStyles=function(t){for(var e in this.ui)if(this.ui.hasOwnProperty(e))for(var n in t[e])this.ui[e].style[n]=t[e][n];return this},r.prototype.addToDom=function(){return this.options.dataOnly||document.body.contains(this.ui.el)||this.options.zone.appendChild(this.ui.el),this},r.prototype.removeFromDom=function(){return this.options.dataOnly||!document.body.contains(this.ui.el)||this.options.zone.removeChild(this.ui.el),this},r.prototype.destroy=function(){clearTimeout(this.removeTimeout),clearTimeout(this.showTimeout),clearTimeout(this.restTimeout),this.trigger("destroyed",this.instance),this.removeFromDom(),this.off()},r.prototype.show=function(t){var e=this;return e.options.dataOnly||(clearTimeout(e.removeTimeout),clearTimeout(e.showTimeout),clearTimeout(e.restTimeout),e.addToDom(),e.restCallback(),setTimeout(function(){e.ui.el.style.opacity=1},0),e.showTimeout=setTimeout(function(){e.trigger("shown",e.instance),"function"==typeof t&&t.call(this)},e.options.fadeTime)),e},r.prototype.hide=function(t){var e=this;if(e.options.dataOnly)return e;if(e.ui.el.style.opacity=e.options.restOpacity,clearTimeout(e.removeTimeout),clearTimeout(e.showTimeout),clearTimeout(e.restTimeout),e.removeTimeout=setTimeout(function(){var n="dynamic"===e.options.mode?"none":"block";e.ui.el.style.display=n,"function"==typeof t&&t.call(e),e.trigger("hidden",e.instance)},e.options.fadeTime),e.options.restJoystick){var n=e.options.restJoystick,i={};i.x=!0===n||!1!==n.x?0:e.instance.frontPosition.x,i.y=!0===n||!1!==n.y?0:e.instance.frontPosition.y,e.setPosition(t,i)}return e},r.prototype.setPosition=function(t,e){var n=this;n.frontPosition={x:e.x,y:e.y};var i=n.options.fadeTime+"ms",r={};r.front=v("transition",["transform"],i);var o={front:{}};o.front={transform:"translate("+n.frontPosition.x+"px,"+n.frontPosition.y+"px)"},n.applyStyles(r),n.applyStyles(o),n.restTimeout=setTimeout(function(){"function"==typeof t&&t.call(n),n.restCallback()},n.options.fadeTime)},r.prototype.restCallback=function(){var t={};t.front=v("transition","none",""),this.applyStyles(t),this.trigger("rested",this.instance)},r.prototype.resetDirection=function(){this.direction={x:!1,y:!1,angle:!1}},r.prototype.computeDirection=function(t){var e,n,i,r=t.angle.radian,o=Math.PI/4,s=Math.PI/2;if(r>o&&r<3*o&&!t.lockX?e="up":r>-o&&r<=o&&!t.lockY?e="left":r>3*-o&&r<=-o&&!t.lockX?e="down":t.lockY||(e="right"),t.lockY||(n=r>-s&&r<s?"left":"right"),t.lockX||(i=r>0?"up":"down"),t.force>this.options.threshold){var a,c={};for(a in this.direction)this.direction.hasOwnProperty(a)&&(c[a]=this.direction[a]);var l={};for(a in this.direction={x:n,y:i,angle:e},t.direction=this.direction,c)c[a]===this.direction[a]&&(l[a]=!0);if(l.x&&l.y&&l.angle)return t;l.x&&l.y||this.trigger("plain",t),l.x||this.trigger("plain:"+n,t),l.y||this.trigger("plain:"+i,t),l.angle||this.trigger("dir dir:"+e,t)}else this.resetDirection();return t};var A=r;o.prototype=new S,o.constructor=o,o.id=0,o.prototype.prepareNipples=function(){var t=this.nipples;t.on=this.on.bind(this),t.off=this.off.bind(this),t.options=this.options,t.destroy=this.destroy.bind(this),t.ids=this.ids,t.id=this.id,t.processOnMove=this.processOnMove.bind(this),t.processOnEnd=this.processOnEnd.bind(this),t.get=function(e){if(void 0===e)return t[0];for(var n=0,i=t.length;n<i;n+=1)if(t[n].identifier===e)return t[n];return!1}},o.prototype.bindings=function(){this.bindEvt(this.options.zone,"start"),this.options.zone.style.touchAction="none",this.options.zone.style.msTouchAction="none"},o.prototype.begin=function(){var t=this.options;if("static"===t.mode){var e=this.createNipple(t.position,this.manager.getIdentifier());e.add(),this.idles.push(e)}},o.prototype.createNipple=function(t,e){var n=this.manager.scroll,i={},r=this.options,o=this.parentIsFlex?n.x:n.x+this.box.left,s=this.parentIsFlex?n.y:n.y+this.box.top;if(t.x&&t.y)i={x:t.x-o,y:t.y-s};else if(t.top||t.right||t.bottom||t.left){var a=document.createElement("DIV");a.style.display="hidden",a.style.top=t.top,a.style.right=t.right,a.style.bottom=t.bottom,a.style.left=t.left,a.style.position="absolute",r.zone.appendChild(a);var c=a.getBoundingClientRect();r.zone.removeChild(a),i=t,t={x:c.left+n.x,y:c.top+n.y}}var l=new A(this,{color:r.color,size:r.size,threshold:r.threshold,fadeTime:r.fadeTime,dataOnly:r.dataOnly,restJoystick:r.restJoystick,restOpacity:r.restOpacity,mode:r.mode,identifier:e,position:t,zone:r.zone,frontPosition:{x:0,y:0},shape:r.shape});return r.dataOnly||(g(l.ui.el,i),g(l.ui.front,l.frontPosition)),this.nipples.push(l),this.trigger("added "+l.identifier+":added",l),this.manager.trigger("added "+l.identifier+":added",l),this.bindNipple(l),l},o.prototype.updateBox=function(){this.box=this.options.zone.getBoundingClientRect()},o.prototype.bindNipple=function(t){var e,n=this,i=function(t,i){e=t.type+" "+i.id+":"+t.type,n.trigger(e,i)};t.on("destroyed",n.onDestroyed.bind(n)),t.on("shown hidden rested dir plain",i),t.on("dir:up dir:right dir:down dir:left",i),t.on("plain:up plain:right plain:down plain:left",i)},o.prototype.pressureFn=function(t,e,n){var i=this,r=0;clearInterval(i.pressureIntervals[n]),i.pressureIntervals[n]=setInterval(function(){var n=t.force||t.pressure||t.webkitForce||0;n!==r&&(e.trigger("pressure",n),i.trigger("pressure "+e.identifier+":pressure",n),r=n)}.bind(i),100)},o.prototype.onstart=function(t){var e=this,n=e.options,i=t;return t=f(t),e.updateBox(),_(t,function(r){e.actives.length<n.maxNumberOfNipples?e.processOnStart(r):i.type.match(/^touch/)&&(Object.keys(e.manager.ids).forEach(function(n){if(Object.values(i.touches).findIndex(function(t){return t.identifier===n})<0){var r=[t[0]];r.identifier=n,e.processOnEnd(r)}}),e.actives.length<n.maxNumberOfNipples&&e.processOnStart(r))}),e.manager.bindDocument(),!1},o.prototype.processOnStart=function(t){var e,n=this,i=n.options,r=n.manager.getIdentifier(t),o=t.force||t.pressure||t.webkitForce||0,s={x:t.pageX,y:t.pageY},a=n.getOrCreate(r,s);a.identifier!==r&&n.manager.removeIdentifier(a.identifier),a.identifier=r;var l=function(e){e.trigger("start",e),n.trigger("start "+e.id+":start",e),e.show(),o>0&&n.pressureFn(t,e,e.identifier),n.processOnMove(t)};if((e=n.idles.indexOf(a))>=0&&n.idles.splice(e,1),n.actives.push(a),n.ids.push(a.identifier),"semi"!==i.mode)l(a);else{if(!(c(s,a.position)<=i.catchDistance))return a.destroy(),void n.processOnStart(t);l(a)}return a},o.prototype.getOrCreate=function(t,e){var n,i=this.options;return/(semi|static)/.test(i.mode)?(n=this.idles[0])?(this.idles.splice(0,1),n):"semi"===i.mode?this.createNipple(e,t):(console.warn("Coudln't find the needed nipple."),!1):n=this.createNipple(e,t)},o.prototype.processOnMove=function(t){var e=this.options,n=this.manager.getIdentifier(t),i=this.nipples.get(n),r=this.manager.scroll;if(function(t){return isNaN(t.buttons)?0!==t.pressure:0!==t.buttons}(t)){if(!i)return console.error("Found zombie joystick with ID "+n),void this.manager.removeIdentifier(n);if(e.dynamicPage){var o=i.el.getBoundingClientRect();i.position={x:r.x+o.left,y:r.y+o.top}}i.identifier=n;var s=i.options.size/2,a={x:t.pageX,y:t.pageY};e.lockX&&(a.y=i.position.y),e.lockY&&(a.x=i.position.x);var h,u,d,p,f,m,g,v,y,x,_=c(a,i.position),b=(h=a,u=i.position,d=u.x-h.x,p=u.y-h.y,function(t){return t*(180/Math.PI)}(Math.atan2(p,d))),E=l(b),w=_/s,M={distance:_,position:a};if("circle"===i.options.shape?(f=Math.min(_,s),g=i.position,v=f,x={x:0,y:0},y=l(y=b),x.x=g.x-v*Math.cos(y),x.y=g.y-v*Math.sin(y),m=x):(m=function(t,e,n){return{x:Math.min(Math.max(t.x,e.x-n),e.x+n),y:Math.min(Math.max(t.y,e.y-n),e.y+n)}}(a,i.position,s),f=c(m,i.position)),e.follow){if(_>s){var T=a.x-m.x,S=a.y-m.y;i.position.x+=T,i.position.y+=S,i.el.style.top=i.position.y-(this.box.top+r.y)+"px",i.el.style.left=i.position.x-(this.box.left+r.x)+"px",_=c(a,i.position)}}else a=m,_=f;var A=a.x-i.position.x,R=a.y-i.position.y;i.frontPosition={x:A,y:R},e.dataOnly||(i.ui.front.style.transform="translate("+A+"px,"+R+"px)");var L={identifier:i.identifier,position:a,force:w,pressure:t.force||t.pressure||t.webkitForce||0,distance:_,angle:{radian:E,degree:b},vector:{x:A/s,y:-R/s},raw:M,instance:i,lockX:e.lockX,lockY:e.lockY};(L=i.computeDirection(L)).angle={radian:l(180-b),degree:180-b},i.trigger("move",L),this.trigger("move "+i.id+":move",L)}else this.processOnEnd(t)},o.prototype.processOnEnd=function(t){var e=this,n=e.options,i=e.manager.getIdentifier(t),r=e.nipples.get(i),o=e.manager.removeIdentifier(r.identifier);r&&(n.dataOnly||r.hide(function(){"dynamic"===n.mode&&(r.trigger("removed",r),e.trigger("removed "+r.id+":removed",r),e.manager.trigger("removed "+r.id+":removed",r),r.destroy())}),clearInterval(e.pressureIntervals[r.identifier]),r.resetDirection(),r.trigger("end",r),e.trigger("end "+r.id+":end",r),e.ids.indexOf(r.identifier)>=0&&e.ids.splice(e.ids.indexOf(r.identifier),1),e.actives.indexOf(r)>=0&&e.actives.splice(e.actives.indexOf(r),1),/(semi|static)/.test(n.mode)?e.idles.push(r):e.nipples.indexOf(r)>=0&&e.nipples.splice(e.nipples.indexOf(r),1),e.manager.unbindDocument(),/(semi|static)/.test(n.mode)&&(e.manager.ids[o.id]=o.identifier))},o.prototype.onDestroyed=function(t,e){this.nipples.indexOf(e)>=0&&this.nipples.splice(this.nipples.indexOf(e),1),this.actives.indexOf(e)>=0&&this.actives.splice(this.actives.indexOf(e),1),this.idles.indexOf(e)>=0&&this.idles.splice(this.idles.indexOf(e),1),this.ids.indexOf(e.identifier)>=0&&this.ids.splice(this.ids.indexOf(e.identifier),1),this.manager.removeIdentifier(e.identifier),this.manager.unbindDocument()},o.prototype.destroy=function(){for(var t in this.unbindEvt(this.options.zone,"start"),this.nipples.forEach(function(t){t.destroy()}),this.pressureIntervals)this.pressureIntervals.hasOwnProperty(t)&&clearInterval(this.pressureIntervals[t]);this.trigger("destroyed",this.nipples),this.manager.unbindDocument(),this.off()};var R=o;s.prototype=new S,s.constructor=s,s.prototype.prepareCollections=function(){var t=this;t.collections.create=t.create.bind(t),t.collections.on=t.on.bind(t),t.collections.off=t.off.bind(t),t.collections.destroy=t.destroy.bind(t),t.collections.get=function(e){var n;return t.collections.every(function(t){return!(n=t.get(e))}),n}},s.prototype.create=function(t){return this.createCollection(t)},s.prototype.createCollection=function(t){var e=new R(this,t);return this.bindCollection(e),this.collections.push(e),e},s.prototype.bindCollection=function(t){var e,n=this,i=function(t,i){e=t.type+" "+i.id+":"+t.type,n.trigger(e,i)};t.on("destroyed",n.onDestroyed.bind(n)),t.on("shown hidden rested dir plain",i),t.on("dir:up dir:right dir:down dir:left",i),t.on("plain:up plain:right plain:down plain:left",i)},s.prototype.bindDocument=function(){this.binded||(this.bindEvt(document,"move").bindEvt(document,"end"),this.binded=!0)},s.prototype.unbindDocument=function(t){Object.keys(this.ids).length&&!0!==t||(this.unbindEvt(document,"move").unbindEvt(document,"end"),this.binded=!1)},s.prototype.getIdentifier=function(t){var e;return t?void 0===(e=void 0===t.identifier?t.pointerId:t.identifier)&&(e=this.latest||0):e=this.index,void 0===this.ids[e]&&(this.ids[e]=this.index,this.index+=1),this.latest=e,this.ids[e]},s.prototype.removeIdentifier=function(t){var e={};for(var n in this.ids)if(this.ids[n]===t){e.id=n,e.identifier=this.ids[n],delete this.ids[n];break}return e},s.prototype.onmove=function(t){return this.onAny("move",t),!1},s.prototype.onend=function(t){return this.onAny("end",t),!1},s.prototype.oncancel=function(t){return this.onAny("end",t),!1},s.prototype.onAny=function(t,e){var n,i=this,r="processOn"+t.charAt(0).toUpperCase()+t.slice(1);e=f(e);return _(e,function(t){n=i.getIdentifier(t),_(i.collections,function(t,e,n){n.ids.indexOf(e)>=0&&(n[r](t),t._found_=!0)}.bind(null,t,n)),t._found_||i.removeIdentifier(n)}),!1},s.prototype.destroy=function(){this.unbindDocument(!0),this.ids={},this.index=0,this.collections.forEach(function(t){t.destroy()}),this.off()},s.prototype.onDestroyed=function(t,e){if(this.collections.indexOf(e)<0)return!1;this.collections.splice(this.collections.indexOf(e),1)};var L=new s;e.default={create:function(t){return L.create(t)},factory:L}}]).default})},{}],10:[function(t,e,n){var i=t("three");class r{static roundNumber(t,e){const n=Math.pow(10,e);return Math.round(t*n)/n}static sample(t){return t[Math.floor(Math.random()*t.length)]}static distanceToSquared(t,e){var n=t.x-e.x,i=t.y-e.y,r=t.z-e.z;return n*n+i*i+r*r}static isPointInPoly(t,e){for(var n=!1,i=-1,r=t.length,o=r-1;++i<r;o=i)(t[i].z<=e.z&&e.z<t[o].z||t[o].z<=e.z&&e.z<t[i].z)&&e.x<(t[o].x-t[i].x)*(e.z-t[i].z)/(t[o].z-t[i].z)+t[i].x&&(n=!n);return n}static isVectorInPolygon(t,e,n){var i=1e5,r=-1e5,o=[];return e.vertexIds.forEach(t=>{i=Math.min(n[t].y,i),r=Math.max(n[t].y,r),o.push(n[t])}),!!(t.y<r+.5&&t.y>i-.5&&this.isPointInPoly(o,t))}static triarea2(t,e,n){return(n.x-t.x)*(e.z-t.z)-(e.x-t.x)*(n.z-t.z)}static vequal(t,e){return this.distanceToSquared(t,e)<1e-5}static mergeVertices(t,e=1e-4){e=Math.max(e,Number.EPSILON);for(var n={},r=t.getIndex(),o=t.getAttribute("position"),s=r?r.count:o.count,a=0,c=[],l=[],h=Math.log10(1/e),u=Math.pow(10,h),d=0;d<s;d++){var p=r?r.getX(d):d,f="";f+=~~(o.getX(p)*u)+",",f+=~~(o.getY(p)*u)+",",(f+=~~(o.getZ(p)*u)+",")in n?c.push(n[f]):(l.push(o.getX(p)),l.push(o.getY(p)),l.push(o.getZ(p)),n[f]=a,c.push(a),a++)}const m=new i.BufferAttribute(new Float32Array(l),o.itemSize,o.normalized),g=new i.BufferGeometry;return g.setAttribute("position",m),g.setIndex(c),g}}class o{constructor(t){this.content=[],this.scoreFunction=t}push(t){this.content.push(t),this.sinkDown(this.content.length-1)}pop(){const t=this.content[0],e=this.content.pop();return this.content.length>0&&(this.content[0]=e,this.bubbleUp(0)),t}remove(t){const e=this.content.indexOf(t),n=this.content.pop();e!==this.content.length-1&&(this.content[e]=n,this.scoreFunction(n)<this.scoreFunction(t)?this.sinkDown(e):this.bubbleUp(e))}size(){return this.content.length}rescoreElement(t){this.sinkDown(this.content.indexOf(t))}sinkDown(t){const e=this.content[t];for(;t>0;){const n=(t+1>>1)-1,i=this.content[n];if(!(this.scoreFunction(e)<this.scoreFunction(i)))break;this.content[n]=e,this.content[t]=i,t=n}}bubbleUp(t){const e=this.content.length,n=this.content[t],i=this.scoreFunction(n);for(;;){const r=t+1<<1,o=r-1;let s,a=null;if(o<e&&(s=this.scoreFunction(this.content[o]))<i&&(a=o),r<e&&this.scoreFunction(this.content[r])<(null===a?i:s)&&(a=r),null===a)break;this.content[t]=this.content[a],this.content[a]=n,t=a}}}class s{constructor(){this.portals=[]}push(t,e){void 0===e&&(e=t),this.portals.push({left:t,right:e})}stringPull(){const t=this.portals,e=[];let n,i,o,s=0,a=0,c=0;n=t[0].left,i=t[0].left,o=t[0].right,e.push(n);for(let l=1;l<t.length;l++){const h=t[l].left,u=t[l].right;if(r.triarea2(n,o,u)<=0){if(!(r.vequal(n,o)||r.triarea2(n,i,u)>0)){e.push(i),i=n=i,o=n,a=s=a,c=s,l=s;continue}o=u,c=l}if(r.triarea2(n,i,h)>=0){if(!(r.vequal(n,i)||r.triarea2(n,o,h)<0)){e.push(o),i=n=o,o=n,a=s=c,c=s,l=s;continue}i=h,a=l}}return 0!==e.length&&r.vequal(e[e.length-1],t[t.length-1].left)||e.push(t[t.length-1].left),this.path=e,e}}class a{constructor(){this.zones={}}static createZone(t,e=1e-4){return class{static buildZone(t,e){const n=this._buildNavigationMesh(t,e),o={};n.vertices.forEach(t=>{t.x=r.roundNumber(t.x,2),t.y=r.roundNumber(t.y,2),t.z=r.roundNumber(t.z,2)}),o.vertices=n.vertices;const s=this._buildPolygonGroups(n);return o.groups=new Array(s.length),s.forEach((t,e)=>{const n=new Map;t.forEach((t,e)=>{n.set(t,e)});const s=new Array(t.length);t.forEach((t,e)=>{const a=[];t.neighbours.forEach(t=>a.push(n.get(t)));const c=[];t.neighbours.forEach(e=>c.push(this._getSharedVerticesInOrder(t,e)));const l=new i.Vector3(0,0,0);l.add(o.vertices[t.vertexIds[0]]),l.add(o.vertices[t.vertexIds[1]]),l.add(o.vertices[t.vertexIds[2]]),l.divideScalar(3),l.x=r.roundNumber(l.x,2),l.y=r.roundNumber(l.y,2),l.z=r.roundNumber(l.z,2),s[e]={id:e,neighbours:a,vertexIds:t.vertexIds,centroid:l,portals:c}}),o.groups[e]=s}),o}static _buildNavigationMesh(t,e){return t=r.mergeVertices(t,e),this._buildPolygonsFromGeometry(t)}static _spreadGroupId(t){let e=new Set([t]);for(;e.size>0;){const n=e;e=new Set,n.forEach(n=>{n.group=t.group,n.neighbours.forEach(t=>{void 0===t.group&&e.add(t)})})}}static _buildPolygonGroups(t){const e=[];return t.polygons.forEach(t=>{void 0!==t.group?e[t.group].push(t):(t.group=e.length,this._spreadGroupId(t),e.push([t]))}),e}static _buildPolygonNeighbours(t,e){const n=new Set,i=e[t.vertexIds[1]],r=e[t.vertexIds[2]];return e[t.vertexIds[0]].forEach(e=>{e!==t&&(i.includes(e)||r.includes(e))&&n.add(e)}),i.forEach(e=>{e!==t&&r.includes(e)&&n.add(e)}),n}static _buildPolygonsFromGeometry(t){const e=[],n=[],r=t.attributes.position,o=t.index,s=[];for(let t=0;t<r.count;t++)n.push((new i.Vector3).fromBufferAttribute(r,t)),s[t]=[];for(let n=0;n<t.index.count;n+=3){const t=o.getX(n),i=o.getX(n+1),r=o.getX(n+2),a={vertexIds:[t,i,r],neighbours:null};e.push(a),s[t].push(a),s[i].push(a),s[r].push(a)}return e.forEach(t=>{t.neighbours=this._buildPolygonNeighbours(t,s)}),{polygons:e,vertices:n}}static _getSharedVerticesInOrder(t,e){const n=t.vertexIds,i=n[0],r=n[1],o=n[2],s=e.vertexIds,a=s.includes(i),c=s.includes(r),l=s.includes(o);return a&&c&&l?Array.from(n):a&&c?[i,r]:c&&l?[r,o]:a&&l?[o,i]:(console.warn("Error processing navigation mesh neighbors; neighbors with <2 shared vertices found."),[])}}.buildZone(t,e)}setZoneData(t,e){this.zones[t]=e}getRandomNode(t,e,n,o){if(!this.zones[t])return new i.Vector3;n=n||null,o=o||0;const s=[];return this.zones[t].groups[e].forEach(t=>{n&&o?r.distanceToSquared(n,t.centroid)<o*o&&s.push(t.centroid):s.push(t.centroid)}),r.sample(s)||new i.Vector3}getClosestNode(t,e,n,i=!1){const o=this.zones[e].vertices;let s=null,a=1/0;return this.zones[e].groups[n].forEach(e=>{const n=r.distanceToSquared(e.centroid,t);n<a&&(!i||r.isVectorInPolygon(t,e,o))&&(s=e,a=n)}),s}findPath(t,e,n,a){const c=this.zones[n].groups[a],l=this.zones[n].vertices,h=this.getClosestNode(t,n,a,!0),u=this.getClosestNode(e,n,a,!0);if(!h||!u)return null;const d=class{static init(t){for(let e=0;e<t.length;e++){const n=t[e];n.f=0,n.g=0,n.h=0,n.cost=1,n.visited=!1,n.closed=!1,n.parent=null}}static cleanUp(t){for(let e=0;e<t.length;e++){const n=t[e];delete n.f,delete n.g,delete n.h,delete n.cost,delete n.visited,delete n.closed,delete n.parent}}static heap(){return new o(function(t){return t.f})}static search(t,e,n){this.init(t);const i=this.heap();for(i.push(e);i.size()>0;){const e=i.pop();if(e===n){let t=e;const n=[];for(;t.parent;)n.push(t),t=t.parent;return this.cleanUp(n),n.reverse()}e.closed=!0;const r=this.neighbours(t,e);for(let t=0,o=r.length;t<o;t++){const o=r[t];if(o.closed)continue;const s=e.g+o.cost,a=o.visited;if(!a||s<o.g){if(o.visited=!0,o.parent=e,!o.centroid||!n.centroid)throw new Error("Unexpected state");o.h=o.h||this.heuristic(o.centroid,n.centroid),o.g=s,o.f=o.g+o.h,a?i.rescoreElement(o):i.push(o)}}}return[]}static heuristic(t,e){return r.distanceToSquared(t,e)}static neighbours(t,e){const n=[];for(let i=0;i<e.neighbours.length;i++)n.push(t[e.neighbours[i]]);return n}}.search(c,h,u),p=function(t,e){for(var n=0;n<t.neighbours.length;n++)if(t.neighbours[n]===e.id)return t.portals[n]},f=new s;f.push(t);for(let t=0;t<d.length;t++){const e=d[t],n=d[t+1];if(n){const t=p(e,n);f.push(l[t[0]],l[t[1]])}}f.push(e),f.stringPull();const m=f.path.map(t=>new i.Vector3(t.x,t.y,t.z));return m.shift(),m}}a.prototype.getGroup=function(){const t=new i.Plane;return function(e,n,i=!1){if(!this.zones[e])return null;let o=null,s=Math.pow(50,2);const a=this.zones[e];for(let e=0;e<a.groups.length;e++){const c=a.groups[e];for(const l of c){if(i&&(t.setFromCoplanarPoints(a.vertices[l.vertexIds[0]],a.vertices[l.vertexIds[1]],a.vertices[l.vertexIds[2]]),Math.abs(t.distanceToPoint(n))<.01)&&r.isPointInPoly([a.vertices[l.vertexIds[0]],a.vertices[l.vertexIds[1]],a.vertices[l.vertexIds[2]]],n))return e;const c=r.distanceToSquared(l.centroid,n);c<s&&(o=e,s=c)}}return o}}(),a.prototype.clampStep=function(){const t=new i.Vector3,e=new i.Plane,n=new i.Triangle,r=new i.Vector3;let o,s,a=new i.Vector3;return function(i,c,l,h,u,d){const p=this.zones[h].vertices,f=this.zones[h].groups[u],m=[l],g={};g[l.id]=0,o=void 0,a.set(0,0,0),s=1/0,e.setFromCoplanarPoints(p[l.vertexIds[0]],p[l.vertexIds[1]],p[l.vertexIds[2]]),e.projectPoint(c,t),r.copy(t);for(let e=m.pop();e;e=m.pop()){n.set(p[e.vertexIds[0]],p[e.vertexIds[1]],p[e.vertexIds[2]]),n.closestPointToPoint(r,t),t.distanceToSquared(r)<s&&(o=e,a.copy(t),s=t.distanceToSquared(r));const i=g[e.id];if(!(i>2))for(let t=0;t<e.neighbours.length;t++){const n=f[e.neighbours[t]];n.id in g||(m.push(n),g[n.id]=i+1)}}return d.copy(a),o}}();const c={PLAYER:new i.Color(15631215).convertSRGBToLinear().getHex(),TARGET:new i.Color(14469912).convertSRGBToLinear().getHex(),PATH:new i.Color(41903).convertSRGBToLinear().getHex(),WAYPOINT:new i.Color(41903).convertSRGBToLinear().getHex(),CLAMPED_STEP:new i.Color(14472114).convertSRGBToLinear().getHex(),CLOSEST_NODE:new i.Color(4417387).convertSRGBToLinear().getHex()};n.Pathfinding=a,n.PathfindingHelper=class extends i.Object3D{constructor(){super(),this._playerMarker=new i.Mesh(new i.SphereBufferGeometry(.25,32,32),new i.MeshBasicMaterial({color:c.PLAYER})),this._targetMarker=new i.Mesh(new i.BoxBufferGeometry(.3,.3,.3),new i.MeshBasicMaterial({color:c.TARGET})),this._nodeMarker=new i.Mesh(new i.BoxBufferGeometry(.1,.8,.1),new i.MeshBasicMaterial({color:c.CLOSEST_NODE})),this._stepMarker=new i.Mesh(new i.BoxBufferGeometry(.1,1,.1),new i.MeshBasicMaterial({color:c.CLAMPED_STEP})),this._pathMarker=new i.Object3D,this._pathLineMaterial=new i.LineBasicMaterial({color:c.PATH,linewidth:2}),this._pathPointMaterial=new i.MeshBasicMaterial({color:c.WAYPOINT}),this._pathPointGeometry=new i.SphereBufferGeometry(.08),this._markers=[this._playerMarker,this._targetMarker,this._nodeMarker,this._stepMarker,this._pathMarker],this._markers.forEach(t=>{t.visible=!1,this.add(t)})}setPath(t){for(;this._pathMarker.children.length;)this._pathMarker.children[0].visible=!1,this._pathMarker.remove(this._pathMarker.children[0]);t=[this._playerMarker.position].concat(t);const e=new i.BufferGeometry;e.setAttribute("position",new i.BufferAttribute(new Float32Array(3*t.length),3));for(let n=0;n<t.length;n++)e.attributes.position.setXYZ(n,t[n].x,t[n].y+.2,t[n].z);this._pathMarker.add(new i.Line(e,this._pathLineMaterial));for(let e=0;e<t.length-1;e++){const n=new i.Mesh(this._pathPointGeometry,this._pathPointMaterial);n.position.copy(t[e]),n.position.y+=.2,this._pathMarker.add(n)}return this._pathMarker.visible=!0,this}setPlayerPosition(t){return this._playerMarker.position.copy(t),this._playerMarker.visible=!0,this}setTargetPosition(t){return this._targetMarker.position.copy(t),this._targetMarker.visible=!0,this}setNodePosition(t){return this._nodeMarker.position.copy(t),this._nodeMarker.visible=!0,this}setStepPosition(t){return this._stepMarker.position.copy(t),this._stepMarker.visible=!0,this}reset(){for(;this._pathMarker.children.length;)this._pathMarker.children[0].visible=!1,this._pathMarker.remove(this._pathMarker.children[0]);return this._markers.forEach(t=>{t.visible=!1}),this}}},{three:11}],11:[function(t,e,n){!function(t,i){"object"==typeof n&&void 0!==e?i(n):"function"==typeof define&&define.amd?define(["exports"],i):(t="undefined"!=typeof globalThis?globalThis:t||self,i(t.THREE={}))}(this,function(t){"use strict";function e(){}function n(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?so.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}function i(t,e,n,i,r){for(let o=0,s=t.length-3;o<=s;o+=3){Co.fromArray(t,o);const s=r.x*Math.abs(Co.x)+r.y*Math.abs(Co.y)+r.z*Math.abs(Co.z),a=e.dot(Co),c=n.dot(Co),l=i.dot(Co);if(Math.max(-Math.max(a,c,l),Math.min(a,c,l))>s)return!1}return!0}function r(){Object.defineProperty(this,"id",{value:ns++}),this.uuid=no.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=r.DefaultUp.clone();const t=new fo,e=new ts,n=new po,i=new fo(1,1,1);e._onChange(function(){n.setFromEuler(e,!1)}),n._onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Wo},normalMatrix:{value:new ro}}),this.matrix=new Wo,this.matrixWorld=new Wo,this.matrixAutoUpdate=r.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new es,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}function o(){Object.defineProperty(this,"id",{value:Cs++}),this.uuid=no.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=An,this.side=wn,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=zn,this.blendDst=Gn,this.blendEquation=Nn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Jn,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Zr,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Kr,this.stencilZFail=Kr,this.stencilZPass=Kr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function s(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function a(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function c(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}function l(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=Jr,this.updateRange={offset:0,count:-1},this.version=0}function h(t,e,n){l.call(this,new Int8Array(t),e,n)}function u(t,e,n){l.call(this,new Uint8Array(t),e,n)}function d(t,e,n){l.call(this,new Uint8ClampedArray(t),e,n)}function p(t,e,n){l.call(this,new Int16Array(t),e,n)}function f(t,e,n){l.call(this,new Uint16Array(t),e,n)}function m(t,e,n){l.call(this,new Int32Array(t),e,n)}function g(t,e,n){l.call(this,new Uint32Array(t),e,n)}function v(t,e,n){l.call(this,new Uint16Array(t),e,n)}function y(t,e,n){l.call(this,new Float32Array(t),e,n)}function x(t,e,n){l.call(this,new Float64Array(t),e,n)}function _(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}function b(t,e){return new Bs[t](e)}function E(){Object.defineProperty(this,"id",{value:Hs++}),this.uuid=no.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}function w(t=new E,e=new Os){r.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function M(t,e,n,i,r,o,s,a,c,l,h,u){Ks.fromBufferAttribute(r,l),Zs.fromBufferAttribute(r,h),Js.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(e.morphTargets&&o&&d){ea.set(0,0,0),na.set(0,0,0),ia.set(0,0,0);for(let t=0,e=o.length;t<e;t++){const e=d[t],n=o[t];0!==e&&(Qs.fromBufferAttribute(n,l),$s.fromBufferAttribute(n,h),ta.fromBufferAttribute(n,u),s?(ea.addScaledVector(Qs,e),na.addScaledVector($s,e),ia.addScaledVector(ta,e)):(ea.addScaledVector(Qs.sub(Ks),e),na.addScaledVector($s.sub(Zs),e),ia.addScaledVector(ta.sub(Js),e)))}Ks.add(ea),Zs.add(na),Js.add(ia)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(l,Ks),t.boneTransform(h,Zs),t.boneTransform(u,Js));const p=function(t,e,n,i,r,o,s,a){let c;if(null===(c=e.side===Mn?i.intersectTriangle(s,o,r,!0,a):i.intersectTriangle(r,o,s,e.side!==Tn,a)))return null;ca.copy(a),ca.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(ca);return l<n.near||l>n.far?null:{distance:l,point:ca.clone(),object:t}}(t,e,n,i,Ks,Zs,Js,aa);if(p){a&&(ra.fromBufferAttribute(a,l),oa.fromBufferAttribute(a,h),sa.fromBufferAttribute(a,u),p.uv=Ls.getUV(aa,Ks,Zs,Js,ra,oa,sa,new io)),c&&(ra.fromBufferAttribute(c,l),oa.fromBufferAttribute(c,h),sa.fromBufferAttribute(c,u),p.uv2=Ls.getUV(aa,Ks,Zs,Js,ra,oa,sa,new io));const t={a:l,b:h,c:u,normal:new fo,materialIndex:0};Ls.getNormal(Ks,Zs,Js,t.normal),p.face=t}return p}function T(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function S(t){const e={};for(let n=0;n<t.length;n++){const i=T(t[n]);for(const t in i)e[t]=i[t]}return e}function A(t){o.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=ua,this.fragmentShader=da,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function R(){r.call(this),this.type="Camera",this.matrixWorldInverse=new Wo,this.projectionMatrix=new Wo,this.projectionMatrixInverse=new Wo}function L(t=50,e=1,n=.1,i=2e3){R.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function C(){function t(n,o){i(n,o),r=e.requestAnimationFrame(t)}let e=null,n=!1,i=null,r=null;return{start:function(){!0!==n&&null!==i&&(r=e.requestAnimationFrame(t),n=!0)},stop:function(){e.cancelAnimationFrame(r),n=!1},setAnimationLoop:function(t){i=t},setContext:function(t){e=t}}}function P(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const o=i.get(e);void 0===o?i.set(e,function(e,i){const r=e.array,o=e.usage,s=t.createBuffer();t.bindBuffer(i,s),t.bufferData(i,r,o),e.onUploadCallback();let a=t.FLOAT;return r instanceof Float32Array?a=t.FLOAT:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?n?a=t.HALF_FLOAT:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=t.UNSIGNED_SHORT:r instanceof Int16Array?a=t.SHORT:r instanceof Uint32Array?a=t.UNSIGNED_INT:r instanceof Int32Array?a=t.INT:r instanceof Int8Array?a=t.BYTE:r instanceof Uint8Array&&(a=t.UNSIGNED_BYTE),{buffer:s,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):o.version<e.version&&(function(e,i,r){const o=i.array,s=i.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,o):(n?t.bufferSubData(r,s.offset*o.BYTES_PER_ELEMENT,o,s.offset,s.count):t.bufferSubData(r,s.offset*o.BYTES_PER_ELEMENT,o.subarray(s.offset,s.offset+s.count)),s.count=-1)}(o.buffer,e,r),o.version=e.version)}}}function N(t,e,n,i){function r(e){return i.isWebGL2?t.bindVertexArray(e):m.bindVertexArrayOES(e)}function o(e){return i.isWebGL2?t.deleteVertexArray(e):m.deleteVertexArrayOES(e)}function s(t){const e=[],n=[],i=[];for(let t=0;t<f;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function a(){const t=x.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function c(t){l(t,0)}function l(n,r){const o=x.newAttributes,s=x.enabledAttributes,a=x.attributeDivisors;if(o[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),a[n]!==r){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),a[n]=r}}function h(){const e=x.newAttributes,n=x.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function u(e,n,r,o,s,a){!0!==i.isWebGL2||r!==t.INT&&r!==t.UNSIGNED_INT?t.vertexAttribPointer(e,n,r,o,s,a):t.vertexAttribIPointer(e,n,r,s,a)}function d(){p(),x!==y&&r((x=y).object)}function p(){y.geometry=null,y.program=null,y.wireframe=!1}const f=t.getParameter(t.MAX_VERTEX_ATTRIBS),m=i.isWebGL2?null:e.get("OES_vertex_array_object"),g=i.isWebGL2||null!==m,v={},y=s(null);let x=y;return{setup:function(o,d,p,f,y){let _=!1;if(g){const e=function(e,n,r){const o=!0===r.wireframe;let a=v[e.id];void 0===a&&(a={},v[e.id]=a);let c=a[n.id];void 0===c&&(c={},a[n.id]=c);let l=c[o];return void 0===l&&(l=s(i.isWebGL2?t.createVertexArray():m.createVertexArrayOES()),c[o]=l),l}(f,p,d);x!==e&&r((x=e).object),(_=function(t,e){const n=x.attributes,i=t.attributes;let r=0;for(const t in i){const e=n[t],o=i[t];if(void 0===e)return!0;if(e.attribute!==o)return!0;if(e.data!==o.data)return!0;r++}return x.attributesNum!==r||x.index!==e}(f,y))&&function(t,e){const n={},i=t.attributes;let r=0;for(const t in i){const e=i[t],o={};o.attribute=e,e.data&&(o.data=e.data),n[t]=o,r++}x.attributes=n,x.attributesNum=r,x.index=e}(f,y)}else{const t=!0===d.wireframe;x.geometry===f.id&&x.program===p.id&&x.wireframe===t||(x.geometry=f.id,x.program=p.id,x.wireframe=t,_=!0)}!0===o.isInstancedMesh&&(_=!0),null!==y&&n.update(y,t.ELEMENT_ARRAY_BUFFER),_&&(function(r,o,s,d){if(!1===i.isWebGL2&&(r.isInstancedMesh||d.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;a();const p=d.attributes,f=s.getAttributes(),m=o.defaultAttributeValues;for(const e in f){const i=f[e];if(i>=0){const o=p[e];if(void 0!==o){const e=o.normalized,r=o.itemSize,s=n.get(o);if(void 0===s)continue;const a=s.buffer,h=s.type,p=s.bytesPerElement;if(o.isInterleavedBufferAttribute){const n=o.data,s=n.stride,f=o.offset;n&&n.isInstancedInterleavedBuffer?(l(i,n.meshPerAttribute),void 0===d._maxInstanceCount&&(d._maxInstanceCount=n.meshPerAttribute*n.count)):c(i),t.bindBuffer(t.ARRAY_BUFFER,a),u(i,r,h,e,s*p,f*p)}else o.isInstancedBufferAttribute?(l(i,o.meshPerAttribute),void 0===d._maxInstanceCount&&(d._maxInstanceCount=o.meshPerAttribute*o.count)):c(i),t.bindBuffer(t.ARRAY_BUFFER,a),u(i,r,h,e,0,0)}else if("instanceMatrix"===e){const e=n.get(r.instanceMatrix);if(void 0===e)continue;const o=e.buffer,s=e.type;l(i+0,1),l(i+1,1),l(i+2,1),l(i+3,1),t.bindBuffer(t.ARRAY_BUFFER,o),t.vertexAttribPointer(i+0,4,s,!1,64,0),t.vertexAttribPointer(i+1,4,s,!1,64,16),t.vertexAttribPointer(i+2,4,s,!1,64,32),t.vertexAttribPointer(i+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(r.instanceColor);if(void 0===e)continue;const o=e.buffer,s=e.type;l(i,1),t.bindBuffer(t.ARRAY_BUFFER,o),t.vertexAttribPointer(i,3,s,!1,12,0)}else if(void 0!==m){const n=m[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}h()}(o,d,p,f),null!==y&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.get(y).buffer))},reset:d,resetDefaultState:p,dispose:function(){d();for(const t in v){const e=v[t];for(const t in e){const n=e[t];for(const t in n)o(n[t].object),delete n[t];delete e[t]}delete v[t]}},releaseStatesOfGeometry:function(t){if(void 0===v[t.id])return;const e=v[t.id];for(const t in e){const n=e[t];for(const t in n)o(n[t].object),delete n[t];delete e[t]}delete v[t.id]},releaseStatesOfProgram:function(t){for(const e in v){const n=v[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)o(i[t].object),delete i[t];delete n[t.id]}},initAttributes:a,enableAttribute:c,disableUnusedAttributes:h}}function D(t,e){return t[0]-e[0]}function I(t,e){return Math.abs(e[1])-Math.abs(t[1])}function O(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let o=Ca[r];if(void 0===o&&(o=new Float32Array(r),Ca[r]=o),0!==e){i.toArray(o,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(o,r)}return o}function F(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function k(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function B(t,e){let n=Pa[e];void 0===n&&(n=new Int32Array(e),Pa[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function H(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function U(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(F(n,e))return;t.uniform2fv(this.addr,e),k(n,e)}}function z(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(F(n,e))return;t.uniform3fv(this.addr,e),k(n,e)}}function G(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(F(n,e))return;t.uniform4fv(this.addr,e),k(n,e)}}function V(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(F(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),k(n,e)}else{if(F(n,i))return;Ia.set(i),t.uniformMatrix2fv(this.addr,!1,Ia),k(n,i)}}function W(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(F(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),k(n,e)}else{if(F(n,i))return;Da.set(i),t.uniformMatrix3fv(this.addr,!1,Da),k(n,i)}}function j(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(F(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),k(n,e)}else{if(F(n,i))return;Na.set(i),t.uniformMatrix4fv(this.addr,!1,Na),k(n,i)}}function X(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function q(t,e){const n=this.cache;F(n,e)||(t.uniform2iv(this.addr,e),k(n,e))}function Y(t,e){const n=this.cache;F(n,e)||(t.uniform3iv(this.addr,e),k(n,e))}function K(t,e){const n=this.cache;F(n,e)||(t.uniform4iv(this.addr,e),k(n,e))}function Z(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function J(t,e){const n=this.cache;F(n,e)||(t.uniform2uiv(this.addr,e),k(n,e))}function Q(t,e){const n=this.cache;F(n,e)||(t.uniform3uiv(this.addr,e),k(n,e))}function $(t,e){const n=this.cache;F(n,e)||(t.uniform4uiv(this.addr,e),k(n,e))}function tt(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||Sa,r)}function et(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Ra,r)}function nt(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||La,r)}function it(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Aa,r)}function rt(t,e){t.uniform1fv(this.addr,e)}function ot(t,e){const n=O(e,this.size,2);t.uniform2fv(this.addr,n)}function st(t,e){const n=O(e,this.size,3);t.uniform3fv(this.addr,n)}function at(t,e){const n=O(e,this.size,4);t.uniform4fv(this.addr,n)}function ct(t,e){const n=O(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function lt(t,e){const n=O(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function ht(t,e){const n=O(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function ut(t,e){t.uniform1iv(this.addr,e)}function dt(t,e){t.uniform2iv(this.addr,e)}function pt(t,e){t.uniform3iv(this.addr,e)}function ft(t,e){t.uniform4iv(this.addr,e)}function mt(t,e){t.uniform1uiv(this.addr,e)}function gt(t,e){t.uniform2uiv(this.addr,e)}function vt(t,e){t.uniform3uiv(this.addr,e)}function yt(t,e){t.uniform4uiv(this.addr,e)}function xt(t,e,n){const i=e.length,r=B(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||Sa,r[t])}function _t(t,e,n){const i=e.length,r=B(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||La,r[t])}function bt(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return H;case 35664:return U;case 35665:return z;case 35666:return G;case 35674:return V;case 35675:return W;case 35676:return j;case 5124:case 35670:return X;case 35667:case 35671:return q;case 35668:case 35672:return Y;case 35669:case 35673:return K;case 5125:return Z;case 36294:return J;case 36295:return Q;case 36296:return $;case 35678:case 36198:case 36298:case 36306:case 35682:return tt;case 35679:case 36299:case 36307:return et;case 35680:case 36300:case 36308:case 36293:return nt;case 36289:case 36303:case 36311:case 36292:return it}}(e.type)}function Et(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return rt;case 35664:return ot;case 35665:return st;case 35666:return at;case 35674:return ct;case 35675:return lt;case 35676:return ht;case 5124:case 35670:return ut;case 35667:case 35671:return dt;case 35668:case 35672:return pt;case 35669:case 35673:return ft;case 5125:return mt;case 36294:return gt;case 36295:return vt;case 36296:return yt;case 35678:case 36198:case 36298:case 36306:case 35682:return xt;case 35680:case 36300:case 36308:case 36293:return _t}}(e.type)}function wt(t){this.id=t,this.seq=[],this.map={}}function Mt(t,e){t.seq.push(e),t.map[e.id]=e}function Tt(t,e,n){const i=t.name,r=i.length;for(Oa.lastIndex=0;;){const o=Oa.exec(i),s=Oa.lastIndex;let a=o[1];const c="]"===o[2],l=o[3];if(c&&(a|=0),void 0===l||"["===l&&s+2===r){Mt(n,void 0===l?new bt(a,t,e):new Et(a,t,e));break}{let t=n.map[a];void 0===t&&Mt(n,t=new wt(a)),n=t}}}function St(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);Tt(n,t.getUniformLocation(e,n.name),this)}}function At(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}function Rt(t){switch(t){case Br:return["Linear","( value )"];case Hr:return["sRGB","( value )"];case zr:return["RGBE","( value )"];case Vr:return["RGBM","( value, 7.0 )"];case Wr:return["RGBM","( value, 16.0 )"];case jr:return["RGBD","( value, 256.0 )"];case Ur:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Gr:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Lt(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Ct(t,e){const n=Rt(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Pt(t){return""!==t}function Nt(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Dt(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}function It(t){return t.replace(ka,Ot)}function Ot(t,e){const n=ba[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return It(n)}function Ft(t){return t.replace(Ha,Bt).replace(Ba,kt)}function kt(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Bt(t,e,n,i)}function Bt(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Ht(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Ut(t,e,n,i){const r=t.getContext(),o=n.defines;let s=n.vertexShader,a=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===_n?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===bn?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===En&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case ui:case di:e="ENVMAP_TYPE_CUBE";break;case mi:case gi:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case di:case gi:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case ni:e="ENVMAP_BLENDING_MULTIPLY";break;case ii:e="ENVMAP_BLENDING_MIX";break;case ri:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Pt).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(o),m=r.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((g=[f].filter(Pt).join("\n")).length>0&&(g+="\n"),(v=[p,f].filter(Pt).join("\n")).length>0&&(v+="\n")):(g=[Ht(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Pt).join("\n"),v=[p,Ht(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==oi?"#define TONE_MAPPING":"",n.toneMapping!==oi?ba.tonemapping_pars_fragment:"",n.toneMapping!==oi?function(t,e){let n;switch(e){case si:n="Linear";break;case ai:n="Reinhard";break;case ci:n="OptimizedCineon";break;case li:n="ACESFilmic";break;case hi:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",ba.encodings_pars_fragment,n.map?Ct("mapTexelToLinear",n.mapEncoding):"",n.matcap?Ct("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Ct("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Ct("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Ct("lightMapTexelToLinear",n.lightMapEncoding):"",function(t,e){const n=Rt(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Pt).join("\n")),s=Dt(s=Nt(s=It(s),n),n),a=Dt(a=Nt(a=It(a),n),n),s=Ft(s),a=Ft(a),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===$r?"":"out highp vec4 pc_fragColor;",n.glslVersion===$r?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+g+s,_=y+v+a,b=At(r,r.VERTEX_SHADER,x),E=At(r,r.FRAGMENT_SHADER,_);if(r.attachShader(m,b),r.attachShader(m,E),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(m).trim(),e=r.getShaderInfoLog(b).trim(),n=r.getShaderInfoLog(E).trim();let i=!0,o=!0;if(!1===r.getProgramParameter(m,r.LINK_STATUS)){i=!1;const e=Lt(r,b,"vertex"),n=Lt(r,E,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"gl.VALIDATE_STATUS",r.getProgramParameter(m,r.VALIDATE_STATUS),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(o=!1);o&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:v}})}r.deleteShader(b),r.deleteShader(E);let w;this.getUniforms=function(){return void 0===w&&(w=new St(r,m)),w};let M;return this.getAttributes=function(){return void 0===M&&(M=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r).name;n[i]=t.getAttribLocation(e,i)}return n}(r,m)),M},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=Fa++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=b,this.fragmentShader=E,this}function zt(t,e,n,i,r,o){function s(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Br,e}const a=[],c=i.isWebGL2,l=i.logarithmicDepthBuffer,h=i.floatVertexTextures,u=i.maxVertexUniforms,d=i.vertexTextures;let p=i.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];return{getParameters:function(r,a,m,g,v){const y=g.fog,x=r.isMeshStandardMaterial?g.environment:null,_=e.get(r.envMap||x),b=f[r.type],E=v.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(h)return 1024;{const t=u,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(v):0;null!==r.precision&&(p=i.getMaxPrecision(r.precision))!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",p,"instead.");let w,M;if(b){const t=wa[b];w=t.vertexShader,M=t.fragmentShader}else w=r.vertexShader,M=r.fragmentShader;const T=t.getRenderTarget();return{isWebGL2:c,shaderID:b,shaderName:r.type,vertexShader:w,fragmentShader:M,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:p,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:d,outputEncoding:null!==T?s(T.texture):t.outputEncoding,map:!!r.map,mapEncoding:s(r.map),matcap:!!r.matcap,matcapEncoding:s(r.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:s(_),envMapCubeUV:!!_&&(_.mapping===mi||_.mapping===gi),lightMap:!!r.lightMap,lightMapEncoding:s(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:s(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:r.normalMapType===Yr,tangentSpaceNormalMap:r.normalMapType===qr,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!y,useFog:r.fog,fogExp2:y&&y.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:l,skinning:r.skinning&&E>0,maxBones:E,useVertexTexture:h,morphTargets:r.morphTargets,morphNormals:r.morphNormals,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numDirLightShadows:a.directionalShadowMap.length,numPointLightShadows:a.pointShadowMap.length,numSpotLightShadows:a.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&m.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:oi,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===Tn,flipSided:r.side===Mn,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<m.length;t++)n.push(e[m[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=f[t.type];let n;if(e){const t=wa[e];n=ha.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=a.length;t<e;t++){const e=a[t];if(e.cacheKey===n){++(i=e).usedTimes;break}}return void 0===i&&(i=new Ut(t,n,e,r),a.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=a.indexOf(t);a[e]=a[a.length-1],a.pop(),t.destroy()}},programs:a}}function Gt(t){function e(e,r,o,a,c,l){let h=n[i];const u=t.get(o);return void 0===h?(h={id:e.id,object:e,geometry:r,material:o,program:u.program||s,groupOrder:a,renderOrder:e.renderOrder,z:c,group:l},n[i]=h):(h.id=e.id,h.object=e,h.geometry=r,h.material=o,h.program=u.program||s,h.groupOrder=a,h.renderOrder=e.renderOrder,h.z=c,h.group=l),i++,h}const n=[];let i=0;const r=[],o=[],s={id:-1};return{opaque:r,transparent:o,init:function(){i=0,r.length=0,o.length=0},push:function(t,n,i,s,a,c){const l=e(t,n,i,s,a,c);(!0===i.transparent?o:r).push(l)},unshift:function(t,n,i,s,a,c){const l=e(t,n,i,s,a,c);(!0===i.transparent?o:r).unshift(l)},finish:function(){for(let t=i,e=n.length;t<e;t++){const e=n[t];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.program=null,e.group=null}},sort:function(t,e){r.length>1&&r.sort(t||function(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}),o.length>1&&o.sort(e||function(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id})}}}function Vt(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Wt(t,e){const n=new function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new fo,color:new Is};break;case"SpotLight":n={position:new fo,direction:new fo,color:new Is,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new fo,color:new Is,distance:0,decay:0};break;case"HemisphereLight":n={direction:new fo,skyColor:new Is,groundColor:new Is};break;case"RectAreaLight":n={color:new Is,position:new fo,halfWidth:new fo,halfHeight:new fo}}return t[e.id]=n,n}}},i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new io};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new io,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new fo);const o=new fo,s=new Wo,a=new Wo;return{setup:function(o){let s=0,a=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let l=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0;o.sort(Vt);for(let t=0,e=o.length;t<e;t++){const e=o[t],v=e.color,y=e.intensity,x=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=v.r*y,a+=v.g*y,c+=v.b*y;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],y);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[l]=n,r.directionalShadowMap[l]=_,r.directionalShadowMatrix[l]=e.shadow.matrix,f++}r.directional[l]=t,l++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(v).multiplyScalar(y),t.distance=x,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.spotShadow[u]=n,r.spotShadowMap[u]=_,r.spotShadowMatrix[u]=e.shadow.matrix,g++}r.spot[u]=t,u++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(v).multiplyScalar(y),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[d]=t,d++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=_,r.pointShadowMatrix[h]=e.shadow.matrix,m++}r.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(y),t.groundColor.copy(e.groundColor).multiplyScalar(y),r.hemi[p]=t,p++}}d>0&&(e.isWebGL2?(r.rectAreaLTC1=Ea.LTC_FLOAT_1,r.rectAreaLTC2=Ea.LTC_FLOAT_2):!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Ea.LTC_FLOAT_1,r.rectAreaLTC2=Ea.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Ea.LTC_HALF_1,r.rectAreaLTC2=Ea.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=s,r.ambient[1]=a,r.ambient[2]=c;const v=r.hash;v.directionalLength===l&&v.pointLength===h&&v.spotLength===u&&v.rectAreaLength===d&&v.hemiLength===p&&v.numDirectionalShadows===f&&v.numPointShadows===m&&v.numSpotShadows===g||(r.directional.length=l,r.spot.length=u,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=m,r.pointShadowMap.length=m,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=m,r.spotShadowMatrix.length=g,v.directionalLength=l,v.pointLength=h,v.spotLength=u,v.rectAreaLength=d,v.hemiLength=p,v.numDirectionalShadows=f,v.numPointShadows=m,v.numSpotShadows=g,r.version=Ua++)},setupView:function(t,e){let n=0,i=0,c=0,l=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),o.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=r.spot[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),o.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(u),c++}else if(d.isRectAreaLight){const t=r.rectArea[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),a.identity(),s.copy(d.matrixWorld),s.premultiply(u),a.extractRotation(s),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),l++}else if(d.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:r}}function jt(t,e){const n=new Wt(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function Xt(t,e,n){function i(t,e,n){const i=t<<0|e<<1|n<<2;let r=d[i];return void 0===r&&(r=new za({depthPacking:Xr,morphTargets:t,skinning:e}),d[i]=r),r}function r(t,e,n){const i=t<<0|e<<1|n<<2;let r=p[i];return void 0===r&&(r=new Ga({morphTargets:t,skinning:e}),p[i]=r),r}function o(e,n,o,s,a,c,l){let h=null,u=i,d=e.customDepthMaterial;if(!0===s.isPointLight&&(u=r,d=e.customDistanceMaterial),void 0===d){let t=!1;!0===o.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let i=!1;!0===e.isSkinnedMesh&&(!0===o.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e));h=u(t,i,!0===e.isInstancedMesh)}else h=d;if(t.localClippingEnabled&&!0===o.clipShadows&&0!==o.clippingPlanes.length){const t=h.uuid,e=o.uuid;let n=f[t];void 0===n&&(n={},f[t]=n);let i=n[e];void 0===i&&(i=h.clone(),n[e]=i),h=i}return h.visible=o.visible,h.wireframe=o.wireframe,h.side=l===En?null!==o.shadowSide?o.shadowSide:o.side:null!==o.shadowSide?o.shadowSide:g[o.side],h.clipShadows=o.clipShadows,h.clippingPlanes=o.clippingPlanes,h.clipIntersection=o.clipIntersection,h.wireframeLinewidth=o.wireframeLinewidth,h.linewidth=o.linewidth,!0===s.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(s.matrixWorld),h.nearDistance=a,h.farDistance=c),h}function s(n,i,r,c,l){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&l===En)&&(!n.frustumCulled||a.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const i=e.update(n),s=n.material;if(Array.isArray(s)){const e=i.groups;for(let a=0,h=e.length;a<h;a++){const h=e[a],u=s[h.materialIndex];if(u&&u.visible){const e=o(n,i,u,c,r.near,r.far,l);t.renderBufferDirect(r,null,i,e,n,h)}}}else if(s.visible){const e=o(n,i,s,c,r.near,r.far,l);t.renderBufferDirect(r,null,i,e,n,null)}}const h=n.children;for(let t=0,e=h.length;t<e;t++)s(h[t],i,r,c,l)}let a=new xa;const c=new io,h=new io,u=new lo,d=[],p=[],f={},m=n.maxTextureSize,g={0:Mn,1:wn,2:Tn},v=new A({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new io},radius:{value:4}},vertexShader:Wa,fragmentShader:Va}),y=v.clone();y.defines.HORIZONTAL_PASS=1;const x=new E;x.setAttribute("position",new l(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new w(x,v),b=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=_n,this.render=function(n,i,r){if(!1===b.enabled)return;if(!1===b.autoUpdate&&!1===b.needsUpdate)return;if(0===n.length)return;const o=t.getRenderTarget(),l=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.state;p.setBlending(Sn),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(let o=0,l=n.length;o<l;o++){const l=n[o],d=l.shadow;if(void 0===d){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===d.autoUpdate&&!1===d.needsUpdate)continue;c.copy(d.mapSize);const f=d.getFrameExtents();if(c.multiply(f),h.copy(d.mapSize),(c.x>m||c.y>m)&&(c.x>m&&(h.x=Math.floor(m/f.x),c.x=h.x*f.x,d.mapSize.x=h.x),c.y>m&&(h.y=Math.floor(m/f.y),c.y=h.y*f.y,d.mapSize.y=h.y)),null===d.map&&!d.isPointLightShadow&&this.type===En){const t={minFilter:wi,magFilter:wi,format:Ui};d.map=new ho(c.x,c.y,t),d.map.texture.name=l.name+".shadowMap",d.mapPass=new ho(c.x,c.y,t),d.camera.updateProjectionMatrix()}if(null===d.map){const t={minFilter:_i,magFilter:_i,format:Ui};d.map=new ho(c.x,c.y,t),d.map.texture.name=l.name+".shadowMap",d.camera.updateProjectionMatrix()}t.setRenderTarget(d.map),t.clear();const g=d.getViewportCount();for(let t=0;t<g;t++){const e=d.getViewport(t);u.set(h.x*e.x,h.y*e.y,h.x*e.z,h.y*e.w),p.viewport(u),d.updateMatrices(l,t),a=d.getFrustum(),s(i,r,d.camera,l,this.type)}d.isPointLightShadow||this.type!==En||function(n,i){const r=e.update(_);v.uniforms.shadow_pass.value=n.map.texture,v.uniforms.resolution.value=n.mapSize,v.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,v,_,null),y.uniforms.shadow_pass.value=n.mapPass.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,y,_,null)}(d,r),d.needsUpdate=!1}b.needsUpdate=!1,t.setRenderTarget(o,l,d)}}function qt(t,e,n,i,r,o,s){function a(t,e){return N?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function c(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?no.floorPowerOfTwo:Math.floor,o=i(r*t.width),s=i(r*t.height);void 0===P&&(P=a(o,s));const c=n?a(o,s):P;c.width=o,c.height=s;return c.getContext("2d").drawImage(t,0,0,o,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+o+"x"+s+")."),c}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function l(t){return no.isPowerOfTwo(t.width)&&no.isPowerOfTwo(t.height)}function h(t,e){return t.generateMipmaps&&e&&t.minFilter!==_i&&t.minFilter!==wi}function u(e,n,r,o){t.generateMipmap(e);i.get(n).__maxMipLevel=Math.log2(Math.max(r,o))}function d(n,i,r){if(!1===T)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;return i===t.RED&&(r===t.FLOAT&&(o=t.R32F),r===t.HALF_FLOAT&&(o=t.R16F),r===t.UNSIGNED_BYTE&&(o=t.R8)),i===t.RGB&&(r===t.FLOAT&&(o=t.RGB32F),r===t.HALF_FLOAT&&(o=t.RGB16F),r===t.UNSIGNED_BYTE&&(o=t.RGB8)),i===t.RGBA&&(r===t.FLOAT&&(o=t.RGBA32F),r===t.HALF_FLOAT&&(o=t.RGBA16F),r===t.UNSIGNED_BYTE&&(o=t.RGBA8)),o!==t.R16F&&o!==t.R32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function p(e){return e===_i||e===bi||e===Ei?t.NEAREST:t.LINEAR}function f(e){const n=e.target;n.removeEventListener("dispose",f),function(e){const n=i.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),i.remove(e)}(n),n.isVideoTexture&&C.delete(n),s.memory.textures--}function m(e){const n=e.target;n.removeEventListener("dispose",m),function(e){const n=e.texture,r=i.get(e),o=i.get(n);if(!e)return;void 0!==o.__webglTexture&&t.deleteTexture(o.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(r.__webglFramebuffer[e]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[e]);else t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&t.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer);i.remove(n),i.remove(e)}(n),s.memory.textures--}function g(e,r){const o=i.get(e);if(e.isVideoTexture&&function(t){const e=s.render.frame;C.get(t)!==e&&(C.set(t,e),t.update())}(e),e.version>0&&o.__version!==e.version){const t=e.image;if(void 0===t)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==t.complete)return void _(o,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_2D,o.__webglTexture)}function v(e,r){const s=i.get(e);e.version>0&&s.__version!==e.version?function(e,i,r){if(6!==i.image.length)return;x(e,i),n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,i.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const s=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),a=i.image[0]&&i.image[0].isDataTexture,p=[];for(let t=0;t<6;t++)p[t]=s||a?a?i.image[t].image:i.image[t]:c(i.image[t],!1,!0,A);const f=p[0],m=l(f)||T,g=o.convert(i.format),v=o.convert(i.type),_=d(i.internalFormat,g,v);y(t.TEXTURE_CUBE_MAP,i,m);let b;if(s){for(let e=0;e<6;e++){b=p[e].mipmaps;for(let r=0;r<b.length;r++){const o=b[r];i.format!==Ui&&i.format!==Hi?null!==g?n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,_,o.width,o.height,0,o.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,_,o.width,o.height,0,g,v,o.data)}}e.__maxMipLevel=b.length-1}else{b=i.mipmaps;for(let e=0;e<6;e++)if(a){n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,_,p[e].width,p[e].height,0,g,v,p[e].data);for(let i=0;i<b.length;i++){const r=b[i].image[e].image;n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,_,r.width,r.height,0,g,v,r.data)}}else{n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,_,g,v,p[e]);for(let i=0;i<b.length;i++){const r=b[i];n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,_,g,v,r.image[e])}}e.__maxMipLevel=b.length}h(i,m)&&u(t.TEXTURE_CUBE_MAP,i,f.width,f.height);e.__version=i.version,i.onUpdate&&i.onUpdate(i)}(s,e,r):(n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_CUBE_MAP,s.__webglTexture))}function y(n,o,s){if(s?(t.texParameteri(n,t.TEXTURE_WRAP_S,I[o.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,I[o.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,I[o.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,O[o.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,O[o.minFilter])):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),o.wrapS===yi&&o.wrapT===yi||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,t.TEXTURE_MAG_FILTER,p(o.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,p(o.minFilter)),o.minFilter!==_i&&o.minFilter!==wi&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(o.type===Ni&&!1===e.has("OES_texture_float_linear"))return;if(!1===T&&o.type===Di&&!1===e.has("OES_texture_half_float_linear"))return;(o.anisotropy>1||i.get(o).__currentAnisotropy)&&(t.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),i.get(o).__currentAnisotropy=o.anisotropy)}}function x(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",f),e.__webglTexture=t.createTexture(),s.memory.textures++)}function _(e,i,r){let s=t.TEXTURE_2D;i.isDataTexture2DArray&&(s=t.TEXTURE_2D_ARRAY),i.isDataTexture3D&&(s=t.TEXTURE_3D),x(e,i),n.activeTexture(t.TEXTURE0+r),n.bindTexture(s,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,i.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const a=function(t){return!T&&(t.wrapS!==yi||t.wrapT!==yi||t.minFilter!==_i&&t.minFilter!==wi)}(i)&&!1===l(i.image),p=c(i.image,a,!1,R),f=l(p)||T,m=o.convert(i.format);let g=o.convert(i.type),v=d(i.internalFormat,m,g);y(s,i,f);let _;const b=i.mipmaps;if(i.isDepthTexture)v=t.DEPTH_COMPONENT,T?v=i.type===Ni?t.DEPTH_COMPONENT32F:i.type===Pi?t.DEPTH_COMPONENT24:i.type===ki?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT16:i.type===Ni&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===Wi&&v===t.DEPTH_COMPONENT&&i.type!==Li&&i.type!==Pi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=Li,g=o.convert(i.type)),i.format===ji&&v===t.DEPTH_COMPONENT&&(v=t.DEPTH_STENCIL,i.type!==ki&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=ki,g=o.convert(i.type))),n.texImage2D(t.TEXTURE_2D,0,v,p.width,p.height,0,m,g,null);else if(i.isDataTexture)if(b.length>0&&f){for(let e=0,i=b.length;e<i;e++)_=b[e],n.texImage2D(t.TEXTURE_2D,e,v,_.width,_.height,0,m,g,_.data);i.generateMipmaps=!1,e.__maxMipLevel=b.length-1}else n.texImage2D(t.TEXTURE_2D,0,v,p.width,p.height,0,m,g,p.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(let e=0,r=b.length;e<r;e++)_=b[e],i.format!==Ui&&i.format!==Hi?null!==m?n.compressedTexImage2D(t.TEXTURE_2D,e,v,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(t.TEXTURE_2D,e,v,_.width,_.height,0,m,g,_.data);e.__maxMipLevel=b.length-1}else if(i.isDataTexture2DArray)n.texImage3D(t.TEXTURE_2D_ARRAY,0,v,p.width,p.height,p.depth,0,m,g,p.data),e.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(t.TEXTURE_3D,0,v,p.width,p.height,p.depth,0,m,g,p.data),e.__maxMipLevel=0;else if(b.length>0&&f){for(let e=0,i=b.length;e<i;e++)_=b[e],n.texImage2D(t.TEXTURE_2D,e,v,m,g,_);i.generateMipmaps=!1,e.__maxMipLevel=b.length-1}else n.texImage2D(t.TEXTURE_2D,0,v,m,g,p),e.__maxMipLevel=0;h(i,f)&&u(s,i,p.width,p.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function b(e,r,s,a){const c=r.texture,l=o.convert(c.format),h=o.convert(c.type),u=d(c.internalFormat,l,h);a===t.TEXTURE_3D||a===t.TEXTURE_2D_ARRAY?n.texImage3D(a,0,u,r.width,r.height,r.depth,0,l,h,null):n.texImage2D(a,0,u,r.width,r.height,0,l,h,null),n.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,s,a,i.get(c).__webglTexture,0),n.bindFramebuffer(t.FRAMEBUFFER,null)}function E(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer&&!n.stencilBuffer){let r=t.DEPTH_COMPONENT16;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Ni?r=t.DEPTH_COMPONENT32F:e.type===Pi&&(r=t.DEPTH_COMPONENT24));const i=M(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,i,r,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,r,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=M(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,e,t.DEPTH24_STENCIL8,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)}else{const e=n.texture,r=o.convert(e.format),s=o.convert(e.type),a=d(e.internalFormat,r,s);if(i){const e=M(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,e,a,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,a,n.width,n.height)}t.bindRenderbuffer(t.RENDERBUFFER,null)}function w(e){const r=i.get(e),o=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(o)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),g(r.depthTexture,0);const o=i.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===Wi)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,o,0);else{if(r.depthTexture.format!==ji)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,o,0)}}(r.__webglFramebuffer,e)}else if(o){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=t.createRenderbuffer(),E(r.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),E(r.__webglDepthbuffer,e,!1);n.bindFramebuffer(t.FRAMEBUFFER,null)}function M(t){return T&&t.isWebGLMultisampleRenderTarget?Math.min(L,t.samples):0}const T=r.isWebGL2,S=r.maxTextures,A=r.maxCubemapSize,R=r.maxTextureSize,L=r.maxSamples,C=new WeakMap;let P,N=!1;try{N="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}let D=0;const I={[vi]:t.REPEAT,[yi]:t.CLAMP_TO_EDGE,[xi]:t.MIRRORED_REPEAT},O={[_i]:t.NEAREST,[bi]:t.NEAREST_MIPMAP_NEAREST,[Ei]:t.NEAREST_MIPMAP_LINEAR,[wi]:t.LINEAR,[Mi]:t.LINEAR_MIPMAP_NEAREST,[Ti]:t.LINEAR_MIPMAP_LINEAR};let F=!1,k=!1;this.allocateTextureUnit=function(){const t=D;return t>=S&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+S),D+=1,t},this.resetTextureUnits=function(){D=0},this.setTexture2D=g,this.setTexture2DArray=function(e,r){const o=i.get(e);e.version>0&&o.__version!==e.version?_(o,e,r):(n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_2D_ARRAY,o.__webglTexture))},this.setTexture3D=function(e,r){const o=i.get(e);e.version>0&&o.__version!==e.version?_(o,e,r):(n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_3D,o.__webglTexture))},this.setTextureCube=v,this.setupRenderTarget=function(e){const r=e.texture,a=i.get(e),c=i.get(r);e.addEventListener("dispose",m),c.__webglTexture=t.createTexture(),c.__version=r.version,s.memory.textures++;const p=!0===e.isWebGLCubeRenderTarget,f=!0===e.isWebGLMultisampleRenderTarget,g=r.isDataTexture3D||r.isDataTexture2DArray,v=l(e)||T;if(!T||r.format!==Hi||r.type!==Ni&&r.type!==Di||(r.format=Ui,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),p){a.__webglFramebuffer=[];for(let e=0;e<6;e++)a.__webglFramebuffer[e]=t.createFramebuffer()}else if(a.__webglFramebuffer=t.createFramebuffer(),f)if(T){a.__webglMultisampledFramebuffer=t.createFramebuffer(),a.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,a.__webglColorRenderbuffer);const i=o.convert(r.format),s=o.convert(r.type),c=d(r.internalFormat,i,s),l=M(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,l,c,e.width,e.height),n.bindFramebuffer(t.FRAMEBUFFER,a.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,a.__webglColorRenderbuffer),t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(a.__webglDepthRenderbuffer=t.createRenderbuffer(),E(a.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(p){n.bindTexture(t.TEXTURE_CUBE_MAP,c.__webglTexture),y(t.TEXTURE_CUBE_MAP,r,v);for(let n=0;n<6;n++)b(a.__webglFramebuffer[n],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n);h(r,v)&&u(t.TEXTURE_CUBE_MAP,r,e.width,e.height),n.bindTexture(t.TEXTURE_CUBE_MAP,null)}else{let i=t.TEXTURE_2D;g&&(T?i=r.isDataTexture3D?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),n.bindTexture(i,c.__webglTexture),y(i,r,v),b(a.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,i),h(r,v)&&u(t.TEXTURE_2D,r,e.width,e.height),n.bindTexture(t.TEXTURE_2D,null)}e.depthBuffer&&w(e)},this.updateRenderTargetMipmap=function(e){const r=e.texture;if(h(r,l(e)||T)){const o=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,s=i.get(r).__webglTexture;n.bindTexture(o,s),u(o,r,e.width,e.height),n.bindTexture(o,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(T){const r=i.get(e);n.bindFramebuffer(t.READ_FRAMEBUFFER,r.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,r.__webglFramebuffer);const o=e.width,s=e.height;let a=t.COLOR_BUFFER_BIT;e.depthBuffer&&(a|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&(a|=t.STENCIL_BUFFER_BIT),t.blitFramebuffer(0,0,o,s,0,0,o,s,a,t.NEAREST),n.bindFramebuffer(t.FRAMEBUFFER,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),F=!0),t=t.texture),g(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===k&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),k=!0),t=t.texture),v(t,e)}}function Yt(t,e,n){const i=n.isWebGL2;return{convert:function(n){let r;if(n===Si)return t.UNSIGNED_BYTE;if(n===Ii)return t.UNSIGNED_SHORT_4_4_4_4;if(n===Oi)return t.UNSIGNED_SHORT_5_5_5_1;if(n===Fi)return t.UNSIGNED_SHORT_5_6_5;if(n===Ai)return t.BYTE;if(n===Ri)return t.SHORT;if(n===Li)return t.UNSIGNED_SHORT;if(n===Ci)return t.INT;if(n===Pi)return t.UNSIGNED_INT;if(n===Ni)return t.FLOAT;if(n===Di)return i?t.HALF_FLOAT:null!==(r=e.get("OES_texture_half_float"))?r.HALF_FLOAT_OES:null;if(n===Bi)return t.ALPHA;if(n===Hi)return t.RGB;if(n===Ui)return t.RGBA;if(n===zi)return t.LUMINANCE;if(n===Gi)return t.LUMINANCE_ALPHA;if(n===Wi)return t.DEPTH_COMPONENT;if(n===ji)return t.DEPTH_STENCIL;if(n===Xi)return t.RED;if(n===qi)return t.RED_INTEGER;if(n===Yi)return t.RG;if(n===Ki)return t.RG_INTEGER;if(n===Zi)return t.RGB_INTEGER;if(n===Ji)return t.RGBA_INTEGER;if(n===Qi||n===$i||n===tr||n===er){if(null===(r=e.get("WEBGL_compressed_texture_s3tc")))return null;if(n===Qi)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===$i)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===tr)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===er)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===nr||n===ir||n===rr||n===or){if(null===(r=e.get("WEBGL_compressed_texture_pvrtc")))return null;if(n===nr)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ir)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===rr)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===or)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===sr)return null!==(r=e.get("WEBGL_compressed_texture_etc1"))?r.COMPRESSED_RGB_ETC1_WEBGL:null;if((n===ar||n===cr)&&null!==(r=e.get("WEBGL_compressed_texture_etc"))){if(n===ar)return r.COMPRESSED_RGB8_ETC2;if(n===cr)return r.COMPRESSED_RGBA8_ETC2_EAC}return n===lr||n===hr||n===ur||n===dr||n===pr||n===fr||n===mr||n===gr||n===vr||n===yr||n===xr||n===_r||n===br||n===Er||n===Mr||n===Tr||n===Sr||n===Ar||n===Rr||n===Lr||n===Cr||n===Pr||n===Nr||n===Dr||n===Ir||n===Or||n===Fr||n===kr?null!==(r=e.get("WEBGL_compressed_texture_astc"))?n:null:n===wr?null!==(r=e.get("EXT_texture_compression_bptc"))?n:null:n===ki?i?t.UNSIGNED_INT_24_8:null!==(r=e.get("WEBGL_depth_texture"))?r.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}function Kt(){this._targetRay=null,this._grip=null,this._hand=null}function Zt(t,e){function n(t){const e=f.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function i(){f.forEach(function(t,e){t.disconnect(e)}),f.clear(),x=null,_=null,a.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),M.stop(),s.isPresenting=!1,s.dispatchEvent({type:"sessionend"})}function r(t){const e=c.inputSources;for(let t=0;t<p.length;t++)f.set(e[t],p[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=f.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),f.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=f.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}function o(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}const s=this,a=t.state;let c=null,l=1,h=null,u="local-floor",d=null;const p=[],f=new Map,m=new L;m.layers.enable(1),m.viewport=new lo;const g=new L;g.layers.enable(2),g.viewport=new lo;const v=[m,g],y=new ja;y.layers.enable(1),y.layers.enable(2);let x=null,_=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=p[t];return void 0===e&&(e=new Kt,p[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=p[t];return void 0===e&&(e=new Kt,p[t]=e),e.getGripSpace()},this.getHand=function(t){let e=p[t];return void 0===e&&(e=new Kt,p[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){l=t,!0===s.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){u=t,!0===s.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h},this.getSession=function(){return c},this.setSession=async function(t){if(null!==(c=t)){c.addEventListener("select",n),c.addEventListener("selectstart",n),c.addEventListener("selectend",n),c.addEventListener("squeeze",n),c.addEventListener("squeezestart",n),c.addEventListener("squeezeend",n),c.addEventListener("end",i),c.addEventListener("inputsourceschange",r);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const o={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:l},a=new XRWebGLLayer(c,e,o);c.updateRenderState({baseLayer:a}),h=await c.requestReferenceSpace(u),M.setContext(c),M.start(),s.isPresenting=!0,s.dispatchEvent({type:"sessionstart"})}};const b=new fo,E=new fo;this.getCamera=function(t){y.near=g.near=m.near=t.near,y.far=g.far=m.far=t.far,x===y.near&&_===y.far||(c.updateRenderState({depthNear:y.near,depthFar:y.far}),x=y.near,_=y.far);const e=t.parent,n=y.cameras;o(y,e);for(let t=0;t<n.length;t++)o(n[t],e);t.matrixWorld.copy(y.matrixWorld),t.matrix.copy(y.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){b.setFromMatrixPosition(e.matrixWorld),E.setFromMatrixPosition(n.matrixWorld);const i=b.distanceTo(E),r=e.projectionMatrix.elements,o=n.projectionMatrix.elements,s=r[14]/(r[10]-1),a=r[14]/(r[10]+1),c=(r[9]+1)/r[5],l=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(o[8]+1)/o[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,v=a+f,y=d-m,x=p+(i-m),_=c*a/v*g,w=l*a/v*g;t.projectionMatrix.makePerspective(y,x,_,w,g,v)}(y,m,g):y.projectionMatrix.copy(m.projectionMatrix),y};let w=null;const M=new C;M.setAnimationLoop(function(t,e){if(null!==(d=e.getViewerPose(h))){const t=d.views,e=c.renderState.baseLayer;a.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==y.cameras.length&&(y.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const r=t[i],o=e.getViewport(r),s=v[i];s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(o.x,o.y,o.width,o.height),0===i&&y.matrix.copy(s.matrix),!0===n&&y.cameras.push(s)}}const n=c.inputSources;for(let t=0;t<p.length;t++){const i=p[t],r=n[t];i.update(r,e,h)}w&&w(t,e)}),this.setAnimationLoop=function(t){w=t},this.dispose=function(){}}function Jt(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity);let r;n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix));let o;n.aoMap?o=n.aoMap:n.lightMap&&(o=n.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uv2Transform.value.copy(o.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===Mn&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===Mn&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,o){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===Mn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===Mn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===Mn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===Mn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===Mn&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===Mn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===Mn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===Mn&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===Mn&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,o):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Qt(t){function e(){return null===W?Q:1}function n(t,e){for(let n=0;n<t.length;n++){const i=t[n],r=v.getContext(i,e);if(null!==r)return r}return null}function i(){ut=new function(t){function e(e){if(void 0!==n[e])return n[e];let i;switch(e){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(e)}return n[e]=i,i}const n={};return{has:function(t){return null!==e(t)},init:function(t){t.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float")},get:function(t){const n=e(t);return null===n&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),n}}}(ht),dt=new function(t,e,n){function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let r;const o="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const a=i(s);a!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",a,"instead."),s=a);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),d=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),p=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=h>0,y=o||e.has("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:o?t.getParameter(t.MAX_SAMPLES):0}}(ht,ut,t),ut.init(dt),Nt=new Yt(ht,ut,dt),pt=new function(t,e,n){function i(e,n,i){const r=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let e=0;e<i;e++)t.texImage2D(n+e,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return o}function r(e){!0!==m[e]&&(t.enable(e),m[e]=!0)}function o(e){!1!==m[e]&&(t.disable(e),m[e]=!1)}function s(e,n,i,s,a,c,l,h){if(e!==Sn){if(!1===x&&(r(t.BLEND),x=!0),e===Pn)a=a||n,c=c||i,l=l||s,n===b&&a===M||(t.blendEquationSeparate(G[n],G[a]),b=n,M=a),i===E&&s===w&&c===T&&l===S||(t.blendFuncSeparate(V[i],V[s],V[c],V[l]),E=i,w=s,T=c,S=l),_=e,A=null;else if(e!==_||h!==A){if(b===Nn&&M===Nn||(t.blendEquation(t.FUNC_ADD),b=Nn,M=Nn),h)switch(e){case An:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case Rn:t.blendFunc(t.ONE,t.ONE);break;case Ln:t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA);break;case Cn:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case An:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case Rn:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case Ln:t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR);break;case Cn:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}E=null,w=null,T=null,S=null,_=e,A=h}}else!0===x&&(o(t.BLEND),x=!1)}function a(e){R!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),R=e)}function c(e){e!==vn?(r(t.CULL_FACE),e!==L&&(e===yn?t.cullFace(t.BACK):e===xn?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):o(t.CULL_FACE),L=e}function l(e,n,i){e?(r(t.POLYGON_OFFSET_FILL),P===n&&N===i||(t.polygonOffset(n,i),P=n,N=i)):o(t.POLYGON_OFFSET_FILL)}function h(e){void 0===e&&(e=t.TEXTURE0+D-1),k!==e&&(t.activeTexture(e),k=e)}const u=n.isWebGL2,d=new function(){let e=!1;const n=new lo;let i=null;const r=new lo(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,o,s,a){!0===a&&(e*=s,i*=s,o*=s),n.set(e,i,o,s),!1===r.equals(n)&&(t.clearColor(e,i,o,s),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},p=new function(){let e=!1,n=null,i=null,s=null;return{setTest:function(e){e?r(t.DEPTH_TEST):o(t.DEPTH_TEST)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case Yn:t.depthFunc(t.NEVER);break;case Kn:t.depthFunc(t.ALWAYS);break;case Zn:t.depthFunc(t.LESS);break;case Jn:t.depthFunc(t.LEQUAL);break;case Qn:t.depthFunc(t.EQUAL);break;case $n:t.depthFunc(t.GEQUAL);break;case ti:t.depthFunc(t.GREATER);break;case ei:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);i=e}},setLocked:function(t){e=t},setClear:function(e){s!==e&&(t.clearDepth(e),s=e)},reset:function(){e=!1,n=null,i=null,s=null}}},f=new function(){let e=!1,n=null,i=null,s=null,a=null,c=null,l=null,h=null,u=null;return{setTest:function(n){e||(n?r(t.STENCIL_TEST):o(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,r){i===e&&s===n&&a===r||(t.stencilFunc(e,n,r),i=e,s=n,a=r)},setOp:function(e,n,i){c===e&&l===n&&h===i||(t.stencilOp(e,n,i),c=e,l=n,h=i)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,n=null,i=null,s=null,a=null,c=null,l=null,h=null,u=null}}};let m={},g=null,v={},y=null,x=!1,_=null,b=null,E=null,w=null,M=null,T=null,S=null,A=!1,R=null,L=null,C=null,P=null,N=null;const D=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let I=!1,O=0;const F=t.getParameter(t.VERSION);-1!==F.indexOf("WebGL")?(O=parseFloat(/^WebGL (\d)/.exec(F)[1]),I=O>=1):-1!==F.indexOf("OpenGL ES")&&(O=parseFloat(/^OpenGL ES (\d)/.exec(F)[1]),I=O>=2);let k=null,B={};const H=new lo(0,0,t.canvas.width,t.canvas.height),U=new lo(0,0,t.canvas.width,t.canvas.height),z={};z[t.TEXTURE_2D]=i(t.TEXTURE_2D,t.TEXTURE_2D,1),z[t.TEXTURE_CUBE_MAP]=i(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),d.setClear(0,0,0,1),p.setClear(1),f.setClear(0),r(t.DEPTH_TEST),p.setFunc(Jn),a(!1),c(yn),r(t.CULL_FACE),s(Sn);const G={[Nn]:t.FUNC_ADD,[Dn]:t.FUNC_SUBTRACT,[In]:t.FUNC_REVERSE_SUBTRACT};if(u)G[On]=t.MIN,G[Fn]=t.MAX;else{const t=e.get("EXT_blend_minmax");null!==t&&(G[On]=t.MIN_EXT,G[Fn]=t.MAX_EXT)}const V={[kn]:t.ZERO,[Bn]:t.ONE,[Hn]:t.SRC_COLOR,[zn]:t.SRC_ALPHA,[qn]:t.SRC_ALPHA_SATURATE,[jn]:t.DST_COLOR,[Vn]:t.DST_ALPHA,[Un]:t.ONE_MINUS_SRC_COLOR,[Gn]:t.ONE_MINUS_SRC_ALPHA,[Xn]:t.ONE_MINUS_DST_COLOR,[Wn]:t.ONE_MINUS_DST_ALPHA};return{buffers:{color:d,depth:p,stencil:f},enable:r,disable:o,bindFramebuffer:function(e,n){null===n&&null!==g&&(n=g),v[e]!==n&&(t.bindFramebuffer(e,n),v[e]=n)},bindXRFramebuffer:function(e){e!==g&&(t.bindFramebuffer(t.FRAMEBUFFER,e),g=e)},useProgram:function(e){return y!==e&&(t.useProgram(e),y=e,!0)},setBlending:s,setMaterial:function(e,n){e.side===Tn?o(t.CULL_FACE):r(t.CULL_FACE);let i=e.side===Mn;n&&(i=!i),a(i),e.blending===An&&!1===e.transparent?s(Sn):s(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),p.setFunc(e.depthFunc),p.setTest(e.depthTest),p.setMask(e.depthWrite),d.setMask(e.colorWrite);const c=e.stencilWrite;f.setTest(c),c&&(f.setMask(e.stencilWriteMask),f.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),f.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),l(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?r(t.SAMPLE_ALPHA_TO_COVERAGE):o(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:a,setCullFace:c,setLineWidth:function(e){e!==C&&(I&&t.lineWidth(e),C=e)},setPolygonOffset:l,setScissorTest:function(e){e?r(t.SCISSOR_TEST):o(t.SCISSOR_TEST)},activeTexture:h,bindTexture:function(e,n){null===k&&h();let i=B[k];void 0===i&&(i={type:void 0,texture:void 0},B[k]=i),i.type===e&&i.texture===n||(t.bindTexture(e,n||z[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=B[k];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===H.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),H.copy(e))},viewport:function(e){!1===U.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),U.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),!0===u&&(t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),m={},k=null,B={},g=null,v={},y=null,x=!1,_=null,b=null,E=null,w=null,M=null,T=null,S=null,A=!1,R=null,L=null,C=null,P=null,N=null,H.set(0,0,t.canvas.width,t.canvas.height),U.set(0,0,t.canvas.width,t.canvas.height),d.reset(),p.reset(),f.reset()}}}(ht,ut,dt),ft=new function(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,r){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=r*(n/3);break;case t.LINES:e.lines+=r*(n/2);break;case t.LINE_STRIP:e.lines+=r*(n-1);break;case t.LINE_LOOP:e.lines+=r*n;break;case t.POINTS:e.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}(ht),mt=new function(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}},gt=new qt(ht,ut,pt,mt,dt,Nt,ft),vt=new function(t){function e(t,e){return e===pi?t.mapping=ui:e===fi&&(t.mapping=di),t}function n(t){const e=t.target;e.removeEventListener("dispose",n);const r=i.get(e);void 0!==r&&(i.delete(e),r.dispose())}let i=new WeakMap;return{get:function(r){if(r&&r.isTexture){const o=r.mapping;if(o===pi||o===fi){if(i.has(r))return e(i.get(r).texture,r.mapping);{const o=r.image;if(o&&o.height>0){const s=t.getRenderTarget(),a=new ma(o.height/2);return a.fromEquirectangularTexture(t,r),i.set(r,a),t.setRenderTarget(s),r.addEventListener("dispose",n),e(a.texture,r.mapping)}return null}}}return r},dispose:function(){i=new WeakMap}}}(U),yt=new P(ht,dt),Dt=new N(ht,ut,yt,dt),xt=new function(t,e,n,i){function r(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",r),delete s[o.id];const c=a.get(o);c&&(e.remove(c),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let o=0;if(null!==i){const t=i.array;o=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],o=t[e+2];n.push(i,r,r,o,o,i)}}else{const t=r.array;o=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const s=new(_(n)>65535?g:f)(n,1);s.version=o;const c=a.get(t);c&&e.remove(c),a.set(t,s)}const s={},a=new WeakMap;return{get:function(t,e){return!0===s[e.id]?e:(e.addEventListener("dispose",r),s[e.id]=!0,n.memory.geometries++,e)},update:function(n){const i=n.attributes;for(const n in i)e.update(i[n],t.ARRAY_BUFFER);const r=n.morphAttributes;for(const n in r){const i=r[n];for(let n=0,r=i.length;n<r;n++)e.update(i[n],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return a.get(t)}}}(ht,yt,ft,Dt),_t=new function(t,e,n,i){function r(t){const e=t.target;e.removeEventListener("dispose",r),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}let o=new WeakMap;return{update:function(s){const a=i.render.frame,c=s.geometry,l=e.get(s,c);return o.get(l)!==a&&(e.update(l),o.set(l,a)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",r)&&s.addEventListener("dispose",r),n.update(s.instanceMatrix,t.ARRAY_BUFFER),null!==s.instanceColor&&n.update(s.instanceColor,t.ARRAY_BUFFER)),l},dispose:function(){o=new WeakMap}}}(ht,xt,yt,ft),Lt=new function(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(r,o,s,a){const c=r.morphTargetInfluences,l=void 0===c?0:c.length;let h=e[o.id];if(void 0===h){h=[];for(let t=0;t<l;t++)h[t]=[t,0];e[o.id]=h}for(let t=0;t<l;t++){const e=h[t];e[0]=t,e[1]=c[t]}h.sort(I);for(let t=0;t<8;t++)t<l&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(D);const u=s.morphTargets&&o.morphAttributes.position,d=s.morphNormals&&o.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],r=e[0],s=e[1];r!==Number.MAX_SAFE_INTEGER&&s?(u&&o.getAttribute("morphTarget"+t)!==u[r]&&o.setAttribute("morphTarget"+t,u[r]),d&&o.getAttribute("morphNormal"+t)!==d[r]&&o.setAttribute("morphNormal"+t,d[r]),n[t]=s,p+=s):(u&&!0===o.hasAttribute("morphTarget"+t)&&o.deleteAttribute("morphTarget"+t),d&&!0===o.hasAttribute("morphNormal"+t)&&o.deleteAttribute("morphNormal"+t),n[t]=0)}const f=o.morphTargetsRelative?1:1-p;a.getUniforms().setValue(t,"morphTargetBaseInfluence",f),a.getUniforms().setValue(t,"morphTargetInfluences",n)}}}(ht),Tt=new function(t){function e(){h.value!==r&&(h.value=r,h.needsUpdate=o>0),i.numPlanes=o,i.numIntersection=0}function n(t,e,n,r){const o=null!==t?t.length:0;let s=null;if(0!==o){if(s=h.value,!0!==r||null===s){const i=n+4*o,r=e.matrixWorldInverse;l.getNormalMatrix(r),(null===s||s.length<i)&&(s=new Float32Array(i));for(let e=0,i=n;e!==o;++e,i+=4)c.copy(t[e]).applyMatrix4(r,l),c.normal.toArray(s,i),s[i+3]=c.constant}h.value=s,h.needsUpdate=!0}return i.numPlanes=o,i.numIntersection=0,s}const i=this;let r=null,o=0,s=!1,a=!1;const c=new ys,l=new ro,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,i){const a=0!==t.length||e||0!==o||s;return s=e,r=n(t,i,0),o=t.length,a},this.beginShadows=function(){a=!0,n(null)},this.endShadows=function(){a=!1,e()},this.setState=function(i,c,l){const u=i.clippingPlanes,d=i.clipIntersection,p=i.clipShadows,f=t.get(i);if(!s||null===u||0===u.length||a&&!p)a?n(null):e();else{const t=a?0:o,e=4*t;let i=f.clippingState||null;h.value=i,i=n(u,c,e,l);for(let t=0;t!==e;++t)i[t]=r[t];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}(mt),bt=new zt(U,vt,ut,dt,Dt,Tt),Et=new Jt(mt),wt=new function(t){let e=new WeakMap;return{get:function(n,i){let r;return!1===e.has(n)?(r=new Gt(t),e.set(n,[r])):i>=e.get(n).length?(r=new Gt(t),e.get(n).push(r)):r=e.get(n)[i],r},dispose:function(){e=new WeakMap}}}(mt),Mt=new function(t,e){let n=new WeakMap;return{get:function(i,r=0){let o;return!1===n.has(i)?(o=new jt(t,e),n.set(i,[o])):r>=n.get(i).length?(o=new jt(t,e),n.get(i).push(o)):o=n.get(i)[r],o},dispose:function(){n=new WeakMap}}}(ut,dt),Rt=new function(t,e,n,i,r){function o(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}const s=new Is(0);let a,c,l=0,h=null,u=0,d=null;return{getClearColor:function(){return s},setClearColor:function(t,e=1){s.set(t),o(s,l=e)},getClearAlpha:function(){return l},setClearAlpha:function(t){o(s,l=t)},render:function(n,r,p,f){let m=!0===r.isScene?r.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(m=null),null===m?o(s,l):m&&m.isColor&&(o(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.mapping===mi)?(void 0===c&&((c=new w(new la(1,1,1),new A({name:"BackgroundCubeMaterial",uniforms:T(wa.cube.uniforms),vertexShader:wa.cube.vertexShader,fragmentShader:wa.cube.fragmentShader,side:Mn,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=m,c.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,h===m&&u===m.version&&d===t.toneMapping||(c.material.needsUpdate=!0,h=m,u=m.version,d=t.toneMapping),n.unshift(c,c.geometry,c.material,0,0,null)):m&&m.isTexture&&(void 0===a&&((a=new w(new _a(2,2),new A({name:"BackgroundMaterial",uniforms:T(wa.background.uniforms),vertexShader:wa.background.vertexShader,fragmentShader:wa.background.fragmentShader,side:wn,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),h===m&&u===m.version&&d===t.toneMapping||(a.material.needsUpdate=!0,h=m,u=m.version,d=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null))}}}(U,vt,pt,_t,S),At=new Xt(U,_t,dt),Ct=new function(t,e,n,i){const r=i.isWebGL2;let o;this.setMode=function(t){o=t},this.render=function(e,i){t.drawArrays(o,e,i),n.update(i,o,1)},this.renderInstances=function(i,s,a){if(0===a)return;let c,l;if(r)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](o,i,s,a),n.update(s,o,a)}}(ht,ut,ft,dt),Pt=new function(t,e,n,i){const r=i.isWebGL2;let o,s,a;this.setMode=function(t){o=t},this.setIndex=function(t){s=t.type,a=t.bytesPerElement},this.render=function(e,i){t.drawElements(o,i,s,e*a),n.update(i,o,1)},this.renderInstances=function(i,c,l){if(0===l)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](o,c,s,i*a,l),n.update(c,o,l)}}(ht,ut,ft,dt),ft.programs=bt.programs,U.capabilities=dt,U.extensions=ut,U.properties=mt,U.renderLists=wt,U.shadowMap=At,U.state=pt,U.info=ft}function r(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),z=!0}function o(){console.log("THREE.WebGLRenderer: Context Restored."),z=!1;const t=ft.autoReset,e=At.enabled,n=At.autoUpdate,r=At.needsUpdate,o=At.type;i(),ft.autoReset=t,At.enabled=e,At.autoUpdate=n,At.needsUpdate=r,At.type=o}function s(t){const e=t.target;e.removeEventListener("dispose",s),function(t){(function(t){const e=mt.get(t).programs;void 0!==e&&e.forEach(function(t){bt.releaseProgram(t)})})(t),mt.remove(t)}(e)}function a(){Ft.stop()}function c(){Ft.start()}function l(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)k.pushLight(t),t.castShadow&&k.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||rt.intersectsSprite(t)){i&&ct.setFromMatrixPosition(t.matrixWorld).applyMatrix4(at);const e=_t.update(t),r=t.material;r.visible&&F.push(t,e,r,n,ct.z,null)}}else if(t.isImmediateRenderObject)i&&ct.setFromMatrixPosition(t.matrixWorld).applyMatrix4(at),F.push(t,null,t.material,n,ct.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==ft.render.frame&&(t.skeleton.update(),t.skeleton.frame=ft.render.frame),!t.frustumCulled||rt.intersectsObject(t))){i&&ct.setFromMatrixPosition(t.matrixWorld).applyMatrix4(at);const e=_t.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let o=0,s=i.length;o<s;o++){const s=i[o],a=r[s.materialIndex];a&&a.visible&&F.push(t,e,a,n,ct.z,s)}}else r.visible&&F.push(t,e,r,n,ct.z,null)}const r=t.children;for(let t=0,o=r.length;t<o;t++)l(r[t],e,n,i)}function h(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,o=t.length;r<o;r++){const o=t[r],s=o.object,a=o.geometry,c=null===i?o.material:i,l=o.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];s.layers.test(i.layers)&&(pt.viewport(q.copy(i.viewport)),k.setupLightsView(i),u(s,e,i,a,c,l))}}else u(s,e,n,a,c,l)}}function u(t,e,n,i,r,o){if(t.onBeforeRender(U,e,n,i,r,o),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=m(n,e,r,t);pt.setMaterial(r),Dt.reset(),function(t,e){t.render(function(t){U.renderBufferImmediate(t,e)})}(t,i)}else U.renderBufferDirect(n,e,i,r,t,o);t.onAfterRender(U,e,n,i,r,o)}function d(t,e,n){!0!==e.isScene&&(e=lt);const i=mt.get(t),r=k.state.lights,o=k.state.shadowsArray,a=r.state.version,c=bt.getParameters(t,r.state,o,e,n),l=bt.getProgramCacheKey(c);let h=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=vt.get(t.envMap||i.environment),void 0===h&&(t.addEventListener("dispose",s),h=new Map,i.programs=h);let u=h.get(l);if(void 0!==u){if(i.currentProgram===u&&i.lightsStateVersion===a)return p(t,c),u}else c.uniforms=bt.getUniforms(t),t.onBeforeCompile(c,U),u=bt.acquireProgram(c,l),h.set(l,u),i.uniforms=c.uniforms;const d=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(d.clippingPlanes=Tt.uniform),p(t,c),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=a,i.needsLights&&(d.ambientLightColor.value=r.state.ambient,d.lightProbe.value=r.state.probe,d.directionalLights.value=r.state.directional,d.directionalLightShadows.value=r.state.directionalShadow,d.spotLights.value=r.state.spot,d.spotLightShadows.value=r.state.spotShadow,d.rectAreaLights.value=r.state.rectArea,d.ltc_1.value=r.state.rectAreaLTC1,d.ltc_2.value=r.state.rectAreaLTC2,d.pointLights.value=r.state.point,d.pointLightShadows.value=r.state.pointShadow,d.hemisphereLights.value=r.state.hemi,d.directionalShadowMap.value=r.state.directionalShadowMap,d.directionalShadowMatrix.value=r.state.directionalShadowMatrix,d.spotShadowMap.value=r.state.spotShadowMap,d.spotShadowMatrix.value=r.state.spotShadowMatrix,d.pointShadowMap.value=r.state.pointShadowMap,d.pointShadowMatrix.value=r.state.pointShadowMatrix);const f=u.getUniforms(),m=St.seqWithValue(f.seq,d);return i.currentProgram=u,i.uniformsList=m,u}function p(t,e){const n=mt.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function m(t,e,n,i){!0!==e.isScene&&(e=lt),gt.resetTextureUnits();const r=e.fog,o=n.isMeshStandardMaterial?e.environment:null,s=null===W?U.outputEncoding:W.texture.encoding,a=vt.get(n.envMap||o),c=!0===n.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,l=mt.get(n),h=k.state.lights;if(!0===ot&&(!0===st||t!==X)){const e=t===X&&n.id===j;Tt.setState(n,t,e)}let u=!1;n.version===l.__version?l.needsLights&&l.lightsStateVersion!==h.state.version?u=!0:l.outputEncoding!==s?u=!0:i.isInstancedMesh&&!1===l.instancing?u=!0:i.isInstancedMesh||!0!==l.instancing?l.envMap!==a?u=!0:n.fog&&l.fog!==r?u=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===Tt.numPlanes&&l.numIntersection===Tt.numIntersection?l.vertexAlphas!==c&&(u=!0):u=!0:u=!0:(u=!0,l.__version=n.version);let p=l.currentProgram;!0===u&&(p=d(n,e,i));let f=!1,m=!1,g=!1;const v=p.getUniforms(),y=l.uniforms;if(pt.useProgram(p.program)&&(f=!0,m=!0,g=!0),n.id!==j&&(j=n.id,m=!0),f||X!==t){if(v.setValue(ht,"projectionMatrix",t.projectionMatrix),dt.logarithmicDepthBuffer&&v.setValue(ht,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),X!==t&&(X=t,m=!0,g=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=v.map.cameraPosition;void 0!==e&&e.setValue(ht,ct.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&v.setValue(ht,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&v.setValue(ht,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){v.setOptional(ht,i,"bindMatrix"),v.setOptional(ht,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(dt.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=no.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const r=new ga(i,n,n,Ui,Ni);t.boneMatrices=i,t.boneTexture=r,t.boneTextureSize=n}v.setValue(ht,"boneTexture",t.boneTexture,gt),v.setValue(ht,"boneTextureSize",t.boneTextureSize)}else v.setOptional(ht,t,"boneMatrices")}}return(m||l.receiveShadow!==i.receiveShadow)&&(l.receiveShadow=i.receiveShadow,v.setValue(ht,"receiveShadow",i.receiveShadow)),m&&(v.setValue(ht,"toneMappingExposure",U.toneMappingExposure),l.needsLights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(y,g),r&&n.fog&&Et.refreshFogUniforms(y,r),Et.refreshMaterialUniforms(y,n,Q,J),St.upload(ht,l.uniformsList,y,gt)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(St.upload(ht,l.uniformsList,y,gt),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&v.setValue(ht,"center",i.center),v.setValue(ht,"modelViewMatrix",i.modelViewMatrix),v.setValue(ht,"normalMatrix",i.normalMatrix),v.setValue(ht,"modelMatrix",i.matrixWorld),p}const v=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),y=void 0!==t.context?t.context:null,x=void 0!==t.alpha&&t.alpha,b=void 0===t.depth||t.depth,E=void 0===t.stencil||t.stencil,M=void 0!==t.antialias&&t.antialias,S=void 0===t.premultipliedAlpha||t.premultipliedAlpha,R=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,L=void 0!==t.powerPreference?t.powerPreference:"default",O=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let F=null,k=null;const B=[],H=[];this.domElement=v,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Br,this.physicallyCorrectLights=!1,this.toneMapping=oi,this.toneMappingExposure=1;const U=this;let z=!1,G=0,V=0,W=null,j=-1,X=null;const q=new lo,Y=new lo;let K=null,Z=v.width,J=v.height,Q=1,$=null,tt=null;const et=new lo(0,0,Z,J),nt=new lo(0,0,Z,J);let it=!1;const rt=new xa;let ot=!1,st=!1;const at=new Wo,ct=new fo,lt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ht=y;try{const t={alpha:x,depth:b,stencil:E,antialias:M,premultipliedAlpha:S,preserveDrawingBuffer:R,powerPreference:L,failIfMajorPerformanceCaveat:O};if(v.addEventListener("webglcontextlost",r,!1),v.addEventListener("webglcontextrestored",o,!1),null===ht){const e=["webgl2","webgl","experimental-webgl"];if(!0===U.isWebGL1Renderer&&e.shift(),null===(ht=n(e,t)))throw n(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ht.getShaderPrecisionFormat&&(ht.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}let ut,dt,pt,ft,mt,gt,vt,yt,xt,_t,bt,Et,wt,Mt,Tt,At,Rt,Lt,Ct,Pt,Nt,Dt;i();const It=new Zt(U,ht);this.xr=It,this.getContext=function(){return ht},this.getContextAttributes=function(){return ht.getContextAttributes()},this.forceContextLoss=function(){const t=ut.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=ut.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return Q},this.setPixelRatio=function(t){void 0!==t&&(Q=t,this.setSize(Z,J,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new io),t.set(Z,J)},this.setSize=function(t,e,n){It.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(Z=t,J=e,v.width=Math.floor(t*Q),v.height=Math.floor(e*Q),!1!==n&&(v.style.width=t+"px",v.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new io),t.set(Z*Q,J*Q).floor()},this.setDrawingBufferSize=function(t,e,n){Z=t,J=e,Q=n,v.width=Math.floor(t*n),v.height=Math.floor(e*n),this.setViewport(0,0,t,e)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new lo),t.copy(q)},this.getViewport=function(t){return t.copy(et)},this.setViewport=function(t,e,n,i){t.isVector4?et.set(t.x,t.y,t.z,t.w):et.set(t,e,n,i),pt.viewport(q.copy(et).multiplyScalar(Q).floor())},this.getScissor=function(t){return t.copy(nt)},this.setScissor=function(t,e,n,i){t.isVector4?nt.set(t.x,t.y,t.z,t.w):nt.set(t,e,n,i),pt.scissor(Y.copy(nt).multiplyScalar(Q).floor())},this.getScissorTest=function(){return it},this.setScissorTest=function(t){pt.setScissorTest(it=t)},this.setOpaqueSort=function(t){$=t},this.setTransparentSort=function(t){tt=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new Is),t.copy(Rt.getClearColor())},this.setClearColor=function(){Rt.setClearColor.apply(Rt,arguments)},this.getClearAlpha=function(){return Rt.getClearAlpha()},this.setClearAlpha=function(){Rt.setClearAlpha.apply(Rt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=ht.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=ht.DEPTH_BUFFER_BIT),(void 0===n||n)&&(i|=ht.STENCIL_BUFFER_BIT),ht.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){v.removeEventListener("webglcontextlost",r,!1),v.removeEventListener("webglcontextrestored",o,!1),wt.dispose(),Mt.dispose(),mt.dispose(),vt.dispose(),_t.dispose(),Dt.dispose(),It.dispose(),It.removeEventListener("sessionstart",a),It.removeEventListener("sessionend",c),Ft.stop()},this.renderBufferImmediate=function(t,e){Dt.initAttributes();const n=mt.get(t);t.hasPositions&&!n.position&&(n.position=ht.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=ht.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=ht.createBuffer()),t.hasColors&&!n.color&&(n.color=ht.createBuffer());const i=e.getAttributes();t.hasPositions&&(ht.bindBuffer(ht.ARRAY_BUFFER,n.position),ht.bufferData(ht.ARRAY_BUFFER,t.positionArray,ht.DYNAMIC_DRAW),Dt.enableAttribute(i.position),ht.vertexAttribPointer(i.position,3,ht.FLOAT,!1,0,0)),t.hasNormals&&(ht.bindBuffer(ht.ARRAY_BUFFER,n.normal),ht.bufferData(ht.ARRAY_BUFFER,t.normalArray,ht.DYNAMIC_DRAW),Dt.enableAttribute(i.normal),ht.vertexAttribPointer(i.normal,3,ht.FLOAT,!1,0,0)),t.hasUvs&&(ht.bindBuffer(ht.ARRAY_BUFFER,n.uv),ht.bufferData(ht.ARRAY_BUFFER,t.uvArray,ht.DYNAMIC_DRAW),Dt.enableAttribute(i.uv),ht.vertexAttribPointer(i.uv,2,ht.FLOAT,!1,0,0)),t.hasColors&&(ht.bindBuffer(ht.ARRAY_BUFFER,n.color),ht.bufferData(ht.ARRAY_BUFFER,t.colorArray,ht.DYNAMIC_DRAW),Dt.enableAttribute(i.color),ht.vertexAttribPointer(i.color,3,ht.FLOAT,!1,0,0)),Dt.disableUnusedAttributes(),ht.drawArrays(ht.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,n,i,r,o,s){null===n&&(n=lt);const a=o.isMesh&&o.matrixWorld.determinant()<0,c=m(t,n,r,o);pt.setMaterial(r,a);let l=i.index;const h=i.attributes.position;if(null===l){if(void 0===h||0===h.count)return}else if(0===l.count)return;let u=1;!0===r.wireframe&&(l=xt.getWireframeAttribute(i),u=2),(r.morphTargets||r.morphNormals)&&Lt.update(o,i,r,c),Dt.setup(o,r,c,i,l);let d,p=Ct;null!==l&&(d=yt.get(l),(p=Pt).setIndex(d));const f=null!==l?l.count:h.count,g=i.drawRange.start*u,v=i.drawRange.count*u,y=null!==s?s.start*u:0,x=null!==s?s.count*u:1/0,_=Math.max(g,y),b=Math.min(f,g+v,y+x)-1,E=Math.max(0,b-_+1);if(0!==E){if(o.isMesh)!0===r.wireframe?(pt.setLineWidth(r.wireframeLinewidth*e()),p.setMode(ht.LINES)):p.setMode(ht.TRIANGLES);else if(o.isLine){let t=r.linewidth;void 0===t&&(t=1),pt.setLineWidth(t*e()),o.isLineSegments?p.setMode(ht.LINES):o.isLineLoop?p.setMode(ht.LINE_LOOP):p.setMode(ht.LINE_STRIP)}else o.isPoints?p.setMode(ht.POINTS):o.isSprite&&p.setMode(ht.TRIANGLES);if(o.isInstancedMesh)p.renderInstances(_,E,o.count);else if(i.isInstancedBufferGeometry){const t=Math.min(i.instanceCount,i._maxInstanceCount);p.renderInstances(_,E,t)}else p.render(_,E)}},this.compile=function(t,e){(k=Mt.get(t)).init(),t.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(k.pushLight(t),t.castShadow&&k.pushShadow(t))}),k.setupLights(),t.traverse(function(e){const n=e.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++){d(n[i],t,e)}else d(n,t,e)})};let Ot=null;const Ft=new C;Ft.setAnimationLoop(function(t){Ot&&Ot(t)}),"undefined"!=typeof window&&Ft.setContext(window),this.setAnimationLoop=function(t){Ot=t,It.setAnimationLoop(t),null===t?Ft.stop():Ft.start()},It.addEventListener("sessionstart",a),It.addEventListener("sessionend",c),this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===z)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===It.enabled&&!0===It.isPresenting&&(e=It.getCamera(e)),!0===t.isScene&&t.onBeforeRender(U,t,e,n||W),(k=Mt.get(t,H.length)).init(),H.push(k),at.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),rt.setFromProjectionMatrix(at),st=this.localClippingEnabled,ot=Tt.init(this.clippingPlanes,st,e),(F=wt.get(t,B.length)).init(),B.push(F),l(t,e,0,U.sortObjects),F.finish(),!0===U.sortObjects&&F.sort($,tt),!0===ot&&Tt.beginShadows();const r=k.state.shadowsArray;At.render(r,t,e),k.setupLights(),k.setupLightsView(e),!0===ot&&Tt.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),Rt.render(F,t,e,i);const o=F.opaque,s=F.transparent;o.length>0&&h(o,t,e),s.length>0&&h(s,t,e),null!==W&&(gt.updateRenderTargetMipmap(W),gt.updateMultisampleRenderTarget(W)),!0===t.isScene&&t.onAfterRender(U,t,e),pt.buffers.depth.setTest(!0),pt.buffers.depth.setMask(!0),pt.buffers.color.setMask(!0),pt.setPolygonOffset(!1),Dt.resetDefaultState(),j=-1,X=null,H.pop(),k=H.length>0?H[H.length-1]:null,B.pop(),F=B.length>0?B[B.length-1]:null},this.getActiveCubeFace=function(){return G},this.getActiveMipmapLevel=function(){return V},this.getRenderTarget=function(){return W},this.setRenderTarget=function(t,e=0,n=0){W=t,G=e,V=n,t&&void 0===mt.get(t).__webglFramebuffer&&gt.setupRenderTarget(t);let i=null,r=!1,o=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(o=!0);const s=mt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=s[e],r=!0):i=t.isWebGLMultisampleRenderTarget?mt.get(t).__webglMultisampledFramebuffer:s,q.copy(t.viewport),Y.copy(t.scissor),K=t.scissorTest}else q.copy(et).multiplyScalar(Q).floor(),Y.copy(nt).multiplyScalar(Q).floor(),K=it;if(pt.bindFramebuffer(ht.FRAMEBUFFER,i),pt.viewport(q),pt.scissor(Y),pt.setScissorTest(K),r){const i=mt.get(t.texture);ht.framebufferTexture2D(ht.FRAMEBUFFER,ht.COLOR_ATTACHMENT0,ht.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(o){const i=mt.get(t.texture),r=e||0;ht.framebufferTextureLayer(ht.FRAMEBUFFER,ht.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}},this.readRenderTargetPixels=function(t,e,n,i,r,o,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=mt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(a=a[s]),a){pt.bindFramebuffer(ht.FRAMEBUFFER,a);try{const s=t.texture,a=s.format,c=s.type;if(a!==Ui&&Nt.convert(a)!==ht.getParameter(ht.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=c===Di&&(ut.has("EXT_color_buffer_half_float")||dt.isWebGL2&&ut.has("EXT_color_buffer_float"));if(!(c===Si||Nt.convert(c)===ht.getParameter(ht.IMPLEMENTATION_COLOR_READ_TYPE)||c===Ni&&(dt.isWebGL2||ut.has("OES_texture_float")||ut.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");ht.checkFramebufferStatus(ht.FRAMEBUFFER)===ht.FRAMEBUFFER_COMPLETE?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&ht.readPixels(e,n,i,r,Nt.convert(a),Nt.convert(c),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==W?mt.get(W).__webglFramebuffer:null;pt.bindFramebuffer(ht.FRAMEBUFFER,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),o=Math.floor(e.image.height*i),s=Nt.convert(e.format);gt.setTexture2D(e,0),ht.copyTexImage2D(ht.TEXTURE_2D,n,s,t.x,t.y,r,o,0),pt.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,o=e.image.height,s=Nt.convert(n.format),a=Nt.convert(n.type);gt.setTexture2D(n,0),ht.pixelStorei(ht.UNPACK_FLIP_Y_WEBGL,n.flipY),ht.pixelStorei(ht.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),ht.pixelStorei(ht.UNPACK_ALIGNMENT,n.unpackAlignment),e.isDataTexture?ht.texSubImage2D(ht.TEXTURE_2D,i,t.x,t.y,r,o,s,a,e.image.data):e.isCompressedTexture?ht.compressedTexSubImage2D(ht.TEXTURE_2D,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):ht.texSubImage2D(ht.TEXTURE_2D,i,t.x,t.y,s,a,e.image),0===i&&n.generateMipmaps&&ht.generateMipmap(ht.TEXTURE_2D),pt.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(U.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:o,height:s,data:a}=n.image,c=Nt.convert(i.format),l=Nt.convert(i.type);let h;if(i.isDataTexture3D)gt.setTexture3D(i,0),h=ht.TEXTURE_3D;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");gt.setTexture2DArray(i,0),h=ht.TEXTURE_2D_ARRAY}ht.pixelStorei(ht.UNPACK_FLIP_Y_WEBGL,i.flipY),ht.pixelStorei(ht.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),ht.pixelStorei(ht.UNPACK_ALIGNMENT,i.unpackAlignment);const u=ht.getParameter(ht.UNPACK_ROW_LENGTH),d=ht.getParameter(ht.UNPACK_IMAGE_HEIGHT),p=ht.getParameter(ht.UNPACK_SKIP_PIXELS),f=ht.getParameter(ht.UNPACK_SKIP_ROWS),m=ht.getParameter(ht.UNPACK_SKIP_IMAGES);ht.pixelStorei(ht.UNPACK_ROW_LENGTH,o),ht.pixelStorei(ht.UNPACK_IMAGE_HEIGHT,s),ht.pixelStorei(ht.UNPACK_SKIP_PIXELS,t.min.x),ht.pixelStorei(ht.UNPACK_SKIP_ROWS,t.min.y),ht.pixelStorei(ht.UNPACK_SKIP_IMAGES,t.min.z),ht.texSubImage3D(h,r,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,c,l,a),ht.pixelStorei(ht.UNPACK_ROW_LENGTH,u),ht.pixelStorei(ht.UNPACK_IMAGE_HEIGHT,d),ht.pixelStorei(ht.UNPACK_SKIP_PIXELS,p),ht.pixelStorei(ht.UNPACK_SKIP_ROWS,f),ht.pixelStorei(ht.UNPACK_SKIP_IMAGES,m),0===r&&i.generateMipmaps&&ht.generateMipmap(h),pt.unbindTexture()},this.initTexture=function(t){gt.setTexture2D(t,0),pt.unbindTexture()},this.resetState=function(){G=0,V=0,W=null,pt.reset(),Dt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function $t(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Jr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=no.generateUUID()}function te(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}function ee(t,e,n,i,r,o){ic.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(rc.x=o*ic.x-r*ic.y,rc.y=r*ic.x+o*ic.y):rc.copy(ic),t.copy(e),t.x+=rc.x,t.y+=rc.y,t.applyMatrix4(oc)}function ne(t,e){w.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Wo,this.bindMatrixInverse=new Wo}function ie(){r.call(this),this.type="Bone"}function re(t,e,n){w.call(this,t,e),this.instanceMatrix=new l(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}function oe(t=new E,e=new Rc){r.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}function se(t,e){oe.call(this,t,e),this.type="LineSegments"}function ae(t=new E,e=new kc){r.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function ce(t,e,n,i,r,o,s){const a=Hc.distanceSqToPoint(t);if(a<n){const n=new fo;Hc.closestPointToPoint(t,n),n.applyMatrix4(i);const c=r.ray.origin.distanceTo(n);if(c<r.near||c>r.far)return;o.push({distance:c,distanceToRay:Math.sqrt(a),point:n,index:e,face:null,object:s})}}function le(t,e,n,i,r){let o,s;if(r===function(t,e,n,i){let r=0;for(let o=e,s=n-i;o<n;o+=i)r+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return r}(t,e,n,i)>0)for(o=e;o<n;o+=i)s=we(o,t[o],t[o+1],s);else for(o=n-i;o>=e;o-=i)s=we(o,t[o],t[o+1],s);return s&&ve(s,s.next)&&(Me(s),s=s.next),s}function he(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!ve(i,i.next)&&0!==ge(i.prev,i,i.next))i=i.next;else{if(Me(i),(i=e=i.prev)===i.next)break;n=!0}}while(n||i!==e);return e}function ue(t,e,n,i,r,o,s){if(!t)return;!s&&o&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=fe(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,o,s,a,c,l=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,i=n,a=0,e=0;e<l&&(a++,i=i.nextZ);e++);for(c=l;a>0||c>0&&i;)0!==a&&(0===c||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),o?o.nextZ=r:t=r,r.prevZ=o,o=r;n=i}o.nextZ=null,l*=2}while(s>1)}(r)}(t,i,r,o);let a,c,l=t;for(;t.prev!==t.next;)if(a=t.prev,c=t.next,o?function(t,e,n,i){const r=t.prev,o=t,s=t.next;if(ge(r,o,s)>=0)return!1;const a=r.x<o.x?r.x<s.x?r.x:s.x:o.x<s.x?o.x:s.x,c=r.y<o.y?r.y<s.y?r.y:s.y:o.y<s.y?o.y:s.y,l=r.x>o.x?r.x>s.x?r.x:s.x:o.x>s.x?o.x:s.x,h=r.y>o.y?r.y>s.y?r.y:s.y:o.y>s.y?o.y:s.y,u=fe(a,c,e,n,i),d=fe(l,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&me(r.x,r.y,o.x,o.y,s.x,s.y,p.x,p.y)&&ge(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&me(r.x,r.y,o.x,o.y,s.x,s.y,f.x,f.y)&&ge(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&me(r.x,r.y,o.x,o.y,s.x,s.y,p.x,p.y)&&ge(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&me(r.x,r.y,o.x,o.y,s.x,s.y,f.x,f.y)&&ge(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}(t,i,r,o):function(t){const e=t.prev,n=t,i=t.next;if(ge(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(me(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&ge(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}(t))e.push(a.i/n),e.push(t.i/n),e.push(c.i/n),Me(t),t=c.next,l=c.next;else if((t=c)===l){s?1===s?ue(t=function(t,e,n){let i=t;do{const r=i.prev,o=i.next.next;!ve(r,o)&&ye(r,i,i.next,o)&&be(r,o)&&be(o,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(o.i/n),Me(i),Me(i.next),i=t=o),i=i.next}while(i!==t);return he(i)}(he(t),e,n),e,n,i,r,o,2):2===s&&function(t,e,n,i,r,o){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&function(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&ye(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(be(t,e)&&be(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&r<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(ge(t.prev,t,e.prev)||ge(t,e.prev,e))||ve(t,e)&&ge(t.prev,t,t.next)>0&&ge(e.prev,e,e.next)>0)}(s,t)){let a=Ee(s,t);return s=he(s,s.next),a=he(a,a.next),ue(s,e,n,i,r,o),void ue(a,e,n,i,r,o)}t=t.next}s=s.next}while(s!==t)}(t,e,n,i,r,o):ue(he(t),e,n,i,r,o,1);break}}function de(t,e,n,i){const r=[];let o,s,a,c,l;for(o=0,s=e.length;o<s;o++)(l=le(t,a=e[o]*i,c=o<s-1?e[o+1]*i:t.length,i,!1))===l.next&&(l.steiner=!0),r.push(function(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}(l));for(r.sort(pe),o=0;o<r.length;o++)!function(t,e){if(e=function(t,e){let n=e;const i=t.x,r=t.y;let o,s=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>s){if(s=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(i===s)return o;const a=o,c=o.x,l=o.y;let h,u=1/0;n=o;do{i>=n.x&&n.x>=c&&i!==n.x&&me(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),be(n,t)&&(h<u||h===u&&(n.x>o.x||n.x===o.x&&function(t,e){return ge(t.prev,t,e.prev)<0&&ge(e.next,t,t.next)<0}(o,n)))&&(o=n,u=h)),n=n.next}while(n!==a);return o}(t,e)){const n=Ee(e,t);he(e,e.next),he(n,n.next)}}(r[o],n),n=he(n,n.next);return n}function pe(t,e){return t.x-e.x}function fe(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function me(t,e,n,i,r,o,s,a){return(r-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(i-a)-(n-s)*(e-a)>=0&&(n-s)*(o-a)-(r-s)*(i-a)>=0}function ge(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function ve(t,e){return t.x===e.x&&t.y===e.y}function ye(t,e,n,i){const r=_e(ge(t,e,n)),o=_e(ge(t,e,i)),s=_e(ge(n,i,t)),a=_e(ge(n,i,e));return r!==o&&s!==a||(!(0!==r||!xe(t,n,e))||(!(0!==o||!xe(t,i,e))||(!(0!==s||!xe(n,t,i))||!(0!==a||!xe(n,e,i)))))}function xe(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function _e(t){return t>0?1:t<0?-1:0}function be(t,e){return ge(t.prev,t,t.next)<0?ge(t,e,t.next)>=0&&ge(t,t.prev,e)>=0:ge(t,e,t.prev)<0||ge(t,t.next,e)<0}function Ee(t,e){const n=new Te(t.i,t.x,t.y),i=new Te(e.i,e.x,e.y),r=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,o.next=i,i.prev=o,i}function we(t,e,n,i){const r=new Te(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Me(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Te(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Se(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Ae(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}function Re(t,e,n){E.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],o=[],s=[],a=new fo,c=new fo,l=new fo,h=new fo,u=new fo;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=e+1;for(let i=0;i<=n;i++){const d=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,d,c),r.push(c.x,c.y,c.z),i-1e-5>=0?(t(i-1e-5,d,l),h.subVectors(c,l)):(t(i+1e-5,d,l),h.subVectors(l,c)),d-1e-5>=0?(t(i,d-1e-5,l),u.subVectors(c,l)):(t(i,d+1e-5,l),u.subVectors(l,c)),a.crossVectors(h,u).normalize(),o.push(a.x,a.y,a.z),s.push(i,d)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*d+n,r=t*d+n+1,o=(t+1)*d+n+1,s=(t+1)*d+n;i.push(e,r,s),i.push(r,o,s)}this.setIndex(i),this.setAttribute("position",new y(r,3)),this.setAttribute("normal",new y(o,3)),this.setAttribute("uv",new y(s,2))}function Le(t){o.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Is(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new io(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}function Ce(t){Le.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new io(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=no.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}function Pe(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function Ne(t,e,n,i){Pe.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function De(t,e,n,i){Pe.call(this,t,e,n,i)}function Ie(t,e,n,i){Pe.call(this,t,e,n,i)}function Oe(t,e,n,i){Pe.call(this,t,e,n,i)}function Fe(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Nl;case"vector":case"vector2":case"vector3":case"vector4":return Ol;case"color":return Pl;case"quaternion":return Dl;case"bool":case"boolean":return Cl;case"string":return Il}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Rl.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}function ke(t,e,n){const i=this;let r=!1,o=0,s=0,a=void 0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){s++,!1===r&&void 0!==i.onStart&&i.onStart(t,o,s),r=!0},this.itemEnd=function(t){o++,void 0!==i.onProgress&&i.onProgress(t,o,s),o===s&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}function Be(t){this.manager=void 0!==t?t:Bl,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}function He(t){Be.call(this,t)}function Ue(t){Be.call(this,t)}function ze(t){Be.call(this,t)}function Ge(t){Be.call(this,t)}function Ve(){this.type="Curve",this.arcLengthDivisions=200}function We(){function t(t,o,s,a){e=t,n=s,i=-3*t+3*o-2*s-a,r=2*t-2*o+s+a}let e=0,n=0,i=0,r=0;return{initCatmullRom:function(e,n,i,r,o){t(n,i,o*(i-e),o*(r-n))},initNonuniformCatmullRom:function(e,n,i,r,o,s,a){let c=(n-e)/o-(i-e)/(o+s)+(i-n)/s,l=(i-n)/s-(r-n)/(s+a)+(r-i)/a;t(n,i,c*=s,l*=s)},calc:function(t){const o=t*t;return e+n*t+i*o+r*(o*t)}}}function je(t,e,n,i,r){const o=.5*(i-e),s=.5*(r-n),a=t*t;return(2*n-2*i+o+s)*(t*a)+(-3*n+3*i-2*o-s)*a+o*t+n}function Xe(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function qe(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}function Ye(){E.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Ke(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),l.call(this,t,e,n),this.meshPerAttribute=i||1}function Ze(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Be.call(this,t),this.options={premultiplyAlpha:"none"}}function Je(t,e,n){const i=Array.from(t),r=e/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[];let a=0,c=0;for(let t=0;t<i.length;t++){const e=i[t];if("\n"===e)a=0,c-=o;else{const t=function(t,e,n,i,r){const o=r.glyphs[t]||r.glyphs["?"];if(!o)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");const s=new Ih;let a,c,l,h,u,d,p,f;if(o.o){const t=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let r=0,o=t.length;r<o;){switch(t[r++]){case"m":a=t[r++]*e+n,c=t[r++]*e+i,s.moveTo(a,c);break;case"l":a=t[r++]*e+n,c=t[r++]*e+i,s.lineTo(a,c);break;case"q":l=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,d=t[r++]*e+i,s.quadraticCurveTo(u,d,l,h);break;case"b":l=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,d=t[r++]*e+i,p=t[r++]*e+n,f=t[r++]*e+i,s.bezierCurveTo(u,d,p,f,l,h)}}}return{offsetX:o.ha*e,path:s}}(e,r,a,c,n);a+=t.offsetX,s.push(t.path)}}return s}function Qe(){return("undefined"==typeof performance?Date:performance).now()}function $e(t,e,n){const i=n||tn.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function tn(t,e,n){this.path=e,this.parsedPath=n||tn.parseTrackName(e),this.node=tn.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function en(t,e,n){$t.call(this,t,e),this.meshPerAttribute=n||1}function nn(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}function rn(t,e,n=0,i=1/0){this.ray=new Vo(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new es,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function on(t,e){return t.distance-e.distance}function sn(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)sn(i[t],e,n,!0)}}function an(t){r.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}function cn(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,cn(t.children[n]));return e}function ln(t,e,n,i,r,o,s){zu.set(r,o,s).unproject(i);const a=e[t];if(void 0!==a){const t=n.getAttribute("position");for(let e=0,n=a.length;e<n;e++)t.setXYZ(a[e],zu.x,zu.y,zu.z)}}function hn(t){const e=Math.max(t.r,t.g,t.b),n=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);t.multiplyScalar(Math.pow(2,-n));return(n+128)/255}function un(t){const e=new ho(3*rd,3*rd,t);return e.texture.mapping=mi,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function dn(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function pn(){const t=new io(1,1);return new _l({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:ad[Br]},outputEncoding:{value:ad[Br]}},vertexShader:mn(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${gn()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:Sn,depthTest:!1,depthWrite:!1})}function fn(){return new _l({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ad[Br]},outputEncoding:{value:ad[Br]}},vertexShader:mn(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${gn()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:Sn,depthTest:!1,depthWrite:!1})}function mn(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function gn(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}const vn=0,yn=1,xn=2,_n=1,bn=2,En=3,wn=0,Mn=1,Tn=2,Sn=0,An=1,Rn=2,Ln=3,Cn=4,Pn=5,Nn=100,Dn=101,In=102,On=103,Fn=104,kn=200,Bn=201,Hn=202,Un=203,zn=204,Gn=205,Vn=206,Wn=207,jn=208,Xn=209,qn=210,Yn=0,Kn=1,Zn=2,Jn=3,Qn=4,$n=5,ti=6,ei=7,ni=0,ii=1,ri=2,oi=0,si=1,ai=2,ci=3,li=4,hi=5,ui=301,di=302,pi=303,fi=304,mi=306,gi=307,vi=1e3,yi=1001,xi=1002,_i=1003,bi=1004,Ei=1005,wi=1006,Mi=1007,Ti=1008,Si=1009,Ai=1010,Ri=1011,Li=1012,Ci=1013,Pi=1014,Ni=1015,Di=1016,Ii=1017,Oi=1018,Fi=1019,ki=1020,Bi=1021,Hi=1022,Ui=1023,zi=1024,Gi=1025,Vi=Ui,Wi=1026,ji=1027,Xi=1028,qi=1029,Yi=1030,Ki=1031,Zi=1032,Ji=1033,Qi=33776,$i=33777,tr=33778,er=33779,nr=35840,ir=35841,rr=35842,or=35843,sr=36196,ar=37492,cr=37496,lr=37808,hr=37809,ur=37810,dr=37811,pr=37812,fr=37813,mr=37814,gr=37815,vr=37816,yr=37817,xr=37818,_r=37819,br=37820,Er=37821,wr=36492,Mr=37840,Tr=37841,Sr=37842,Ar=37843,Rr=37844,Lr=37845,Cr=37846,Pr=37847,Nr=37848,Dr=37849,Ir=37850,Or=37851,Fr=37852,kr=37853,Br=3e3,Hr=3001,Ur=3007,zr=3002,Gr=3003,Vr=3004,Wr=3005,jr=3006,Xr=3201,qr=0,Yr=1,Kr=7680,Zr=519,Jr=35044,Qr=35048,$r="300 es";Object.assign(e.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}});const to=[];for(let t=0;t<256;t++)to[t]=(t<16?"0":"")+t.toString(16);let eo=1234567;const no={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(to[255&t]+to[t>>8&255]+to[t>>16&255]+to[t>>24&255]+"-"+to[255&e]+to[e>>8&255]+"-"+to[e>>16&15|64]+to[e>>24&255]+"-"+to[63&n|128]+to[n>>8&255]+"-"+to[n>>16&255]+to[n>>24&255]+to[255&i]+to[i>>8&255]+to[i>>16&255]+to[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return no.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(no.euclideanModulo(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(eo=t%2147483647),((eo=16807*eo%2147483647)-1)/2147483646},degToRad:function(t){return t*no.DEG2RAD},radToDeg:function(t){return t*no.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const o=Math.cos,s=Math.sin,a=o(n/2),c=s(n/2),l=o((e+i)/2),h=s((e+i)/2),u=o((e-i)/2),d=s((e-i)/2),p=o((i-e)/2),f=s((i-e)/2);switch(r){case"XYX":t.set(a*h,c*u,c*d,a*l);break;case"YZY":t.set(c*d,a*h,c*u,a*l);break;case"ZXZ":t.set(c*u,c*d,a*h,a*l);break;case"XZX":t.set(a*h,c*f,c*p,a*l);break;case"YXY":t.set(c*p,a*h,c*f,a*l);break;case"ZYZ":t.set(c*f,c*p,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class io{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}io.prototype.isVector2=!0;class ro{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,o,s,a,c){const l=this.elements;return l[0]=t,l[1]=i,l[2]=s,l[3]=e,l[4]=r,l[5]=a,l[6]=n,l[7]=o,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],s=n[3],a=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],b=i[5],E=i[8];return r[0]=o*f+s*v+a*_,r[3]=o*m+s*y+a*b,r[6]=o*g+s*x+a*E,r[1]=c*f+l*v+h*_,r[4]=c*m+l*y+h*b,r[7]=c*g+l*x+h*E,r[2]=u*f+d*v+p*_,r[5]=u*m+d*y+p*b,r[8]=u*g+d*x+p*E,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],s=t[5],a=t[6],c=t[7],l=t[8];return e*o*l-e*s*c-n*r*l+n*s*a+i*r*c-i*o*a}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],s=t[5],a=t[6],c=t[7],l=t[8],h=l*o-s*c,u=s*a-l*r,d=c*r-o*a,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*c-l*n)*f,t[2]=(s*n-i*o)*f,t[3]=u*f,t[4]=(l*e-i*a)*f,t[5]=(i*r-s*e)*f,t[6]=d*f,t[7]=(n*a-c*e)*f,t[8]=(o*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,s){const a=Math.cos(r),c=Math.sin(r);return this.set(n*a,n*c,-n*(a*o+c*s)+o+t,-i*c,i*a,-i*(-c*o+a*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],o=i[3],s=i[6],a=i[1],c=i[4],l=i[7];return i[0]=e*r+n*a,i[3]=e*o+n*c,i[6]=e*s+n*l,i[1]=-n*r+e*a,i[4]=-n*o+e*c,i[7]=-n*s+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}ro.prototype.isMatrix3=!0;let oo;const so={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===oo&&(oo=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),oo.width=t.width,oo.height=t.height;const n=oo.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=oo}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}};let ao=0;class co extends e{constructor(t=co.DEFAULT_IMAGE,e=co.DEFAULT_MAPPING,n=yi,i=yi,r=wi,o=Ti,s=Ui,a=Si,c=1,l=Br){super(),Object.defineProperty(this,"id",{value:ao++}),this.uuid=no.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=a,this.offset=new io(0,0),this.repeat=new io(1,1),this.center=new io(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ro,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=no.generateUUID()),!e&&void 0===t.images[r.uuid]){let e;if(Array.isArray(r)){e=[];for(let t=0,i=r.length;t<i;t++)r[t].isDataTexture?e.push(n(r[t].image)):e.push(n(r[t]))}else e=n(r);t.images[r.uuid]={uuid:r.uuid,url:e}}i.image=r.uuid}return e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case vi:t.x=t.x-Math.floor(t.x);break;case yi:t.x=t.x<0?0:1;break;case xi:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case vi:t.y=t.y-Math.floor(t.y);break;case yi:t.y=t.y<0?0:1;break;case xi:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}co.DEFAULT_IMAGE=void 0,co.DEFAULT_MAPPING=300,co.prototype.isTexture=!0;class lo{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const o=t.elements,s=o[0],a=o[4],c=o[8],l=o[1],h=o[5],u=o[9],d=o[2],p=o[6],f=o[10];if(Math.abs(a-l)<.01&&Math.abs(c-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(a+l)<.1&&Math.abs(c+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+h+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(s+1)/2,o=(h+1)/2,m=(f+1)/2,g=(a+l)/4,v=(c+d)/4,y=(u+p)/4;return t>o&&t>m?t<.01?(n=0,i=.707106781,r=.707106781):(i=g/(n=Math.sqrt(t)),r=v/n):o>m?o<.01?(n=.707106781,i=0,r=.707106781):(n=g/(i=Math.sqrt(o)),r=y/i):m<.01?(n=.707106781,i=.707106781,r=0):(n=v/(r=Math.sqrt(m)),i=y/r),this.set(n,i,r,e),this}let m=Math.sqrt((p-u)*(p-u)+(c-d)*(c-d)+(l-a)*(l-a));return Math.abs(m)<.001&&(m=1),this.x=(p-u)/m,this.y=(c-d)/m,this.z=(l-a)/m,this.w=Math.acos((s+h+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}lo.prototype.isVector4=!0;class ho extends e{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new lo(0,0,t,e),this.scissorTest=!1,this.viewport=new lo(0,0,t,e),n=n||{},this.texture=new co(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:wi,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}ho.prototype.isWebGLRenderTarget=!0;class uo extends ho{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}uo.prototype.isWebGLMultisampleRenderTarget=!0;class po{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,r,o,s){let a=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[o+0],d=r[o+1],p=r[o+2],f=r[o+3];if(0===s)return t[e+0]=a,t[e+1]=c,t[e+2]=l,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||a!==u||c!==d||l!==p){let t=1-s;const e=a*u+c*d+l*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),o=Math.atan2(r,e*n);t=Math.sin(t*o)/r,s=Math.sin(s*o)/r}const r=s*n;if(a=a*t+u*r,c=c*t+d*r,l=l*t+p*r,h=h*t+f*r,t===1-s){const t=1/Math.sqrt(a*a+c*c+l*l+h*h);a*=t,c*=t,l*=t,h*=t}}t[e]=a,t[e+1]=c,t[e+2]=l,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,o){const s=n[i],a=n[i+1],c=n[i+2],l=n[i+3],h=r[o],u=r[o+1],d=r[o+2],p=r[o+3];return t[e]=s*p+l*h+a*d-c*u,t[e+1]=a*p+l*u+c*h-s*d,t[e+2]=c*p+l*d+s*u-a*h,t[e+3]=l*p-s*h-a*u-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,o=t._order,s=Math.cos,a=Math.sin,c=s(n/2),l=s(i/2),h=s(r/2),u=a(n/2),d=a(i/2),p=a(r/2);switch(o){case"XYZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"YXZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"ZXY":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"ZYX":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"YZX":this._x=u*l*h+c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h-u*d*p;break;case"XZY":this._x=u*l*h-c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],s=e[5],a=e[9],c=e[2],l=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-a)*t,this._y=(r-c)*t,this._z=(o-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(l-a)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(r+c)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-c)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(o-i)/t,this._x=(r+c)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(no.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,s=e._x,a=e._y,c=e._z,l=e._w;return this._x=n*l+o*s+i*c-r*a,this._y=i*l+o*a+r*s-n*c,this._z=r*l+o*c+n*a-i*s,this._w=o*l-n*s-i*a-r*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let s=o*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const a=1-s*s;if(a<=Number.EPSILON){const t=1-e;return this._w=t*o+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,s),h=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=o*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}po.prototype.isQuaternion=!0;class fo{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(go.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(go.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,s=t.z,a=t.w,c=a*e+o*i-s*n,l=a*n+s*e-r*i,h=a*i+r*n-o*e,u=-r*e-o*n-s*i;return this.x=c*a+u*-r+l*-s-h*-o,this.y=l*a+u*-o+h*-r-c*-s,this.z=h*a+u*-s+c*-o-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,s=e.y,a=e.z;return this.x=i*a-r*s,this.y=r*o-n*a,this.z=n*s-i*o,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return mo.copy(this).projectOnVector(t),this.sub(mo)}reflect(t){return this.sub(mo.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(no.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}fo.prototype.isVector3=!0;const mo=new fo,go=new po;class vo{constructor(t=new fo(1/0,1/0,1/0),e=new fo(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0;for(let a=0,c=t.length;a<c;a+=3){const c=t[a],l=t[a+1],h=t[a+2];c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>o&&(o=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,o,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0;for(let a=0,c=t.count;a<c;a++){const c=t.getX(a),l=t.getY(a),h=t.getZ(a);c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>o&&(o=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,o,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=xo.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new fo),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new fo),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),_o.copy(e.boundingBox),_o.applyMatrix4(t.matrixWorld),this.union(_o));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new fo),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,xo),xo.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ao),Ro.subVectors(this.max,Ao),bo.subVectors(t.a,Ao),Eo.subVectors(t.b,Ao),wo.subVectors(t.c,Ao),Mo.subVectors(Eo,bo),To.subVectors(wo,Eo),So.subVectors(bo,wo);let e=[0,-Mo.z,Mo.y,0,-To.z,To.y,0,-So.z,So.y,Mo.z,0,-Mo.x,To.z,0,-To.x,So.z,0,-So.x,-Mo.y,Mo.x,0,-To.y,To.x,0,-So.y,So.x,0];return!!i(e,bo,Eo,wo,Ro)&&(e=[1,0,0,0,1,0,0,0,1],!!i(e,bo,Eo,wo,Ro)&&(Lo.crossVectors(Mo,To),e=[Lo.x,Lo.y,Lo.z],i(e,bo,Eo,wo,Ro)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new fo),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return xo.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(xo).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(yo[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),yo[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),yo[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),yo[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),yo[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),yo[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),yo[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),yo[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(yo),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}vo.prototype.isBox3=!0;const yo=[new fo,new fo,new fo,new fo,new fo,new fo,new fo,new fo],xo=new fo,_o=new vo,bo=new fo,Eo=new fo,wo=new fo,Mo=new fo,To=new fo,So=new fo,Ao=new fo,Ro=new fo,Lo=new fo,Co=new fo,Po=new vo,No=new fo,Do=new fo,Io=new fo;class Oo{constructor(t=new fo,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Po.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new fo),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new vo),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Io.subVectors(t,this.center);const e=Io.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Io.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return Do.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(No.copy(t.center).add(Do)),this.expandByPoint(No.copy(t.center).sub(Do)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Fo=new fo,ko=new fo,Bo=new fo,Ho=new fo,Uo=new fo,zo=new fo,Go=new fo;class Vo{constructor(t=new fo,e=new fo(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new fo),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Fo)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new fo),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Fo.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Fo.copy(this.direction).multiplyScalar(e).add(this.origin),Fo.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ko.copy(t).add(e).multiplyScalar(.5),Bo.copy(e).sub(t).normalize(),Ho.copy(this.origin).sub(ko);const r=.5*t.distanceTo(e),o=-this.direction.dot(Bo),s=Ho.dot(this.direction),a=-Ho.dot(Bo),c=Ho.lengthSq(),l=Math.abs(1-o*o);let h,u,d,p;if(l>0)if(h=o*a-s,u=o*s-a,p=r*l,h>=0)if(u>=-p)if(u<=p){const t=1/l;d=(h*=t)*(h+o*(u*=t)+2*s)+u*(o*h+u+2*a)+c}else u=r,d=-(h=Math.max(0,-(o*u+s)))*h+u*(u+2*a)+c;else u=-r,d=-(h=Math.max(0,-(o*u+s)))*h+u*(u+2*a)+c;else u<=-p?d=-(h=Math.max(0,-(-o*r+s)))*h+(u=h>0?-r:Math.min(Math.max(-r,-a),r))*(u+2*a)+c:u<=p?(h=0,d=(u=Math.min(Math.max(-r,-a),r))*(u+2*a)+c):d=-(h=Math.max(0,-(o*r+s)))*h+(u=h>0?r:Math.min(Math.max(-r,-a),r))*(u+2*a)+c;else u=o>0?-r:r,d=-(h=Math.max(0,-(o*u+s)))*h+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Bo).multiplyScalar(u).add(ko),d}intersectSphere(t,e){Fo.subVectors(t.center,this.origin);const n=Fo.dot(this.direction),i=Fo.dot(Fo)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),s=n-o,a=n+o;return s<0&&a<0?null:s<0?this.at(a,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,s,a;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),l>=0?(r=(t.min.y-u.y)*l,o=(t.max.y-u.y)*l):(r=(t.max.y-u.y)*l,o=(t.min.y-u.y)*l),n>o||r>i?null:((r>n||n!=n)&&(n=r),(o<i||i!=i)&&(i=o),h>=0?(s=(t.min.z-u.z)*h,a=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,a=(t.min.z-u.z)*h),n>a||s>i?null:((s>n||n!=n)&&(n=s),(a<i||i!=i)&&(i=a),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,Fo)}intersectTriangle(t,e,n,i,r){Uo.subVectors(e,t),zo.subVectors(n,t),Go.crossVectors(Uo,zo);let o,s=this.direction.dot(Go);if(s>0){if(i)return null;o=1}else{if(!(s<0))return null;o=-1,s=-s}Ho.subVectors(this.origin,t);const a=o*this.direction.dot(zo.crossVectors(Ho,zo));if(a<0)return null;const c=o*this.direction.dot(Uo.cross(Ho));if(c<0)return null;if(a+c>s)return null;const l=-o*Ho.dot(Go);return l<0?null:this.at(l/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Wo{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,o,s,a,c,l,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=o,g[9]=s,g[13]=a,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Wo).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/jo.setFromMatrixColumn(t,0).length(),r=1/jo.setFromMatrixColumn(t,1).length(),o=1/jo.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),s=Math.sin(n),a=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=o*l,n=o*h,i=s*l,r=s*h;e[0]=a*l,e[4]=-a*h,e[8]=c,e[1]=n+i*c,e[5]=t-r*c,e[9]=-s*a,e[2]=r-t*c,e[6]=i+n*c,e[10]=o*a}else if("YXZ"===t.order){const t=a*l,n=a*h,i=c*l,r=c*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=o*c,e[1]=o*h,e[5]=o*l,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=o*a}else if("ZXY"===t.order){const t=a*l,n=a*h,i=c*l,r=c*h;e[0]=t-r*s,e[4]=-o*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=o*l,e[9]=r-t*s,e[2]=-o*c,e[6]=s,e[10]=o*a}else if("ZYX"===t.order){const t=o*l,n=o*h,i=s*l,r=s*h;e[0]=a*l,e[4]=i*c-n,e[8]=t*c+r,e[1]=a*h,e[5]=r*c+t,e[9]=n*c-i,e[2]=-c,e[6]=s*a,e[10]=o*a}else if("YZX"===t.order){const t=o*a,n=o*c,i=s*a,r=s*c;e[0]=a*l,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=o*l,e[9]=-s*l,e[2]=-c*l,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=o*a,n=o*c,i=s*a,r=s*c;e[0]=a*l,e[4]=-h,e[8]=c*l,e[1]=t*h+r,e[5]=o*l,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*l,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(qo,t,Yo)}lookAt(t,e,n){const i=this.elements;return Jo.subVectors(t,e),0===Jo.lengthSq()&&(Jo.z=1),Jo.normalize(),Ko.crossVectors(n,Jo),0===Ko.lengthSq()&&(1===Math.abs(n.z)?Jo.x+=1e-4:Jo.z+=1e-4,Jo.normalize(),Ko.crossVectors(n,Jo)),Ko.normalize(),Zo.crossVectors(Jo,Ko),i[0]=Ko.x,i[4]=Zo.x,i[8]=Jo.x,i[1]=Ko.y,i[5]=Zo.y,i[9]=Jo.y,i[2]=Ko.z,i[6]=Zo.z,i[10]=Jo.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],s=n[4],a=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=i[0],E=i[4],w=i[8],M=i[12],T=i[1],S=i[5],A=i[9],R=i[13],L=i[2],C=i[6],P=i[10],N=i[14],D=i[3],I=i[7],O=i[11],F=i[15];return r[0]=o*b+s*T+a*L+c*D,r[4]=o*E+s*S+a*C+c*I,r[8]=o*w+s*A+a*P+c*O,r[12]=o*M+s*R+a*N+c*F,r[1]=l*b+h*T+u*L+d*D,r[5]=l*E+h*S+u*C+d*I,r[9]=l*w+h*A+u*P+d*O,r[13]=l*M+h*R+u*N+d*F,r[2]=p*b+f*T+m*L+g*D,r[6]=p*E+f*S+m*C+g*I,r[10]=p*w+f*A+m*P+g*O,r[14]=p*M+f*R+m*N+g*F,r[3]=v*b+y*T+x*L+_*D,r[7]=v*E+y*S+x*C+_*I,r[11]=v*w+y*A+x*P+_*O,r[15]=v*M+y*R+x*N+_*F,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],s=t[5],a=t[9],c=t[13],l=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*a*h-i*c*h-r*s*u+n*c*u+i*s*d-n*a*d)+t[7]*(+e*a*d-e*c*u+r*o*u-i*o*d+i*c*l-r*a*l)+t[11]*(+e*c*h-e*s*d-r*o*h+n*o*d+r*s*l-n*c*l)+t[15]*(-i*s*l-e*a*h+e*s*u+i*o*h-n*o*u+n*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],s=t[5],a=t[6],c=t[7],l=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*c-f*u*c+f*a*d-s*m*d-h*a*g+s*u*g,y=p*u*c-l*m*c-p*a*d+o*m*d+l*a*g-o*u*g,x=l*f*c-p*h*c+p*s*d-o*f*d-l*s*g+o*h*g,_=p*h*a-l*f*a-p*s*u+o*f*u+l*s*m-o*h*m,b=e*v+n*y+i*x+r*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/b;return t[0]=v*E,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*E,t[2]=(s*m*r-f*a*r+f*i*c-n*m*c-s*i*g+n*a*g)*E,t[3]=(h*a*r-s*u*r-h*i*c+n*u*c+s*i*d-n*a*d)*E,t[4]=y*E,t[5]=(l*m*r-p*u*r+p*i*d-e*m*d-l*i*g+e*u*g)*E,t[6]=(p*a*r-o*m*r-p*i*c+e*m*c+o*i*g-e*a*g)*E,t[7]=(o*u*r-l*a*r+l*i*c-e*u*c-o*i*d+e*a*d)*E,t[8]=x*E,t[9]=(p*h*r-l*f*r-p*n*d+e*f*d+l*n*g-e*h*g)*E,t[10]=(o*f*r-p*s*r+p*n*c-e*f*c-o*n*g+e*s*g)*E,t[11]=(l*s*r-o*h*r-l*n*c+e*h*c+o*n*d-e*s*d)*E,t[12]=_*E,t[13]=(l*f*i-p*h*i+p*n*u-e*f*u-l*n*m+e*h*m)*E,t[14]=(p*s*i-o*f*i-p*n*a+e*f*a+o*n*m-e*s*m)*E,t[15]=(o*h*i-l*s*i+l*n*a-e*h*a-o*n*u+e*s*u)*E,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,s=t.y,a=t.z,c=r*o,l=r*s;return this.set(c*o+n,c*s-i*a,c*a+i*s,0,c*s+i*a,l*s+n,l*a-i*o,0,c*a-i*s,l*a+i*o,r*a*a+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,s=e._z,a=e._w,c=r+r,l=o+o,h=s+s,u=r*c,d=r*l,p=r*h,f=o*l,m=o*h,g=s*h,v=a*c,y=a*l,x=a*h,_=n.x,b=n.y,E=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*b,i[5]=(1-(u+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(p+y)*E,i[9]=(m-v)*E,i[10]=(1-(u+f))*E,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=jo.set(i[0],i[1],i[2]).length();const o=jo.set(i[4],i[5],i[6]).length(),s=jo.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Xo.copy(this);const a=1/r,c=1/o,l=1/s;return Xo.elements[0]*=a,Xo.elements[1]*=a,Xo.elements[2]*=a,Xo.elements[4]*=c,Xo.elements[5]*=c,Xo.elements[6]*=c,Xo.elements[8]*=l,Xo.elements[9]*=l,Xo.elements[10]*=l,e.setFromRotationMatrix(Xo),n.x=r,n.y=o,n.z=s,this}makePerspective(t,e,n,i,r,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*r/(e-t),c=2*r/(n-i),l=(e+t)/(e-t),h=(n+i)/(n-i),u=-(o+r)/(o-r),d=-2*o*r/(o-r);return s[0]=a,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,r,o){const s=this.elements,a=1/(e-t),c=1/(n-i),l=1/(o-r),h=(e+t)*a,u=(n+i)*c,d=(o+r)*l;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Wo.prototype.isMatrix4=!0;const jo=new fo,Xo=new Wo,qo=new fo(0,0,0),Yo=new fo(1,1,1),Ko=new fo,Zo=new fo,Jo=new fo,Qo=new Wo,$o=new po;class ts{constructor(t=0,e=0,n=0,i=ts.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=no.clamp,r=t.elements,o=r[0],s=r[4],a=r[8],c=r[1],l=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,o)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,o),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,o)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Qo.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Qo,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return $o.setFromEuler(this),this.setFromQuaternion($o,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new fo(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ts.prototype.isEuler=!0,ts.DefaultOrder="XYZ",ts.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class es{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let ns=0;const is=new fo,rs=new po,os=new Wo,ss=new fo,as=new fo,cs=new fo,ls=new po,hs=new fo(1,0,0),us=new fo(0,1,0),ds=new fo(0,0,1),ps={type:"added"},fs={type:"removed"};r.DefaultUp=new fo(0,1,0),r.DefaultMatrixAutoUpdate=!0,r.prototype=Object.assign(Object.create(e.prototype),{constructor:r,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return rs.setFromAxisAngle(t,e),this.quaternion.multiply(rs),this},rotateOnWorldAxis:function(t,e){return rs.setFromAxisAngle(t,e),this.quaternion.premultiply(rs),this},rotateX:function(t){return this.rotateOnAxis(hs,t)},rotateY:function(t){return this.rotateOnAxis(us,t)},rotateZ:function(t){return this.rotateOnAxis(ds,t)},translateOnAxis:function(t,e){return is.copy(t).applyQuaternion(this.quaternion),this.position.add(is.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(hs,t)},translateY:function(t){return this.translateOnAxis(us,t)},translateZ:function(t){return this.translateOnAxis(ds,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(os.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?ss.copy(t):ss.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),as.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?os.lookAt(as,ss,this.up):os.lookAt(ss,as,this.up),this.quaternion.setFromRotationMatrix(os),i&&(os.extractRotation(i.matrixWorld),rs.setFromRotationMatrix(os),this.quaternion.premultiply(rs.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ps)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(fs)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(fs)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),os.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),os.multiply(t.parent.matrixWorld)),t.applyMatrix4(os),this.add(t),t.updateWorldMatrix(!1,!0),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new fo),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new po),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(as,t,cs),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new fo),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(as,ls,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new fo),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){function e(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}function n(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}const i=void 0===t||"string"==typeof t,r={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const o={};if(o.uuid=this.uuid,o.type=this.type,""!==this.name&&(o.name=this.name),!0===this.castShadow&&(o.castShadow=!0),!0===this.receiveShadow&&(o.receiveShadow=!0),!1===this.visible&&(o.visible=!1),!1===this.frustumCulled&&(o.frustumCulled=!1),0!==this.renderOrder&&(o.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(o.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){o.geometry=e(t.geometries,this.geometry);const n=this.geometry.parameters;if(void 0!==n&&void 0!==n.shapes){const i=n.shapes;if(Array.isArray(i))for(let n=0,r=i.length;n<r;n++){const r=i[n];e(t.shapes,r)}else e(t.shapes,i)}}if(this.isSkinnedMesh&&(o.bindMode=this.bindMode,o.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(t.skeletons,this.skeleton),o.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const n=[];for(let i=0,r=this.material.length;i<r;i++)n.push(e(t.materials,this.material[i]));o.material=n}else o.material=e(t.materials,this.material);if(this.children.length>0){o.children=[];for(let e=0;e<this.children.length;e++)o.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){o.animations=[];for(let n=0;n<this.animations.length;n++){const i=this.animations[n];o.animations.push(e(t.animations,i))}}if(i){const e=n(t.geometries),i=n(t.materials),o=n(t.textures),s=n(t.images),a=n(t.shapes),c=n(t.skeletons),l=n(t.animations);e.length>0&&(r.geometries=e),i.length>0&&(r.materials=i),o.length>0&&(r.textures=o),s.length>0&&(r.images=s),a.length>0&&(r.shapes=a),c.length>0&&(r.skeletons=c),l.length>0&&(r.animations=l)}return r.object=o,r},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const ms=new fo,gs=new fo,vs=new ro;class ys{constructor(t=new fo(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ms.subVectors(n,e).cross(gs.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new fo),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new fo);const n=t.delta(ms),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new fo),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||vs.getNormalMatrix(t),i=this.coplanarPoint(ms).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}ys.prototype.isPlane=!0;const xs=new fo,_s=new fo,bs=new fo,Es=new fo,ws=new fo,Ms=new fo,Ts=new fo,Ss=new fo,As=new fo,Rs=new fo;class Ls{constructor(t=new fo,e=new fo,n=new fo){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new fo),i.subVectors(n,e),xs.subVectors(t,e),i.cross(xs);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){xs.subVectors(i,e),_s.subVectors(n,e),bs.subVectors(t,e);const o=xs.dot(xs),s=xs.dot(_s),a=xs.dot(bs),c=_s.dot(_s),l=_s.dot(bs),h=o*c-s*s;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new fo),0===h)return r.set(-2,-1,-1);const u=1/h,d=(c*a-s*l)*u,p=(o*l-s*a)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Es),Es.x>=0&&Es.y>=0&&Es.x+Es.y<=1}static getUV(t,e,n,i,r,o,s,a){return this.getBarycoord(t,e,n,i,Es),a.set(0,0),a.addScaledVector(r,Es.x),a.addScaledVector(o,Es.y),a.addScaledVector(s,Es.z),a}static isFrontFacing(t,e,n,i){return xs.subVectors(n,e),_s.subVectors(t,e),xs.cross(_s).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return xs.subVectors(this.c,this.b),_s.subVectors(this.a,this.b),.5*xs.cross(_s).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new fo),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ls.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new ys),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ls.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return Ls.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return Ls.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ls.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new fo);const n=this.a,i=this.b,r=this.c;let o,s;ws.subVectors(i,n),Ms.subVectors(r,n),Ss.subVectors(t,n);const a=ws.dot(Ss),c=Ms.dot(Ss);if(a<=0&&c<=0)return e.copy(n);As.subVectors(t,i);const l=ws.dot(As),h=Ms.dot(As);if(l>=0&&h<=l)return e.copy(i);const u=a*h-l*c;if(u<=0&&a>=0&&l<=0)return o=a/(a-l),e.copy(n).addScaledVector(ws,o);Rs.subVectors(t,r);const d=ws.dot(Rs),p=Ms.dot(Rs);if(p>=0&&d<=p)return e.copy(r);const f=d*c-a*p;if(f<=0&&c>=0&&p<=0)return s=c/(c-p),e.copy(n).addScaledVector(Ms,s);const m=l*p-d*h;if(m<=0&&h-l>=0&&d-p>=0)return Ts.subVectors(r,i),s=(h-l)/(h-l+(d-p)),e.copy(i).addScaledVector(Ts,s);const g=1/(m+f+u);return o=f*g,s=u*g,e.copy(n).addScaledVector(ws,o).addScaledVector(Ms,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Cs=0;o.prototype=Object.assign(Object.create(e.prototype),{constructor:o,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){function e(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}const n=void 0===t||"string"==typeof t;n&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,i.reflectivity=this.reflectivity,i.refractionRatio=this.refractionRatio,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==An&&(i.blending=this.blending),this.side!==wn&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n){const n=e(t.textures),r=e(t.images);n.length>0&&(i.textures=n),r.length>0&&(i.images=r)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(o.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const Ps={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ns={h:0,s:0,l:0},Ds={h:0,s:0,l:0};class Is{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=no.euclideanModulo(t,1),e=no.clamp(e,0,1),n=no.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=s(r,i,t+1/3),this.g=s(r,i,t),this.b=s(r,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Ps[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=a(t.r),this.g=a(t.g),this.b=a(t.b),this}copyLinearToSRGB(t){return this.r=c(t.r),this.g=c(t.g),this.b=c(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),o=Math.min(e,n,i);let s,a;const c=(o+r)/2;if(o===r)s=0,a=0;else{const t=r-o;switch(a=c<=.5?t/(r+o):t/(2-r-o),r){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=a,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Ns),Ns.h+=t,Ns.s+=e,Ns.l+=n,this.setHSL(Ns.h,Ns.s,Ns.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Ns),t.getHSL(Ds);const n=no.lerp(Ns.h,Ds.h,e),i=no.lerp(Ns.s,Ds.s,e),r=no.lerp(Ns.l,Ds.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Is.NAMES=Ps,Is.prototype.isColor=!0,Is.prototype.r=1,Is.prototype.g=1,Is.prototype.b=1;class Os extends o{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Is(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ni,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}Os.prototype.isMeshBasicMaterial=!0;const Fs=new fo,ks=new io;Object.defineProperty(l.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(l.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new Is),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new io),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new fo),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new lo),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)ks.fromBufferAttribute(this,e),ks.applyMatrix3(t),this.setXY(e,ks.x,ks.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Fs.fromBufferAttribute(this,e),Fs.applyMatrix3(t),this.setXYZ(e,Fs.x,Fs.y,Fs.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Fs.x=this.getX(e),Fs.y=this.getY(e),Fs.z=this.getZ(e),Fs.applyMatrix4(t),this.setXYZ(e,Fs.x,Fs.y,Fs.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Fs.x=this.getX(e),Fs.y=this.getY(e),Fs.z=this.getZ(e),Fs.applyNormalMatrix(t),this.setXYZ(e,Fs.x,Fs.y,Fs.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Fs.x=this.getX(e),Fs.y=this.getY(e),Fs.z=this.getZ(e),Fs.transformDirection(t),this.setXYZ(e,Fs.x,Fs.y,Fs.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==Jr&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}),(h.prototype=Object.create(l.prototype)).constructor=h,(u.prototype=Object.create(l.prototype)).constructor=u,(d.prototype=Object.create(l.prototype)).constructor=d,(p.prototype=Object.create(l.prototype)).constructor=p,(f.prototype=Object.create(l.prototype)).constructor=f,(m.prototype=Object.create(l.prototype)).constructor=m,(g.prototype=Object.create(l.prototype)).constructor=g,(v.prototype=Object.create(l.prototype)).constructor=v,v.prototype.isFloat16BufferAttribute=!0,(y.prototype=Object.create(l.prototype)).constructor=y,(x.prototype=Object.create(l.prototype)).constructor=x;const Bs={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};let Hs=0;const Us=new Wo,zs=new r,Gs=new fo,Vs=new vo,Ws=new vo,js=new fo;E.prototype=Object.assign(Object.create(e.prototype),{constructor:E,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(_(t)>65535?g:f)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new ro).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Us.makeRotationX(t),this.applyMatrix4(Us),this},rotateY:function(t){return Us.makeRotationY(t),this.applyMatrix4(Us),this},rotateZ:function(t){return Us.makeRotationZ(t),this.applyMatrix4(Us),this},translate:function(t,e,n){return Us.makeTranslation(t,e,n),this.applyMatrix4(Us),this},scale:function(t,e,n){return Us.makeScale(t,e,n),this.applyMatrix4(Us),this},lookAt:function(t){return zs.lookAt(t),zs.updateMatrix(),this.applyMatrix4(zs.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gs).negate(),this.translate(Gs.x,Gs.y,Gs.z),this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new y(e,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new vo);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new fo(-1/0,-1/0,-1/0),new fo(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Vs.setFromBufferAttribute(n),this.morphTargetsRelative?(js.addVectors(this.boundingBox.min,Vs.min),this.boundingBox.expandByPoint(js),js.addVectors(this.boundingBox.max,Vs.max),this.boundingBox.expandByPoint(js)):(this.boundingBox.expandByPoint(Vs.min),this.boundingBox.expandByPoint(Vs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Oo);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new fo,1/0);if(t){const n=this.boundingSphere.center;if(Vs.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ws.setFromBufferAttribute(n),this.morphTargetsRelative?(js.addVectors(Vs.min,Ws.min),Vs.expandByPoint(js),js.addVectors(Vs.max,Ws.max),Vs.expandByPoint(js)):(Vs.expandByPoint(Ws.min),Vs.expandByPoint(Ws.max))}Vs.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)js.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(js));if(e)for(let r=0,o=e.length;r<o;r++){const o=e[r],s=this.morphTargetsRelative;for(let e=0,r=o.count;e<r;e++)js.fromBufferAttribute(o,e),s&&(Gs.fromBufferAttribute(t,e),js.add(Gs)),i=Math.max(i,n.distanceToSquared(js))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){function t(t,e,n){p.fromArray(o,3*t),f.fromArray(o,3*e),m.fromArray(o,3*n),g.fromArray(a,2*t),v.fromArray(a,2*e),y.fromArray(a,2*n),f.sub(p),m.sub(p),v.sub(g),y.sub(g);const i=1/(v.x*y.y-y.x*v.y);isFinite(i)&&(x.copy(f).multiplyScalar(y.y).addScaledVector(m,-v.y).multiplyScalar(i),_.copy(m).multiplyScalar(v.x).addScaledVector(f,-y.x).multiplyScalar(i),u[t].add(x),u[e].add(x),u[n].add(x),d[t].add(_),d[e].add(_),d[n].add(_))}function e(t){M.fromArray(s,3*t),T.copy(M);const e=u[t];E.copy(e),E.sub(M.multiplyScalar(M.dot(e))).normalize(),w.crossVectors(T,e);const n=w.dot(d[t])<0?-1:1;h[4*t]=E.x,h[4*t+1]=E.y,h[4*t+2]=E.z,h[4*t+3]=n}const n=this.index,i=this.attributes;if(null===n||void 0===i.position||void 0===i.normal||void 0===i.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const r=n.array,o=i.position.array,s=i.normal.array,a=i.uv.array,c=o.length/3;void 0===i.tangent&&this.setAttribute("tangent",new l(new Float32Array(4*c),4));const h=i.tangent.array,u=[],d=[];for(let t=0;t<c;t++)u[t]=new fo,d[t]=new fo;const p=new fo,f=new fo,m=new fo,g=new io,v=new io,y=new io,x=new fo,_=new fo;let b=this.groups;0===b.length&&(b=[{start:0,count:r.length}]);for(let e=0,n=b.length;e<n;++e){const n=b[e],i=n.start;for(let e=i,o=i+n.count;e<o;e+=3)t(r[e+0],r[e+1],r[e+2])}const E=new fo,w=new fo,M=new fo,T=new fo;for(let t=0,n=b.length;t<n;++t){const n=b[t],i=n.start;for(let t=i,o=i+n.count;t<o;t+=3)e(r[t+0]),e(r[t+1]),e(r[t+2])}},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new l(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new fo,r=new fo,o=new fo,s=new fo,a=new fo,c=new fo,h=new fo,u=new fo;if(t)for(let l=0,d=t.count;l<d;l+=3){const d=t.getX(l+0),p=t.getX(l+1),f=t.getX(l+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),o.fromBufferAttribute(e,f),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),s.fromBufferAttribute(n,d),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),s.add(h),a.add(h),c.add(h),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),o.fromBufferAttribute(e,t+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(t+0,h.x,h.y,h.z),n.setXYZ(t+1,h.x,h.y,h.z),n.setXYZ(t+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,o=t.attributes[i],s=o.array,a=o.itemSize*e,c=Math.min(s.length,r.length-a);for(let t=0,e=a;t<c;t++,e++)r[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)js.fromBufferAttribute(t,e),js.normalize(),t.setXYZ(e,js.x,js.y,js.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,o=new n.constructor(e.length*i);let s=0,a=0;for(let t=0,r=e.length;t<r;t++){s=e[t]*i;for(let t=0;t<i;t++)o[a++]=n[s++]}return new l(o,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new E,n=this.index.array,i=this.attributes;for(const r in i){const o=t(i[r],n);e.setAttribute(r,o)}const r=this.morphAttributes;for(const i in r){const o=[],s=r[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);o.push(i)}e.morphAttributes[i]=o}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let t=0,n=o.length;t<n;t++){const n=o[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],o=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];o.push(i.toJSON(t.data))}o.length>0&&(i[e]=o,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new E).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let t=0,e=o.length;t<e;t++){const e=o[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Xs=new Wo,qs=new Vo,Ys=new Oo,Ks=new fo,Zs=new fo,Js=new fo,Qs=new fo,$s=new fo,ta=new fo,ea=new fo,na=new fo,ia=new fo,ra=new io,oa=new io,sa=new io,aa=new fo,ca=new fo;w.prototype=Object.assign(Object.create(r.prototype),{constructor:w,isMesh:!0,copy:function(t){return r.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ys.copy(n.boundingSphere),Ys.applyMatrix4(r),!1===t.ray.intersectsSphere(Ys))return;if(Xs.copy(r).invert(),qs.copy(t.ray).applyMatrix4(Xs),null!==n.boundingBox&&!1===qs.intersectsBox(n.boundingBox))return;let o;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position,a=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);(o=M(this,f,t,qs,s,a,c,l,h,i,u,d))&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);(o=M(this,i,t,qs,s,a,c,l,h,u,d,p))&&(o.faceIndex=Math.floor(n/3),e.push(o))}}else if(void 0!==s)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(r.start+r.count,d.start+d.count);n<i;n+=3){(o=M(this,p,t,qs,s,a,c,l,h,n,n+1,n+2))&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=r.materialIndex,e.push(o))}}else{for(let n=Math.max(0,d.start),r=Math.min(s.count,d.start+d.count);n<r;n+=3){(o=M(this,i,t,qs,s,a,c,l,h,n,n+1,n+2))&&(o.faceIndex=Math.floor(n/3),e.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class la extends E{constructor(t=1,e=1,n=1,i=1,r=1,o=1){function s(t,e,n,i,r,o,s,f,m,g,v){const y=o/m,x=s/g,_=o/2,b=s/2,E=f/2,w=m+1,M=g+1;let T=0,S=0;const A=new fo;for(let o=0;o<M;o++){const s=o*x-b;for(let a=0;a<w;a++){const c=a*y-_;A[t]=c*i,A[e]=s*r,A[n]=E,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,h.push(A.x,A.y,A.z),u.push(a/m),u.push(1-o/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=d+e+w*t,i=d+e+w*(t+1),r=d+(e+1)+w*(t+1),o=d+(e+1)+w*t;c.push(n,i,o),c.push(i,r,o),S+=6}a.addGroup(p,S,v),p+=S,d+=T}super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r);const c=[],l=[],h=[],u=[];let d=0,p=0;s("z","y","x",-1,-1,n,e,t,o=Math.floor(o),r,0),s("z","y","x",1,-1,n,e,-t,o,r,1),s("x","z","y",1,1,t,n,e,i,o,2),s("x","z","y",1,-1,t,n,-e,i,o,3),s("x","y","z",1,-1,t,e,n,i,r,4),s("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new y(l,3)),this.setAttribute("normal",new y(h,3)),this.setAttribute("uv",new y(u,2))}}const ha={clone:T,merge:S};var ua="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",da="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";(A.prototype=Object.create(o.prototype)).constructor=A,A.prototype.isShaderMaterial=!0,A.prototype.copy=function(t){return o.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=T(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},A.prototype.toJSON=function(t){const e=o.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},R.prototype=Object.assign(Object.create(r.prototype),{constructor:R,isCamera:!0,copy:function(t,e){return r.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new fo),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){r.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){r.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),L.prototype=Object.assign(Object.create(R.prototype),{constructor:L,isPerspectiveCamera:!0,copy:function(t,e){return R.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*no.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*no.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*no.RAD2DEG*Math.atan(Math.tan(.5*no.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*no.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(null!==this.view&&this.view.enabled){const t=o.fullWidth,s=o.fullHeight;r+=o.offsetX*i/t,e-=o.offsetY*n/s,i*=o.width/t,n*=o.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=r.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});class pa extends r{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new L(90,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new fo(1,0,0)),this.add(i);const r=new L(90,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new fo(-1,0,0)),this.add(r);const o=new L(90,1,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new fo(0,1,0)),this.add(o);const s=new L(90,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new fo(0,-1,0)),this.add(s);const a=new L(90,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new fo(0,0,1)),this.add(a);const c=new L(90,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new fo(0,0,-1)),this.add(c)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,s,a,c]=this.children,l=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,a),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=l}}class fa extends co{constructor(t,e,n,i,r,o,s,a,c,l){super(t=void 0!==t?t:[],e=void 0!==e?e:ui,n,i,r,o,s=void 0!==s?s:Hi,a,c,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}fa.prototype.isCubeTexture=!0;class ma extends ho{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new fa(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:wi,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Ui,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new la(5,5,5),r=new A({name:"CubemapFromEquirect",uniforms:T(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Mn,blending:Sn});r.uniforms.tEquirect.value=e;const o=new w(i,r),s=e.minFilter;e.minFilter===Ti&&(e.minFilter=wi);return new pa(1,10,this).update(t,o),e.minFilter=s,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}ma.prototype.isWebGLCubeRenderTarget=!0;class ga extends co{constructor(t,e,n,i,r,o,s,a,c,l,h,u){super(null,o,s,a,c,l,i,r,h,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==c?c:_i,this.minFilter=void 0!==l?l:_i,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ga.prototype.isDataTexture=!0;const va=new Oo,ya=new fo;class xa{constructor(t=new ys,e=new ys,n=new ys,i=new ys,r=new ys,o=new ys){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],s=n[3],a=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(s-i,h-a,f-u,y-m).normalize(),e[1].setComponents(s+i,h+a,f+u,y+m).normalize(),e[2].setComponents(s+r,h+c,f+d,y+g).normalize(),e[3].setComponents(s-r,h-c,f-d,y-g).normalize(),e[4].setComponents(s-o,h-l,f-p,y-v).normalize(),e[5].setComponents(s+o,h+l,f+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),va.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(va)}intersectsSprite(t){return va.center.set(0,0,0),va.radius=.7071067811865476,va.applyMatrix4(t.matrixWorld),this.intersectsSphere(va)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(ya.x=i.normal.x>0?t.max.x:t.min.x,ya.y=i.normal.y>0?t.max.y:t.min.y,ya.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(ya)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}class _a extends E{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,s=Math.floor(n),a=Math.floor(i),c=s+1,l=a+1,h=t/s,u=e/a,d=[],p=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-o;for(let n=0;n<c;n++){const i=n*h-r;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<s;e++){const n=e+c*t,i=e+c*(t+1),r=e+1+c*(t+1),o=e+1+c*t;d.push(n,i,o),d.push(i,r,o)}this.setIndex(d),this.setAttribute("position",new y(p,3)),this.setAttribute("normal",new y(f,3)),this.setAttribute("uv",new y(m,2))}}const ba={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Ea={common:{diffuse:{value:new Is(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ro},uv2Transform:{value:new ro},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new io(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Is(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Is(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ro}},sprite:{diffuse:{value:new Is(15658734)},opacity:{value:1},center:{value:new io(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ro}}},wa={basic:{uniforms:S([Ea.common,Ea.specularmap,Ea.envmap,Ea.aomap,Ea.lightmap,Ea.fog]),vertexShader:ba.meshbasic_vert,fragmentShader:ba.meshbasic_frag},lambert:{uniforms:S([Ea.common,Ea.specularmap,Ea.envmap,Ea.aomap,Ea.lightmap,Ea.emissivemap,Ea.fog,Ea.lights,{emissive:{value:new Is(0)}}]),vertexShader:ba.meshlambert_vert,fragmentShader:ba.meshlambert_frag},phong:{uniforms:S([Ea.common,Ea.specularmap,Ea.envmap,Ea.aomap,Ea.lightmap,Ea.emissivemap,Ea.bumpmap,Ea.normalmap,Ea.displacementmap,Ea.fog,Ea.lights,{emissive:{value:new Is(0)},specular:{value:new Is(1118481)},shininess:{value:30}}]),vertexShader:ba.meshphong_vert,fragmentShader:ba.meshphong_frag},standard:{uniforms:S([Ea.common,Ea.envmap,Ea.aomap,Ea.lightmap,Ea.emissivemap,Ea.bumpmap,Ea.normalmap,Ea.displacementmap,Ea.roughnessmap,Ea.metalnessmap,Ea.fog,Ea.lights,{emissive:{value:new Is(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ba.meshphysical_vert,fragmentShader:ba.meshphysical_frag},toon:{uniforms:S([Ea.common,Ea.aomap,Ea.lightmap,Ea.emissivemap,Ea.bumpmap,Ea.normalmap,Ea.displacementmap,Ea.gradientmap,Ea.fog,Ea.lights,{emissive:{value:new Is(0)}}]),vertexShader:ba.meshtoon_vert,fragmentShader:ba.meshtoon_frag},matcap:{uniforms:S([Ea.common,Ea.bumpmap,Ea.normalmap,Ea.displacementmap,Ea.fog,{matcap:{value:null}}]),vertexShader:ba.meshmatcap_vert,fragmentShader:ba.meshmatcap_frag},points:{uniforms:S([Ea.points,Ea.fog]),vertexShader:ba.points_vert,fragmentShader:ba.points_frag},dashed:{uniforms:S([Ea.common,Ea.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ba.linedashed_vert,fragmentShader:ba.linedashed_frag},depth:{uniforms:S([Ea.common,Ea.displacementmap]),vertexShader:ba.depth_vert,fragmentShader:ba.depth_frag},normal:{uniforms:S([Ea.common,Ea.bumpmap,Ea.normalmap,Ea.displacementmap,{opacity:{value:1}}]),vertexShader:ba.normal_vert,fragmentShader:ba.normal_frag},sprite:{uniforms:S([Ea.sprite,Ea.fog]),vertexShader:ba.sprite_vert,fragmentShader:ba.sprite_frag},background:{uniforms:{uvTransform:{value:new ro},t2D:{value:null}},vertexShader:ba.background_vert,fragmentShader:ba.background_frag},cube:{uniforms:S([Ea.envmap,{opacity:{value:1}}]),vertexShader:ba.cube_vert,fragmentShader:ba.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ba.equirect_vert,fragmentShader:ba.equirect_frag},distanceRGBA:{uniforms:S([Ea.common,Ea.displacementmap,{referencePosition:{value:new fo},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ba.distanceRGBA_vert,fragmentShader:ba.distanceRGBA_frag},shadow:{uniforms:S([Ea.lights,Ea.fog,{color:{value:new Is(0)},opacity:{value:1}}]),vertexShader:ba.shadow_vert,fragmentShader:ba.shadow_frag}};wa.physical={uniforms:S([wa.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new io(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Is(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ba.meshphysical_vert,fragmentShader:ba.meshphysical_frag};class Ma extends co{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=_i,this.minFilter=_i,this.wrapR=yi,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Ma.prototype.isDataTexture2DArray=!0;class Ta extends co{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=_i,this.minFilter=_i,this.wrapR=yi,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Ta.prototype.isDataTexture3D=!0;const Sa=new co,Aa=new Ma,Ra=new Ta,La=new fa,Ca=[],Pa=[],Na=new Float32Array(16),Da=new Float32Array(9),Ia=new Float32Array(4);Et.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),k(e,t)},wt.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const o=i[r];o.setValue(t,e[o.id],n)}};const Oa=/(\w+)(\])?(\[|\.)?/g;St.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},St.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},St.upload=function(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const o=e[r],s=n[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,i)}},St.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let Fa=0;const ka=/^[ \t]*#include +<([\w\d./]+)>/gm,Ba=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Ha=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;let Ua=0;class za extends o{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}za.prototype.isMeshDepthMaterial=!0;class Ga extends o{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new fo,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}Ga.prototype.isMeshDistanceMaterial=!0;var Va="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",Wa="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";class ja extends L{constructor(t=[]){super(),this.cameras=t}}ja.prototype.isArrayCamera=!0;class Xa extends r{constructor(){super(),this.type="Group"}}Xa.prototype.isGroup=!0,Object.assign(Kt.prototype,{constructor:Kt,getHandSpace:function(){return null===this._hand&&(this._hand=new Xa,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Xa,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Xa,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,o=null;const s=this._targetRay,a=this._grip,c=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&null!==(i=e.getPose(t.targetRaySpace,n))&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale)),c&&t.hand){o=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===c.joints[i.jointName]){const t=new Xa;t.matrixAutoUpdate=!1,t.visible=!1,c.joints[i.jointName]=t,c.add(t)}const r=c.joints[i.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const i=c.joints["index-finger-tip"],r=c.joints["thumb-tip"],s=i.position.distanceTo(r.position);c.inputState.pinching&&s>.025?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&s<=.015&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==a&&t.gripSpace&&null!==(r=e.getPose(t.gripSpace,n))&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale));return null!==s&&(s.visible=null!==i),null!==a&&(a.visible=null!==r),null!==c&&(c.visible=null!==o),this}}),Object.assign(Zt.prototype,e.prototype);class qa extends Qt{}qa.prototype.isWebGL1Renderer=!0;class Ya{constructor(t,e=25e-5){this.name="",this.color=new Is(t),this.density=e}clone(){return new Ya(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Ya.prototype.isFogExp2=!0;class Ka{constructor(t,e=1,n=1e3){this.name="",this.color=new Is(t),this.near=e,this.far=n}clone(){return new Ka(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Ka.prototype.isFog=!0;class Za extends r{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}Za.prototype.isScene=!0,Object.defineProperty($t.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign($t.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=no.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new $t(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=no.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Ja=new fo;Object.defineProperties(te.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(te.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)Ja.x=this.getX(e),Ja.y=this.getY(e),Ja.z=this.getZ(e),Ja.applyMatrix4(t),this.setXYZ(e,Ja.x,Ja.y,Ja.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Ja.x=this.getX(e),Ja.y=this.getY(e),Ja.z=this.getZ(e),Ja.applyNormalMatrix(t),this.setXYZ(e,Ja.x,Ja.y,Ja.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Ja.x=this.getX(e),Ja.y=this.getY(e),Ja.z=this.getZ(e),Ja.transformDirection(t),this.setXYZ(e,Ja.x,Ja.y,Ja.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new l(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new te(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});class Qa extends o{constructor(t){super(),this.type="SpriteMaterial",this.color=new Is(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}Qa.prototype.isSpriteMaterial=!0;let $a;const tc=new fo,ec=new fo,nc=new fo,ic=new io,rc=new io,oc=new Wo,sc=new fo,ac=new fo,cc=new fo,lc=new io,hc=new io,uc=new io;class dc extends r{constructor(t){if(super(),this.type="Sprite",void 0===$a){$a=new E;const t=new $t(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);$a.setIndex([0,1,2,0,2,3]),$a.setAttribute("position",new te(t,3,0,!1)),$a.setAttribute("uv",new te(t,2,3,!1))}this.geometry=$a,this.material=void 0!==t?t:new Qa,this.center=new io(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ec.setFromMatrixScale(this.matrixWorld),oc.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),nc.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ec.multiplyScalar(-nc.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;ee(sc.set(-.5,-.5,0),nc,o,ec,i,r),ee(ac.set(.5,-.5,0),nc,o,ec,i,r),ee(cc.set(.5,.5,0),nc,o,ec,i,r),lc.set(0,0),hc.set(1,0),uc.set(1,1);let s=t.ray.intersectTriangle(sc,ac,cc,!1,tc);if(null===s&&(ee(ac.set(-.5,.5,0),nc,o,ec,i,r),hc.set(0,1),null===(s=t.ray.intersectTriangle(sc,cc,ac,!1,tc))))return;const a=t.ray.origin.distanceTo(tc);a<t.near||a>t.far||e.push({distance:a,point:tc.clone(),uv:Ls.getUV(tc,sc,ac,cc,lc,hc,uc,new io),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}dc.prototype.isSprite=!0;const pc=new fo,fc=new fo;class mc extends r{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){pc.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(pc);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){pc.setFromMatrixPosition(t.matrixWorld),fc.setFromMatrixPosition(this.matrixWorld);const n=pc.distanceTo(fc)/t.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance})}return e}}const gc=new fo,vc=new lo,yc=new lo,xc=new fo,_c=new Wo;ne.prototype=Object.assign(Object.create(w.prototype),{constructor:ne,isSkinnedMesh:!0,copy:function(t){return w.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new lo,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){w.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;vc.fromBufferAttribute(i.attributes.skinIndex,t),yc.fromBufferAttribute(i.attributes.skinWeight,t),gc.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=yc.getComponent(t);if(0!==i){const r=vc.getComponent(t);_c.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(xc.copy(gc).applyMatrix4(_c),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}),ie.prototype=Object.assign(Object.create(r.prototype),{constructor:ie,isBone:!0});const bc=new Wo,Ec=new Wo;class wc{constructor(t=[],e=[]){this.uuid=no.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Wo)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Wo;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const r=t[i]?t[i].matrixWorld:Ec;bc.multiplyMatrices(r,e[i]),bc.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new wc(this.bones,this.boneInverses)}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const i=t.bones[n];let r=e[i];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),r=new ie),this.bones.push(r),this.boneInverses.push((new Wo).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const r=e[i];t.bones.push(r.uuid);const o=n[i];t.boneInverses.push(o.toArray())}return t}}const Mc=new Wo,Tc=new Wo,Sc=[],Ac=new w;re.prototype=Object.assign(Object.create(w.prototype),{constructor:re,isInstancedMesh:!0,copy:function(t){return w.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(Ac.geometry=this.geometry,Ac.material=this.material,void 0!==Ac.material)for(let r=0;r<i;r++){this.getMatrixAt(r,Mc),Tc.multiplyMatrices(n,Mc),Ac.matrixWorld=Tc,Ac.raycast(t,Sc);for(let t=0,n=Sc.length;t<n;t++){const n=Sc[t];n.instanceId=r,n.object=this,e.push(n)}Sc.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new l(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Rc extends o{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Is(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}Rc.prototype.isLineBasicMaterial=!0;const Lc=new fo,Cc=new fo,Pc=new Wo,Nc=new Vo,Dc=new Oo;oe.prototype=Object.assign(Object.create(r.prototype),{constructor:oe,isLine:!0,copy:function(t){return r.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Lc.fromBufferAttribute(e,t-1),Cc.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Lc.distanceTo(Cc);t.setAttribute("lineDistance",new y(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Dc.copy(n.boundingSphere),Dc.applyMatrix4(i),Dc.radius+=r,!1===t.ray.intersectsSphere(Dc))return;Pc.copy(i).invert(),Nc.copy(t.ray).applyMatrix4(Pc);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s,c=new fo,l=new fo,h=new fo,u=new fo,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i){for(let n=Math.max(0,o.start),s=Math.min(i.count,o.start+o.count)-1;n<s;n+=d){const o=i.getX(n),s=i.getX(n+1);c.fromBufferAttribute(r,o),l.fromBufferAttribute(r,s);if(Nc.distanceSqToSegment(c,l,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(u);d<t.near||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{for(let n=Math.max(0,o.start),i=Math.min(r.count,o.start+o.count)-1;n<i;n+=d){c.fromBufferAttribute(r,n),l.fromBufferAttribute(r,n+1);if(Nc.distanceSqToSegment(c,l,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Ic=new fo,Oc=new fo;se.prototype=Object.assign(Object.create(oe.prototype),{constructor:se,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)Ic.fromBufferAttribute(e,t),Oc.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Ic.distanceTo(Oc);t.setAttribute("lineDistance",new y(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});class Fc extends oe{constructor(t,e){super(t,e),this.type="LineLoop"}}Fc.prototype.isLineLoop=!0;class kc extends o{constructor(t){super(),this.type="PointsMaterial",this.color=new Is(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}kc.prototype.isPointsMaterial=!0;const Bc=new Wo,Hc=new Vo,Uc=new Oo,zc=new fo;ae.prototype=Object.assign(Object.create(r.prototype),{constructor:ae,isPoints:!0,copy:function(t){return r.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Uc.copy(n.boundingSphere),Uc.applyMatrix4(i),Uc.radius+=r,!1===t.ray.intersectsSphere(Uc))return;Bc.copy(i).invert(),Hc.copy(t.ray).applyMatrix4(Bc);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position;if(null!==r){for(let n=Math.max(0,o.start),c=Math.min(r.count,o.start+o.count);n<c;n++){const o=r.getX(n);zc.fromBufferAttribute(s,o),ce(zc,o,a,i,t,e,this)}}else{for(let n=Math.max(0,o.start),r=Math.min(s.count,o.start+o.count);n<r;n++)zc.fromBufferAttribute(s,n),ce(zc,n,a,i,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});class Gc extends co{constructor(t,e,n,i,r,o,s,a,c){function l(){h.needsUpdate=!0,t.requestVideoFrameCallback(l)}super(t,e,n,i,r,o,s,a,c),this.format=void 0!==s?s:Hi,this.minFilter=void 0!==o?o:wi,this.magFilter=void 0!==r?r:wi,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(l)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Gc.prototype.isVideoTexture=!0;class Vc extends co{constructor(t,e,n,i,r,o,s,a,c,l,h,u){super(null,o,s,a,c,l,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Vc.prototype.isCompressedTexture=!0;class Wc extends co{constructor(t,e,n,i,r,o,s,a,c){super(t,e,n,i,r,o,s,a,c),this.needsUpdate=!0}}Wc.prototype.isCanvasTexture=!0;class jc extends co{constructor(t,e,n,i,r,o,s,a,c,l){if((l=void 0!==l?l:Wi)!==Wi&&l!==ji)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===Wi&&(n=Li),void 0===n&&l===ji&&(n=ki),super(null,i,r,o,s,a,l,n,c),this.image={width:t,height:e},this.magFilter=void 0!==s?s:_i,this.minFilter=void 0!==a?a:_i,this.flipY=!1,this.generateMipmaps=!1}}jc.prototype.isDepthTexture=!0;class Xc extends E{constructor(t=1,e=8,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],o=[],s=[],a=[],c=new fo,l=new io;o.push(0,0,0),s.push(0,0,1),a.push(.5,.5);for(let r=0,h=3;r<=e;r++,h+=3){const u=n+r/e*i;c.x=t*Math.cos(u),c.y=t*Math.sin(u),o.push(c.x,c.y,c.z),s.push(0,0,1),l.x=(o[h]/t+1)/2,l.y=(o[h+1]/t+1)/2,a.push(l.x,l.y)}for(let t=1;t<=e;t++)r.push(t,t+1,0);this.setIndex(r),this.setAttribute("position",new y(o,3)),this.setAttribute("normal",new y(s,3)),this.setAttribute("uv",new y(a,2))}}class qc extends E{constructor(t=1,e=1,n=1,i=8,r=1,o=!1,s=0,a=2*Math.PI){function c(n){const r=f,o=new io,c=new fo;let m=0;const y=!0===n?t:e,x=!0===n?1:-1;for(let t=1;t<=i;t++)u.push(0,g*x,0),d.push(0,x,0),p.push(.5,.5),f++;const _=f;for(let t=0;t<=i;t++){const e=t/i*a+s,n=Math.cos(e),r=Math.sin(e);c.x=y*r,c.y=g*x,c.z=y*n,u.push(c.x,c.y,c.z),d.push(0,x,0),o.x=.5*n+.5,o.y=.5*r*x+.5,p.push(o.x,o.y),f++}for(let t=0;t<i;t++){const e=r+t,i=_+t;!0===n?h.push(i,i+1,e):h.push(i+1,i,e),m+=3}l.addGroup(v,m,!0===n?1:2),v+=m}super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:s,thetaLength:a};const l=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],p=[];let f=0;const m=[],g=n/2;let v=0;!function(){const o=new fo,c=new fo;let y=0;const x=(e-t)/n;for(let l=0;l<=r;l++){const h=[],v=l/r,y=v*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,r=e*a+s,l=Math.sin(r),m=Math.cos(r);c.x=y*l,c.y=-v*n+g,c.z=y*m,u.push(c.x,c.y,c.z),o.set(l,x,m).normalize(),d.push(o.x,o.y,o.z),p.push(e,1-v),h.push(f++)}m.push(h)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){const n=m[e][t],i=m[e+1][t],r=m[e+1][t+1],o=m[e][t+1];h.push(n,i,o),h.push(i,r,o),y+=6}l.addGroup(v,y,0),v+=y}(),!1===o&&(t>0&&c(!0),e>0&&c(!1)),this.setIndex(h),this.setAttribute("position",new y(u,3)),this.setAttribute("normal",new y(d,3)),this.setAttribute("uv",new y(p,2))}}class Yc extends qc{constructor(t=1,e=1,n=8,i=1,r=!1,o=0,s=2*Math.PI){super(0,t,e,n,i,r,o,s),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:s}}}class Kc extends E{constructor(t,e,n=1,i=0){function r(t){c.push(t.x,t.y,t.z)}function o(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function s(t,e,n,i){i<0&&1===t.x&&(l[e]=t.x-1),0===n.x&&0===n.z&&(l[e]=i/2/Math.PI+.5)}function a(t){return Math.atan2(t.z,-t.x)}super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const c=[],l=[];!function(t){const n=new fo,i=new fo,s=new fo;for(let a=0;a<e.length;a+=3)o(e[a+0],n),o(e[a+1],i),o(e[a+2],s),function(t,e,n,i){const o=i+1,s=[];for(let i=0;i<=o;i++){s[i]=[];const r=t.clone().lerp(n,i/o),a=e.clone().lerp(n,i/o),c=o-i;for(let t=0;t<=c;t++)s[i][t]=0===t&&i===o?r:r.clone().lerp(a,t/c)}for(let t=0;t<o;t++)for(let e=0;e<2*(o-t)-1;e++){const n=Math.floor(e/2);e%2==0?(r(s[t][n+1]),r(s[t+1][n]),r(s[t][n])):(r(s[t][n+1]),r(s[t+1][n+1]),r(s[t+1][n]))}}(n,i,s,t)}(i),function(t){const e=new fo;for(let n=0;n<c.length;n+=3)e.x=c[n+0],e.y=c[n+1],e.z=c[n+2],e.normalize().multiplyScalar(t),c[n+0]=e.x,c[n+1]=e.y,c[n+2]=e.z}(n),function(){const t=new fo;for(let e=0;e<c.length;e+=3){t.x=c[e+0],t.y=c[e+1],t.z=c[e+2];const n=a(t)/2/Math.PI+.5,i=function(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}(t)/Math.PI+.5;l.push(n,1-i)}!function(){const t=new fo,e=new fo,n=new fo,i=new fo,r=new io,o=new io,h=new io;for(let u=0,d=0;u<c.length;u+=9,d+=6){t.set(c[u+0],c[u+1],c[u+2]),e.set(c[u+3],c[u+4],c[u+5]),n.set(c[u+6],c[u+7],c[u+8]),r.set(l[d+0],l[d+1]),o.set(l[d+2],l[d+3]),h.set(l[d+4],l[d+5]),i.copy(t).add(e).add(n).divideScalar(3);const p=a(i);s(r,d+0,t,p),s(o,d+2,e,p),s(h,d+4,n,p)}}(),function(){for(let t=0;t<l.length;t+=6){const e=l[t+0],n=l[t+2],i=l[t+4],r=Math.max(e,n,i),o=Math.min(e,n,i);r>.9&&o<.1&&(e<.2&&(l[t+0]+=1),n<.2&&(l[t+2]+=1),i<.2&&(l[t+4]+=1))}}()}(),this.setAttribute("position",new y(c,3)),this.setAttribute("normal",new y(c.slice(),3)),this.setAttribute("uv",new y(l,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}}class Zc extends Kc{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}}const Jc=new fo,Qc=new fo,$c=new fo,tl=new Ls;class el extends E{constructor(t,e){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1,!0===t.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const n=Math.pow(10,4),i=Math.cos(no.DEG2RAD*e),r=t.getIndex(),o=t.getAttribute("position"),s=r?r.count:o.count,a=[0,0,0],c=["a","b","c"],l=new Array(3),h={},u=[];for(let t=0;t<s;t+=3){r?(a[0]=r.getX(t),a[1]=r.getX(t+1),a[2]=r.getX(t+2)):(a[0]=t,a[1]=t+1,a[2]=t+2);const{a:e,b:s,c:d}=tl;if(e.fromBufferAttribute(o,a[0]),s.fromBufferAttribute(o,a[1]),d.fromBufferAttribute(o,a[2]),tl.getNormal($c),l[0]=`${Math.round(e.x*n)},${Math.round(e.y*n)},${Math.round(e.z*n)}`,l[1]=`${Math.round(s.x*n)},${Math.round(s.y*n)},${Math.round(s.z*n)}`,l[2]=`${Math.round(d.x*n)},${Math.round(d.y*n)},${Math.round(d.z*n)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=l[t],r=l[e],o=tl[c[t]],s=tl[c[e]],d=`${n}_${r}`,p=`${r}_${n}`;p in h&&h[p]?($c.dot(h[p].normal)<=i&&(u.push(o.x,o.y,o.z),u.push(s.x,s.y,s.z)),h[p]=null):d in h||(h[d]={index0:a[t],index1:a[e],normal:$c.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];Jc.fromBufferAttribute(o,e),Qc.fromBufferAttribute(o,n),u.push(Jc.x,Jc.y,Jc.z),u.push(Qc.x,Qc.y,Qc.z)}this.setAttribute("position",new y(u,3))}}const nl={triangulate:function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let o=le(t,0,r,n,!0);const s=[];if(!o||o.next===o.prev)return s;let a,c,l,h,u,d,p;if(i&&(o=de(t,e,o,n)),t.length>80*n){a=l=t[0],c=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<a&&(a=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);p=0!==(p=Math.max(l-a,h-c))?1/p:0}return ue(o,s,n,a,c,p),s}},il={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n},isClockWise:function(t){return il.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];Se(t),Ae(n,t);let o=t.length;e.forEach(Se);for(let t=0;t<e.length;t++)i.push(o),o+=e[t].length,Ae(n,e[t]);const s=nl.triangulate(n,i);for(let t=0;t<s.length;t+=3)r.push(s.slice(t,t+3));return r}};class rl extends E{constructor(t,e){function n(t){function n(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}function s(t,e,n){let i,r,o;const s=t.x-e.x,a=t.y-e.y,c=n.x-t.x,l=n.y-t.y,h=s*s+a*a,u=s*l-a*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(c*c+l*l),p=e.x-a/u,f=e.y+s/u,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(s*l-a*c),g=(i=p+s*m-t.x)*i+(r=f+a*m-t.y)*r;if(g<=2)return new io(i,r);o=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?c>Number.EPSILON&&(t=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(l)&&(t=!0),t?(i=-a,r=s,o=Math.sqrt(h)):(i=s,r=a,o=Math.sqrt(h/2))}return new io(i/o,r/o)}function a(t,e){let n=t.length;for(;--n>=0;){const o=n;let s=n-1;s<0&&(s=t.length-1);for(let t=0,n=f+2*_;t<n;t++){const n=I*t,a=I*(t+1);!function(t,e,n,o){h(t),h(e),h(o),h(e),h(n),h(o);const s=r.length/3,a=E.generateSideWallUV(i,r,s-6,s-3,s-2,s-1);u(a[0]),u(a[1]),u(a[3]),u(a[1]),u(a[2]),u(a[3])}(e+o+n,e+s+n,e+s+a,e+o+a)}}}function c(t,e,n){d.push(t),d.push(e),d.push(n)}function l(t,e,n){h(t),h(e),h(n);const o=r.length/3,s=E.generateTopUV(i,r,o-3,o-2,o-1);u(s[0]),u(s[1]),u(s[2])}function h(t){r.push(d[3*t+0]),r.push(d[3*t+1]),r.push(d[3*t+2])}function u(t){o.push(t.x),o.push(t.y)}const d=[],p=void 0!==e.curveSegments?e.curveSegments:12,f=void 0!==e.steps?e.steps:1;let m=void 0!==e.depth?e.depth:100,g=void 0===e.bevelEnabled||e.bevelEnabled,v=void 0!==e.bevelThickness?e.bevelThickness:6,y=void 0!==e.bevelSize?e.bevelSize:v-2,x=void 0!==e.bevelOffset?e.bevelOffset:0,_=void 0!==e.bevelSegments?e.bevelSegments:3;const b=e.extrudePath,E=void 0!==e.UVGenerator?e.UVGenerator:ol;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),m=e.amount);let w,M,T,S,A,R=!1;b&&(w=b.getSpacedPoints(f),R=!0,g=!1,M=b.computeFrenetFrames(f,!1),T=new fo,S=new fo,A=new fo),g||(_=0,v=0,y=0,x=0);const L=t.extractPoints(p);let C=L.shape;const P=L.holes;if(!il.isClockWise(C)){C=C.reverse();for(let t=0,e=P.length;t<e;t++){const e=P[t];il.isClockWise(e)&&(P[t]=e.reverse())}}const N=il.triangulateShape(C,P),D=C;for(let t=0,e=P.length;t<e;t++){const e=P[t];C=C.concat(e)}const I=C.length,O=N.length,F=[];for(let t=0,e=D.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),F[t]=s(D[t],D[n],D[i]);const k=[];let B,H=F.concat();for(let t=0,e=P.length;t<e;t++){const e=P[t];B=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),B[t]=s(e[t],e[i],e[r]);k.push(B),H=H.concat(B)}for(let t=0;t<_;t++){const e=t/_,i=v*Math.cos(e*Math.PI/2),r=y*Math.sin(e*Math.PI/2)+x;for(let t=0,e=D.length;t<e;t++){const e=n(D[t],F[t],r);c(e.x,e.y,-i)}for(let t=0,e=P.length;t<e;t++){const e=P[t];B=k[t];for(let t=0,o=e.length;t<o;t++){const o=n(e[t],B[t],r);c(o.x,o.y,-i)}}}const U=y+x;for(let t=0;t<I;t++){const e=g?n(C[t],H[t],U):C[t];R?(S.copy(M.normals[0]).multiplyScalar(e.x),T.copy(M.binormals[0]).multiplyScalar(e.y),A.copy(w[0]).add(S).add(T),c(A.x,A.y,A.z)):c(e.x,e.y,0)}for(let t=1;t<=f;t++)for(let e=0;e<I;e++){const i=g?n(C[e],H[e],U):C[e];R?(S.copy(M.normals[t]).multiplyScalar(i.x),T.copy(M.binormals[t]).multiplyScalar(i.y),A.copy(w[t]).add(S).add(T),c(A.x,A.y,A.z)):c(i.x,i.y,m/f*t)}for(let t=_-1;t>=0;t--){const e=t/_,i=v*Math.cos(e*Math.PI/2),r=y*Math.sin(e*Math.PI/2)+x;for(let t=0,e=D.length;t<e;t++){const e=n(D[t],F[t],r);c(e.x,e.y,m+i)}for(let t=0,e=P.length;t<e;t++){const e=P[t];B=k[t];for(let t=0,o=e.length;t<o;t++){const o=n(e[t],B[t],r);R?c(o.x,o.y+w[f-1].y,w[f-1].x+i):c(o.x,o.y,m+i)}}}!function(){const t=r.length/3;if(g){let t=0,e=I*t;for(let t=0;t<O;t++){const n=N[t];l(n[2]+e,n[1]+e,n[0]+e)}e=I*(t=f+2*_);for(let t=0;t<O;t++){const n=N[t];l(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<O;t++){const e=N[t];l(e[2],e[1],e[0])}for(let t=0;t<O;t++){const e=N[t];l(e[0]+I*f,e[1]+I*f,e[2]+I*f)}}i.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;a(D,e),e+=D.length;for(let t=0,n=P.length;t<n;t++){const n=P[t];a(n,e),e+=n.length}i.addGroup(t,r.length/3-t,1)}()}super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e};const i=this,r=[],o=[];for(let e=0,i=(t=Array.isArray(t)?t:[t]).length;e<i;e++){n(t[e])}this.setAttribute("position",new y(r,3)),this.setAttribute("uv",new y(o,2)),this.computeVertexNormals()}toJSON(){const t=E.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const ol={generateTopUV:function(t,e,n,i,r){const o=e[3*n],s=e[3*n+1],a=e[3*i],c=e[3*i+1],l=e[3*r],h=e[3*r+1];return[new io(o,s),new io(a,c),new io(l,h)]},generateSideWallUV:function(t,e,n,i,r,o){const s=e[3*n],a=e[3*n+1],c=e[3*n+2],l=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*o],g=e[3*o+1],v=e[3*o+2];return Math.abs(a-h)<.01?[new io(s,1-c),new io(l,1-u),new io(d,1-f),new io(m,1-v)]:[new io(a,1-c),new io(h,1-u),new io(p,1-f),new io(g,1-v)]}};class sl extends Kc{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}}class al extends E{constructor(t,e=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=no.clamp(i,0,2*Math.PI);const r=[],o=[],s=[],a=1/e,c=new fo,l=new io;for(let r=0;r<=e;r++){const h=n+r*a*i,u=Math.sin(h),d=Math.cos(h);for(let n=0;n<=t.length-1;n++)c.x=t[n].x*u,c.y=t[n].y,c.z=t[n].x*d,o.push(c.x,c.y,c.z),l.x=r/e,l.y=n/(t.length-1),s.push(l.x,l.y)}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const i=e+n*t.length,o=i,s=i+t.length,a=i+t.length+1,c=i+1;r.push(o,s,c),r.push(s,a,c)}if(this.setIndex(r),this.setAttribute("position",new y(o,3)),this.setAttribute("uv",new y(s,2)),this.computeVertexNormals(),i===2*Math.PI){const n=this.attributes.normal.array,i=new fo,r=new fo,o=new fo,s=e*t.length*3;for(let e=0,a=0;e<t.length;e++,a+=3)i.x=n[a+0],i.y=n[a+1],i.z=n[a+2],r.x=n[s+a+0],r.y=n[s+a+1],r.z=n[s+a+2],o.addVectors(i,r).normalize(),n[a+0]=n[s+a+0]=o.x,n[a+1]=n[s+a+1]=o.y,n[a+2]=n[s+a+2]=o.z}}}class cl extends Kc{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}}(Re.prototype=Object.create(E.prototype)).constructor=Re;class ll extends E{constructor(t=.5,e=1,n=8,i=1,r=0,o=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n);const s=[],a=[],c=[],l=[];let h=t;const u=(e-t)/(i=Math.max(1,i)),d=new fo,p=new io;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=r+t/n*o;d.x=h*Math.cos(i),d.y=h*Math.sin(i),a.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,l.push(p.x,p.y)}h+=u}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,r=i,o=i+n+1,a=i+n+2,c=i+1;s.push(r,o,c),s.push(o,a,c)}}this.setIndex(s),this.setAttribute("position",new y(a,3)),this.setAttribute("normal",new y(c,3)),this.setAttribute("uv",new y(l,2))}}class hl extends E{constructor(t,e=12){function n(t){const n=r.length/3,a=t.extractPoints(e);let l=a.shape;const h=a.holes;!1===il.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===il.isClockWise(e)&&(h[t]=e.reverse())}const u=il.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];r.push(e.x,e.y,0),o.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],r=e[0]+n,o=e[1]+n,s=e[2]+n;i.push(r,o,s),c+=3}}super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],r=[],o=[],s=[];let a=0,c=0;if(!1===Array.isArray(t))n(t);else for(let e=0;e<t.length;e++)n(t[e]),this.addGroup(a,c,e),a+=c,c=0;this.setIndex(i),this.setAttribute("position",new y(r,3)),this.setAttribute("normal",new y(o,3)),this.setAttribute("uv",new y(s,2))}toJSON(){const t=E.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class ul extends E{constructor(t=1,e=8,n=6,i=0,r=2*Math.PI,o=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:s},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const a=Math.min(o+s,Math.PI);let c=0;const l=[],h=new fo,u=new fo,d=[],p=[],f=[],m=[];for(let d=0;d<=n;d++){const g=[],v=d/n;let y=0;0==d&&0==o?y=.5/e:d==n&&a==Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const a=n/e;h.x=-t*Math.cos(i+a*r)*Math.sin(o+v*s),h.y=t*Math.cos(o+v*s),h.z=t*Math.sin(i+a*r)*Math.sin(o+v*s),p.push(h.x,h.y,h.z),u.copy(h).normalize(),f.push(u.x,u.y,u.z),m.push(a+y,1-v),g.push(c++)}l.push(g)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=l[t][i+1],r=l[t][i],s=l[t+1][i],c=l[t+1][i+1];(0!==t||o>0)&&d.push(e,r,c),(t!==n-1||a<Math.PI)&&d.push(r,s,c)}this.setIndex(d),this.setAttribute("position",new y(p,3)),this.setAttribute("normal",new y(f,3)),this.setAttribute("uv",new y(m,2))}}class dl extends Kc{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}}class pl extends rl{constructor(t,e={}){const n=e.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new E;const i=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(i,e),this.type="TextGeometry"}}class fl extends E{constructor(t=1,e=.4,n=8,i=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],s=[],a=[],c=[],l=new fo,h=new fo,u=new fo;for(let o=0;o<=n;o++)for(let d=0;d<=i;d++){const p=d/i*r,f=o/n*Math.PI*2;h.x=(t+e*Math.cos(f))*Math.cos(p),h.y=(t+e*Math.cos(f))*Math.sin(p),h.z=e*Math.sin(f),s.push(h.x,h.y,h.z),l.x=t*Math.cos(p),l.y=t*Math.sin(p),u.subVectors(h,l).normalize(),a.push(u.x,u.y,u.z),c.push(d/i),c.push(o/n)}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*t+e-1,r=(i+1)*(t-1)+e-1,s=(i+1)*(t-1)+e,a=(i+1)*t+e;o.push(n,r,a),o.push(r,s,a)}this.setIndex(o),this.setAttribute("position",new y(s,3)),this.setAttribute("normal",new y(a,3)),this.setAttribute("uv",new y(c,2))}}class ml extends E{constructor(t=1,e=.4,n=64,i=8,r=2,o=3){function s(t,e,n,i,r){const o=Math.cos(t),s=Math.sin(t),a=n/e*t,c=Math.cos(a);r.x=i*(2+c)*.5*o,r.y=i*(2+c)*s*.5,r.z=i*Math.sin(a)*.5}super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],l=[],h=[],u=new fo,d=new fo,p=new fo,f=new fo,m=new fo,g=new fo,v=new fo;for(let a=0;a<=n;++a){const y=a/n*r*Math.PI*2;s(y,r,o,t,p),s(y+.01,r,o,t,f),g.subVectors(f,p),v.addVectors(f,p),m.crossVectors(g,v),v.crossVectors(m,g),m.normalize(),v.normalize();for(let t=0;t<=i;++t){const r=t/i*Math.PI*2,o=-e*Math.cos(r),s=e*Math.sin(r);u.x=p.x+(o*v.x+s*m.x),u.y=p.y+(o*v.y+s*m.y),u.z=p.z+(o*v.z+s*m.z),c.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),l.push(d.x,d.y,d.z),h.push(a/n),h.push(t/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),o=(i+1)*t+e,s=(i+1)*(t-1)+e;a.push(n,r,s),a.push(r,o,s)}this.setIndex(a),this.setAttribute("position",new y(c,3)),this.setAttribute("normal",new y(l,3)),this.setAttribute("uv",new y(h,2))}}class gl extends E{constructor(t,e=64,n=1,i=8,r=!1){function o(r){h=t.getPointAt(r/e,h);const o=s.normals[r],l=s.binormals[r];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,r=Math.sin(e),s=-Math.cos(e);c.x=s*o.x+r*l.x,c.y=s*o.y+r*l.y,c.z=s*o.z+r*l.z,c.normalize(),d.push(c.x,c.y,c.z),a.x=h.x+n*c.x,a.y=h.y+n*c.y,a.z=h.z+n*c.z,u.push(a.x,a.y,a.z)}}super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const s=t.computeFrenetFrames(e,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new fo,c=new fo,l=new io;let h=new fo;const u=[],d=[],p=[],f=[];!function(){for(let t=0;t<e;t++)o(t);o(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)l.x=t/e,l.y=n/i,p.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),o=(i+1)*t+e,s=(i+1)*(t-1)+e;f.push(n,r,s),f.push(r,o,s)}}()}(),this.setIndex(f),this.setAttribute("position",new y(u,3)),this.setAttribute("normal",new y(d,3)),this.setAttribute("uv",new y(p,2))}toJSON(){const t=E.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class vl extends E{constructor(t){if(super(),this.type="WireframeGeometry",!0===t.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const e=[],n=[0,0],i={},r=new fo;if(null!==t.index){const o=t.attributes.position,s=t.index;let a=t.groups;0===a.length&&(a=[{start:0,count:s.count,materialIndex:0}]);for(let t=0,e=a.length;t<e;++t){const e=a[t],r=e.start;for(let t=r,o=r+e.count;t<o;t+=3)for(let e=0;e<3;e++){const r=s.getX(t+e),o=s.getX(t+(e+1)%3);n[0]=Math.min(r,o),n[1]=Math.max(r,o);const a=n[0]+","+n[1];void 0===i[a]&&(i[a]={index1:n[0],index2:n[1]})}}for(const t in i){const n=i[t];r.fromBufferAttribute(o,n.index1),e.push(r.x,r.y,r.z),r.fromBufferAttribute(o,n.index2),e.push(r.x,r.y,r.z)}}else{const n=t.attributes.position;for(let t=0,i=n.count/3;t<i;t++)for(let i=0;i<3;i++){const o=3*t+i;r.fromBufferAttribute(n,o),e.push(r.x,r.y,r.z);const s=3*t+(i+1)%3;r.fromBufferAttribute(n,s),e.push(r.x,r.y,r.z)}}this.setAttribute("position",new y(e,3))}}var yl=Object.freeze({__proto__:null,BoxGeometry:la,BoxBufferGeometry:la,CircleGeometry:Xc,CircleBufferGeometry:Xc,ConeGeometry:Yc,ConeBufferGeometry:Yc,CylinderGeometry:qc,CylinderBufferGeometry:qc,DodecahedronGeometry:Zc,DodecahedronBufferGeometry:Zc,EdgesGeometry:el,ExtrudeGeometry:rl,ExtrudeBufferGeometry:rl,IcosahedronGeometry:sl,IcosahedronBufferGeometry:sl,LatheGeometry:al,LatheBufferGeometry:al,OctahedronGeometry:cl,OctahedronBufferGeometry:cl,ParametricGeometry:Re,ParametricBufferGeometry:Re,PlaneGeometry:_a,PlaneBufferGeometry:_a,PolyhedronGeometry:Kc,PolyhedronBufferGeometry:Kc,RingGeometry:ll,RingBufferGeometry:ll,ShapeGeometry:hl,ShapeBufferGeometry:hl,SphereGeometry:ul,SphereBufferGeometry:ul,TetrahedronGeometry:dl,TetrahedronBufferGeometry:dl,TextGeometry:pl,TextBufferGeometry:pl,TorusGeometry:fl,TorusBufferGeometry:fl,TorusKnotGeometry:ml,TorusKnotBufferGeometry:ml,TubeGeometry:gl,TubeBufferGeometry:gl,WireframeGeometry:vl});class xl extends o{constructor(t){super(),this.type="ShadowMaterial",this.color=new Is(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}xl.prototype.isShadowMaterial=!0;class _l extends A{constructor(t){super(t),this.type="RawShaderMaterial"}}_l.prototype.isRawShaderMaterial=!0,(Le.prototype=Object.create(o.prototype)).constructor=Le,Le.prototype.isMeshStandardMaterial=!0,Le.prototype.copy=function(t){return o.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this},(Ce.prototype=Object.create(Le.prototype)).constructor=Ce,Ce.prototype.isMeshPhysicalMaterial=!0,Ce.prototype.copy=function(t){return Le.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Is).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};class bl extends o{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Is(16777215),this.specular=new Is(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new io(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ni,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}bl.prototype.isMeshPhongMaterial=!0;class El extends o{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Is(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new io(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}El.prototype.isMeshToonMaterial=!0;class wl extends o{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new io(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}wl.prototype.isMeshNormalMaterial=!0;class Ml extends o{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Is(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Is(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ni,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}Ml.prototype.isMeshLambertMaterial=!0;class Tl extends o{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Is(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new io(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}Tl.prototype.isMeshMatcapMaterial=!0;class Sl extends Rc{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}Sl.prototype.isLineDashedMaterial=!0;var Al=Object.freeze({__proto__:null,ShadowMaterial:xl,SpriteMaterial:Qa,RawShaderMaterial:_l,ShaderMaterial:A,PointsMaterial:kc,MeshPhysicalMaterial:Ce,MeshStandardMaterial:Le,MeshPhongMaterial:bl,MeshToonMaterial:El,MeshNormalMaterial:wl,MeshLambertMaterial:Ml,MeshDepthMaterial:za,MeshDistanceMaterial:Ga,MeshBasicMaterial:Os,MeshMatcapMaterial:Tl,LineDashedMaterial:Sl,LineBasicMaterial:Rc,Material:o});const Rl={arraySlice:function(t,e,n){return Rl.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort(function(e,n){return t[e]-t[n]}),n},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let o=0,s=0;s!==i;++o){const i=n[o]*e;for(let n=0;n!==e;++n)r[s++]=t[i+n]}return r},flattenJSON:function(t,e,n,i){let r=1,o=t[0];for(;void 0!==o&&void 0===o[i];)o=t[r++];if(void 0===o)return;let s=o[i];if(void 0!==s)if(Array.isArray(s))do{void 0!==(s=o[i])&&(e.push(o.time),n.push.apply(n,s)),o=t[r++]}while(void 0!==o);else if(void 0!==s.toArray)do{void 0!==(s=o[i])&&(e.push(o.time),s.toArray(n,n.length)),o=t[r++]}while(void 0!==o);else do{void 0!==(s=o[i])&&(e.push(o.time),n.push(s)),o=t[r++]}while(void 0!==o)},subclip:function(t,e,n,i,r=30){const o=t.clone();o.name=e;const s=[];for(let t=0;t<o.tracks.length;++t){const e=o.tracks[t],a=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const o=e.times[t]*r;if(!(o<n||o>=i)){c.push(e.times[t]);for(let n=0;n<a;++n)l.push(e.values[t*a+n])}}0!==c.length&&(e.times=Rl.convertArray(c,e.times.constructor),e.values=Rl.convertArray(l,e.values.constructor),s.push(e))}o.tracks=s;let a=1/0;for(let t=0;t<o.tracks.length;++t)a>o.tracks[t].times[0]&&(a=o.tracks[t].times[0]);for(let t=0;t<o.tracks.length;++t)o.tracks[t].shift(-1*a);return o.resetDuration(),o},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,o=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if("bool"===r||"string"===r)continue;const s=t.tracks.find(function(t){return t.name===i.name&&t.ValueTypeName===r});if(void 0===s)continue;let a=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=c/3);let l=0;const h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);const u=i.times.length-1;let d;if(o<=i.times[0]){const t=a,e=c-a;d=Rl.arraySlice(i.values,t,e)}else if(o>=i.times[u]){const t=u*c+a,e=t+c-a;d=Rl.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=a,n=c-a;t.evaluate(o),d=Rl.arraySlice(t.resultBuffer,e,n)}if("quaternion"===r){(new po).fromArray(d).normalize().conjugate().toArray(d)}const p=s.times.length;for(let t=0;t<p;++t){const e=t*h+l;if("quaternion"===r)po.multiplyQuaternionsFlat(s.values,e,d,0,s.values,e);else{const t=h-2*l;for(let n=0;n<t;++n)s.values[e+n]-=d[n]}}}return t.blendMode=2501,t}};Object.assign(Pe.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let o;n:{i:if(!(t<i)){for(let o=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===o)break;if(r=i,i=e[++n],t<i)break e}o=e.length;break n}if(t>=r)break t;{const s=e[1];t<s&&(n=2,r=s);for(let o=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===o)break;if(i=r,r=e[--n-1],t>=r)break e}o=n,n=0}}for(;n<o;){const i=n+o>>>1;t<e[i]?o=i:n=i+1}if(i=e[n],void 0===(r=e[n-1]))return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Pe.prototype,{beforeStart_:Pe.prototype.copySampleValue_,afterEnd_:Pe.prototype.copySampleValue_}),Ne.prototype=Object.assign(Object.create(Pe.prototype),{constructor:Ne,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,o=t+1,s=i[r],a=i[o];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:r=t,s=2*e-n;break;case 2402:s=e+i[r=i.length-2]-i[r+1];break;default:r=t,s=n}if(void 0===a)switch(this.getSettings_().endingEnd){case 2401:o=t,a=2*n-e;break;case 2402:o=1,a=n+i[1]-i[0];break;default:o=t-1,a=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-s),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=o*l},interpolate_:function(t,e,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,c=a-s,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let t=0;t!==s;++t)r[t]=g*o[l+t]+v*o[c+t]+y*o[a+t]+x*o[h+t];return r}}),De.prototype=Object.assign(Object.create(Pe.prototype),{constructor:De,interpolate_:function(t,e,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,c=a-s,l=(n-e)/(i-e),h=1-l;for(let t=0;t!==s;++t)r[t]=o[c+t]*h+o[a+t]*l;return r}}),Ie.prototype=Object.assign(Object.create(Pe.prototype),{constructor:Ie,interpolate_:function(t){return this.copySampleValue_(t-1)}});class Ll{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Rl.convertArray(e,this.TimeBufferType),this.values=Rl.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Rl.convertArray(t.times,Array),values:Rl.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Ie(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new De(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Ne(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==o&&n[o]>e;)--o;if(++o,0!==r||o!==i){r>=o&&(r=(o=Math.max(o,1))-1);const t=this.getValueSize();this.times=Rl.arraySlice(n,r,o),this.values=Rl.arraySlice(this.values,r*t,o*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let e=0;e!==r;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==o&&o>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,o),t=!1;break}o=i}if(void 0!==i&&Rl.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=Rl.arraySlice(this.times),e=Rl.arraySlice(this.values),n=this.getValueSize(),i=2302===this.getInterpolation(),r=t.length-1;let o=1;for(let s=1;s<r;++s){let r=!1;const a=t[s];if(a!==t[s+1]&&(1!==s||a!==t[0]))if(i)r=!0;else{const t=s*n,i=t-n,o=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[o+s]){r=!0;break}}}if(r){if(s!==o){t[o]=t[s];const i=s*n,r=o*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++o}}if(r>0){t[o]=t[r];for(let t=r*n,i=o*n,s=0;s!==n;++s)e[i+s]=e[t+s];++o}return o!==t.length?(this.times=Rl.arraySlice(t,0,o),this.values=Rl.arraySlice(e,0,o*n)):(this.times=t,this.values=e),this}clone(){const t=Rl.arraySlice(this.times,0),e=Rl.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Ll.prototype.TimeBufferType=Float32Array,Ll.prototype.ValueBufferType=Float32Array,Ll.prototype.DefaultInterpolation=2301;class Cl extends Ll{}Cl.prototype.ValueTypeName="bool",Cl.prototype.ValueBufferType=Array,Cl.prototype.DefaultInterpolation=2300,Cl.prototype.InterpolantFactoryMethodLinear=void 0,Cl.prototype.InterpolantFactoryMethodSmooth=void 0;class Pl extends Ll{}Pl.prototype.ValueTypeName="color";class Nl extends Ll{}Nl.prototype.ValueTypeName="number",Oe.prototype=Object.assign(Object.create(Pe.prototype),{constructor:Oe,interpolate_:function(t,e,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=(n-e)/(i-e);let c=t*s;for(let t=c+s;c!==t;c+=4)po.slerpFlat(r,0,o,c-s,o,c,a);return r}});class Dl extends Ll{InterpolantFactoryMethodLinear(t){return new Oe(this.times,this.values,this.getValueSize(),t)}}Dl.prototype.ValueTypeName="quaternion",Dl.prototype.DefaultInterpolation=2301,Dl.prototype.InterpolantFactoryMethodSmooth=void 0;class Il extends Ll{}Il.prototype.ValueTypeName="string",Il.prototype.ValueBufferType=Array,Il.prototype.DefaultInterpolation=2300,Il.prototype.InterpolantFactoryMethodLinear=void 0,Il.prototype.InterpolantFactoryMethodSmooth=void 0;class Ol extends Ll{}Ol.prototype.ValueTypeName="vector";class Fl{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=no.generateUUID(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(Fe(n[t]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(Ll.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,o=[];for(let t=0;t<r;t++){let s=[],a=[];s.push((t+r-1)%r,t,(t+1)%r),a.push(0,1,0);const c=Rl.getKeyframeOrder(s);s=Rl.sortedArray(s,1,c),a=Rl.sortedArray(a,1,c),i||0!==s[0]||(s.push(r),a.push(a[0])),o.push(new Nl(".morphTargetInfluences["+e[t].name+"]",s,a).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],o=n.name.match(r);if(o&&o.length>1){const t=o[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const o=[];for(const t in i)o.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,r){if(0!==n.length){const o=[],s=[];Rl.flattenJSON(n,o,s,i),0!==o.length&&r.push(new t(e,o,s))}},i=[],r=t.name||"default",o=t.fps||30,s=t.blendMode;let a=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const r=c[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],o=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),o.push(i.morphTarget===n?1:0)}i.push(new Nl(".morphTargetInfluence["+n+"]",t,o))}a=t.length*(o||1)}else{const o=".bones["+e[t].name+"]";n(Ol,o+".position",r,"pos",i),n(Dl,o+".quaternion",r,"rot",i),n(Ol,o+".scale",r,"scl",i)}}if(0===i.length)return null;return new this(r,a,i,s)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const kl={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},Bl=new ke;Object.assign(Be.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Hl={};He.prototype=Object.assign(Object.create(Be.prototype),{constructor:He,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=kl.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout(function(){e&&e(o),r.manager.itemEnd(t)},0),o;if(void 0!==Hl[t])return void Hl[t].push({onLoad:e,onProgress:n,onError:i});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(s){const n=s[1],o=!!s[2];let a=s[3];a=decodeURIComponent(a),o&&(a=atob(a));try{let o;const s=(this.responseType||"").toLowerCase();switch(s){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);o="blob"===s?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;o=e.parseFromString(a,n);break;case"json":o=JSON.parse(a);break;default:o=a}setTimeout(function(){e&&e(o),r.manager.itemEnd(t)},0)}catch(e){setTimeout(function(){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)},0)}}else{Hl[t]=[],Hl[t].push({onLoad:e,onProgress:n,onError:i}),(a=new XMLHttpRequest).open("GET",t,!0),a.addEventListener("load",function(e){const n=this.response,i=Hl[t];if(delete Hl[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),kl.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}r.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}},!1),a.addEventListener("progress",function(e){const n=Hl[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}},!1),a.addEventListener("error",function(e){const n=Hl[t];delete Hl[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),a.addEventListener("abort",function(e){const n=Hl[t];delete Hl[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return r.manager.itemStart(t),a},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}});class Ul extends Be{constructor(t){super(t)}load(t,e,n,i){const r=this,o=new He(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=Fl.parse(t[n]);e.push(i)}return e}}Ue.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ue,load:function(t,e,n,i){function r(r){c.load(t[r],function(t){const n=o.parse(t,!0);s[r]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(l+=1)&&(1===n.mipmapCount&&(a.minFilter=wi),a.image=s,a.format=n.format,a.needsUpdate=!0,e&&e(a))},n,i)}const o=this,s=[],a=new Vc,c=new He(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(o.withCredentials);let l=0;if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)r(e);else c.load(t,function(t){const n=o.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=wi),a.format=n.format,a.needsUpdate=!0,e&&e(a)},n,i);return a}});class zl extends Be{constructor(t){super(t)}load(t,e,n,i){function r(){c.removeEventListener("load",r,!1),c.removeEventListener("error",o,!1),kl.add(t,this),e&&e(this),s.manager.itemEnd(t)}function o(e){c.removeEventListener("load",r,!1),c.removeEventListener("error",o,!1),i&&i(e),s.manager.itemError(t),s.manager.itemEnd(t)}void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,a=kl.get(t);if(void 0!==a)return s.manager.itemStart(t),setTimeout(function(){e&&e(a),s.manager.itemEnd(t)},0),a;const c=document.createElementNS("http://www.w3.org/1999/xhtml","img");return c.addEventListener("load",r,!1),c.addEventListener("error",o,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(t),c.src=t,c}}class Gl extends Be{constructor(t){super(t)}load(t,e,n,i){function r(n){s.load(t[n],function(t){o.images[n]=t,6===++a&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}const o=new fa,s=new zl(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;for(let e=0;e<t.length;++e)r(e);return o}}ze.prototype=Object.assign(Object.create(Be.prototype),{constructor:ze,load:function(t,e,n,i){const r=this,o=new ga,s=new He(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(r.withCredentials),s.load(t,function(t){const n=r.parse(t);n&&(void 0!==n.image?o.image=n.image:void 0!==n.data&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=void 0!==n.wrapS?n.wrapS:yi,o.wrapT=void 0!==n.wrapT?n.wrapT:yi,o.magFilter=void 0!==n.magFilter?n.magFilter:wi,o.minFilter=void 0!==n.minFilter?n.minFilter:wi,o.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(o.encoding=n.encoding),void 0!==n.flipY&&(o.flipY=n.flipY),void 0!==n.format&&(o.format=n.format),void 0!==n.type&&(o.type=n.type),void 0!==n.mipmaps&&(o.mipmaps=n.mipmaps,o.minFilter=Ti),1===n.mipmapCount&&(o.minFilter=wi),void 0!==n.generateMipmaps&&(o.generateMipmaps=n.generateMipmaps),o.needsUpdate=!0,e&&e(o,n))},n,i),o}}),Ge.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ge,load:function(t,e,n,i){const r=new co,o=new zl(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(n){r.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=i?Hi:Ui,r.needsUpdate=!0,void 0!==e&&e(r)},n,i),r}}),Object.assign(Ve.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)r+=(n=this.getPoint(o/t)).distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;o=e||t*n[r-1];let s,a=0,c=r-1;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),(s=n[i]-o)<0)a=i+1;else{if(!(s>0)){c=i;break}c=i-1}if(i=c,n[i]===o)return i/(r-1);const l=n[i];return(i+(o-l)/(n[i+1]-l))/(r-1)},getTangent:function(t,e){let n=t-1e-4,i=t+1e-4;n<0&&(n=0),i>1&&(i=1);const r=this.getPoint(n),o=this.getPoint(i),s=e||(r.isVector2?new io:new fo);return s.copy(o).sub(r).normalize(),s},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new fo,i=[],r=[],o=[],s=new fo,a=new Wo;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new fo),i[e].normalize()}r[0]=new fo,o[0]=new fo;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),o[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),o[e]=o[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(no.clamp(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(a.makeRotationAxis(s,t))}o[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(no.clamp(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(a.makeRotationAxis(i[n],e*n)),o[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:o}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});class Vl extends Ve{constructor(t=0,e=0,n=1,i=1,r=0,o=2*Math.PI,s=!1,a=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=s,this.aRotation=a}getPoint(t,e){const n=e||new io,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=o?0:i),!0!==this.aClockwise||o||(r===i?r=-i:r-=i);const s=this.aStartAngle+t*r;let a=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=a-this.aX,i=c-this.aY;a=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(a,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Vl.prototype.isEllipseCurve=!0;class Wl extends Vl{constructor(t,e,n,i,r,o){super(t,e,n,n,i,r,o),this.type="ArcCurve"}}Wl.prototype.isArcCurve=!0;const jl=new fo,Xl=new We,ql=new We,Yl=new We;class Kl extends Ve{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new fo){const n=e,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let s=Math.floor(o),a=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/r)+1)*r:0===a&&s===r-1&&(s=r-2,a=1);let c,l;this.closed||s>0?c=i[(s-1)%r]:(jl.subVectors(i[0],i[1]).add(i[0]),c=jl);const h=i[s%r],u=i[(s+1)%r];if(this.closed||s+2<r?l=i[(s+2)%r]:(jl.subVectors(i[r-1],i[r-2]).add(i[r-1]),l=jl),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(c.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(l),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Xl.initNonuniformCatmullRom(c.x,h.x,u.x,l.x,e,n,i),ql.initNonuniformCatmullRom(c.y,h.y,u.y,l.y,e,n,i),Yl.initNonuniformCatmullRom(c.z,h.z,u.z,l.z,e,n,i)}else"catmullrom"===this.curveType&&(Xl.initCatmullRom(c.x,h.x,u.x,l.x,this.tension),ql.initCatmullRom(c.y,h.y,u.y,l.y,this.tension),Yl.initCatmullRom(c.z,h.z,u.z,l.z,this.tension));return n.set(Xl.calc(a),ql.calc(a),Yl.calc(a)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new fo).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}Kl.prototype.isCatmullRomCurve3=!0;class Zl extends Ve{constructor(t=new io,e=new io,n=new io,i=new io){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new io){const n=e,i=this.v0,r=this.v1,o=this.v2,s=this.v3;return n.set(qe(t,i.x,r.x,o.x,s.x),qe(t,i.y,r.y,o.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Zl.prototype.isCubicBezierCurve=!0;class Jl extends Ve{constructor(t=new fo,e=new fo,n=new fo,i=new fo){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new fo){const n=e,i=this.v0,r=this.v1,o=this.v2,s=this.v3;return n.set(qe(t,i.x,r.x,o.x,s.x),qe(t,i.y,r.y,o.y,s.y),qe(t,i.z,r.z,o.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Jl.prototype.isCubicBezierCurve3=!0;class Ql extends Ve{constructor(t=new io,e=new io){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new io){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new io;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ql.prototype.isLineCurve=!0;class $l extends Ve{constructor(t=new fo,e=new fo){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new fo){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class th extends Ve{constructor(t=new io,e=new io,n=new io){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new io){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Xe(t,i.x,r.x,o.x),Xe(t,i.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}th.prototype.isQuadraticBezierCurve=!0;class eh extends Ve{constructor(t=new fo,e=new fo,n=new fo){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new fo){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(Xe(t,i.x,r.x,o.x),Xe(t,i.y,r.y,o.y),Xe(t,i.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}eh.prototype.isQuadraticBezierCurve3=!0;class nh extends Ve{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new io){const n=e,i=this.points,r=(i.length-1)*t,o=Math.floor(r),s=r-o,a=i[0===o?o:o-1],c=i[o],l=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(je(s,a.x,c.x,l.x,h.x),je(s,a.y,c.y,l.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new io).fromArray(n))}return this}}nh.prototype.isSplineCurve=!0;var ih=Object.freeze({__proto__:null,ArcCurve:Wl,CatmullRomCurve3:Kl,CubicBezierCurve:Zl,CubicBezierCurve3:Jl,EllipseCurve:Vl,LineCurve:Ql,LineCurve3:$l,QuadraticBezierCurve:th,QuadraticBezierCurve3:eh,SplineCurve:nh});class rh extends Ve{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Ql(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,r=this.curves[i],o=r.getLength(),s=0===o?0:1-t/o;return r.getPointAt(s)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],s=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,a=o.getPoints(s);for(let t=0;t<a.length;t++){const i=a[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new ih[n.type]).fromJSON(n))}return this}}class oh extends rh{constructor(t){super(),this.type="Path",this.currentPoint=new io,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Ql(this.currentPoint.clone(),new io(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new th(this.currentPoint.clone(),new io(t,e),new io(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,o){const s=new Zl(this.currentPoint.clone(),new io(t,e),new io(n,i),new io(r,o));return this.curves.push(s),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new nh(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,o){const s=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+s,e+a,n,i,r,o),this}absarc(t,e,n,i,r,o){return this.absellipse(t,e,n,n,i,r,o),this}ellipse(t,e,n,i,r,o,s,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,r,o,s,a),this}absellipse(t,e,n,i,r,o,s,a){const c=new Vl(t,e,n,i,r,o,s,a);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class sh extends oh{constructor(t){super(t),this.uuid=no.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new oh).fromJSON(n))}return this}}class ah extends r{constructor(t,e=1){super(),this.type="Light",this.color=new Is(t),this.intensity=e}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}ah.prototype.isLight=!0;class ch extends ah{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(r.DefaultUp),this.updateMatrix(),this.groundColor=new Is(e)}copy(t){return ah.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}ch.prototype.isHemisphereLight=!0;const lh=new Wo,hh=new fo,uh=new fo;class dh{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new io(512,512),this.map=null,this.mapPass=null,this.matrix=new Wo,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new xa,this._frameExtents=new io(1,1),this._viewportCount=1,this._viewports=[new lo(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;hh.setFromMatrixPosition(t.matrixWorld),e.position.copy(hh),uh.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(uh),e.updateMatrixWorld(),lh.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(lh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class ph extends dh{constructor(){super(new L(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*no.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}ph.prototype.isSpotLightShadow=!0;class fh extends ah{constructor(t,e,n=0,i=Math.PI/3,o=0,s=1){super(t,e),this.type="SpotLight",this.position.copy(r.DefaultUp),this.updateMatrix(),this.target=new r,this.distance=n,this.angle=i,this.penumbra=o,this.decay=s,this.shadow=new ph}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}fh.prototype.isSpotLight=!0;const mh=new Wo,gh=new fo,vh=new fo;class yh extends dh{constructor(){super(new L(90,1,.5,500)),this._frameExtents=new io(4,2),this._viewportCount=6,this._viewports=[new lo(2,1,1,1),new lo(0,1,1,1),new lo(3,1,1,1),new lo(1,1,1,1),new lo(3,0,1,1),new lo(1,0,1,1)],this._cubeDirections=[new fo(1,0,0),new fo(-1,0,0),new fo(0,0,1),new fo(0,0,-1),new fo(0,1,0),new fo(0,-1,0)],this._cubeUps=[new fo(0,1,0),new fo(0,1,0),new fo(0,1,0),new fo(0,1,0),new fo(0,0,1),new fo(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),gh.setFromMatrixPosition(t.matrixWorld),n.position.copy(gh),vh.copy(n.position),vh.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(vh),n.updateMatrixWorld(),i.makeTranslation(-gh.x,-gh.y,-gh.z),mh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(mh)}}yh.prototype.isPointLightShadow=!0;class xh extends ah{constructor(t,e,n=0,i=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new yh}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}xh.prototype.isPointLight=!0;class _h extends R{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,s=i+e,a=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o=(r+=t*this.view.offsetX)+t*this.view.width,a=(s-=e*this.view.offsetY)-e*this.view.height}this.projectionMatrix.makeOrthographic(r,o,s,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=r.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}_h.prototype.isOrthographicCamera=!0;class bh extends dh{constructor(){super(new _h(-5,5,5,-5,.5,500))}}bh.prototype.isDirectionalLightShadow=!0;class Eh extends ah{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(r.DefaultUp),this.updateMatrix(),this.target=new r,this.shadow=new bh}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Eh.prototype.isDirectionalLight=!0;class wh extends ah{constructor(t,e){super(t,e),this.type="AmbientLight"}}wh.prototype.isAmbientLight=!0;class Mh extends ah{constructor(t,e,n=10,i=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=i}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Mh.prototype.isRectAreaLight=!0;class Th{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new fo)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*r),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],n*i*1.092548),e.addScaledVector(o[5],i*r*1.092548),e.addScaledVector(o[6],.315392*(3*r*r-1)),e.addScaledVector(o[7],n*r*1.092548),e.addScaledVector(o[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],1.023328*i),e.addScaledVector(o[2],1.023328*r),e.addScaledVector(o[3],1.023328*n),e.addScaledVector(o[4],.858086*n*i),e.addScaledVector(o[5],.858086*i*r),e.addScaledVector(o[6],.743125*r*r-.247708),e.addScaledVector(o[7],.858086*n*r),e.addScaledVector(o[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}Th.prototype.isSphericalHarmonics3=!0;class Sh extends ah{constructor(t=new Th,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Sh.prototype.isLightProbe=!0;class Ah extends Be{constructor(t){super(t),this.textures={}}load(t,e,n,i){const r=this,o=new He(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},n,i)}parse(t){function e(t){return void 0===n[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),n[t]}const n=this.textures,i=new Al[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=(new Is).setHex(t.sheen)),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(i.skinning=t.skinning),void 0!==t.morphTargets&&(i.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(i.morphNormals=t.morphNormals),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(i.vertexTangents=t.vertexTangents),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const n in t.uniforms){const r=t.uniforms[n];switch(i.uniforms[n]={},r.type){case"t":i.uniforms[n].value=e(r.value);break;case"c":i.uniforms[n].value=(new Is).setHex(r.value);break;case"v2":i.uniforms[n].value=(new io).fromArray(r.value);break;case"v3":i.uniforms[n].value=(new fo).fromArray(r.value);break;case"v4":i.uniforms[n].value=(new lo).fromArray(r.value);break;case"m3":i.uniforms[n].value=(new ro).fromArray(r.value);break;case"m4":i.uniforms[n].value=(new Wo).fromArray(r.value);break;default:i.uniforms[n].value=r.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=e(t.map)),void 0!==t.matcap&&(i.matcap=e(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new io).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=e(t.specularMap)),void 0!==t.envMap&&(i.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new io).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.transmissionMap&&(i.transmissionMap=e(t.transmissionMap)),i}setTextures(t){return this.textures=t,this}}const Rh={decodeText:function(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}};Ye.prototype=Object.assign(Object.create(E.prototype),{constructor:Ye,isInstancedBufferGeometry:!0,copy:function(t){return E.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=E.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),Ke.prototype=Object.assign(Object.create(l.prototype),{constructor:Ke,isInstancedBufferAttribute:!0,copy:function(t){return l.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=l.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}});class Lh extends Be{constructor(t){super(t)}load(t,e,n,i){const r=this,o=new He(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},n,i)}parse(t){function e(t,e){if(void 0!==n[e])return n[e];const r=t.interleavedBuffers[e],o=function(t,e){if(void 0!==i[e])return i[e];const n=t.arrayBuffers[e],r=new Uint32Array(n).buffer;return i[e]=r,r}(t,r.buffer),s=new $t(b(r.type,o),r.stride);return s.uuid=r.uuid,n[e]=s,s}const n={},i={},r=t.isInstancedBufferGeometry?new Ye:new E,o=t.data.index;if(void 0!==o){const t=b(o.type,o.array);r.setIndex(new l(t,1))}const s=t.data.attributes;for(const n in s){const i=s[n];let o;if(i.isInterleavedBufferAttribute){o=new te(e(t.data,i.data),i.itemSize,i.offset,i.normalized)}else{const t=b(i.type,i.array);o=new(i.isInstancedBufferAttribute?Ke:l)(t,i.itemSize,i.normalized)}void 0!==i.name&&(o.name=i.name),void 0!==i.usage&&o.setUsage(i.usage),void 0!==i.updateRange&&(o.updateRange.offset=i.updateRange.offset,o.updateRange.count=i.updateRange.count),r.setAttribute(n,o)}const a=t.data.morphAttributes;if(a)for(const n in a){const i=a[n],o=[];for(let n=0,r=i.length;n<r;n++){const r=i[n];let s;if(r.isInterleavedBufferAttribute){s=new te(e(t.data,r.data),r.itemSize,r.offset,r.normalized)}else{s=new l(b(r.type,r.array),r.itemSize,r.normalized)}void 0!==r.name&&(s.name=r.name),o.push(s)}r.morphAttributes[n]=o}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(let t=0,e=c.length;t!==e;++t){const e=c[t];r.addGroup(e.start,e.count,e.materialIndex)}const h=t.data.boundingSphere;if(void 0!==h){const t=new fo;void 0!==h.center&&t.fromArray(h.center),r.boundingSphere=new Oo(t,h.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}}class Ch extends Be{constructor(t){super(t)}load(t,e,n,i){const r=this,o=""===this.path?Rh.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||o;const s=new He(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,function(n){let o=null;try{o=JSON.parse(n)}catch(e){return void 0!==i&&i(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const s=o.metadata;void 0!==s&&void 0!==s.type&&"geometry"!==s.type.toLowerCase()?r.parse(o,e):console.error("THREE.ObjectLoader: Can't load "+t)},n,i)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),o=this.parseImages(t.images,function(){void 0!==e&&e(c)}),s=this.parseTextures(t.textures,o),a=this.parseMaterials(t.materials,s),c=this.parseObject(t.object,r,a,n),l=this.parseSkeletons(t.skeletons,c);if(this.bindSkeletons(c,l),void 0!==e){let t=!1;for(const e in o)if(o[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(c)}return c}parseShapes(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new sh).fromJSON(t[n]);e[i.uuid]=i}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(t){t.isBone&&(i[t.uuid]=t)}),void 0!==t)for(let e=0,r=t.length;e<r;e++){const r=(new wc).fromJSON(t[e],i);n[r.uuid]=r}return n}parseGeometries(t,e){const n={};let i;if(void 0!==t){const r=new Lh;for(let o=0,s=t.length;o<s;o++){let s;const a=t[o];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new yl[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":s=new yl[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new yl[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new yl[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new yl[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new yl[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new yl[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new yl[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new yl[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new yl[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":s=new yl[a.type]((new ih[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":s=new yl[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new yl[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];i.push(n)}s=new yl[a.type](i,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];i.push(n)}const t=a.options.extrudePath;void 0!==t&&(a.options.extrudePath=(new ih[t.type]).fromJSON(t)),s=new yl[a.type](i,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":s=r.parse(a);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+a.type+'"');continue}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),!0===s.isBufferGeometry&&void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},i={};if(void 0!==t){const r=new Ah;r.setTextures(e);for(let e=0,o=t.length;e<o;e++){const o=t[e];if("MultiMaterial"===o.type){const t=[];for(let e=0;e<o.materials.length;e++){const i=o.materials[e];void 0===n[i.uuid]&&(n[i.uuid]=r.parse(i)),t.push(n[i.uuid])}i[o.uuid]=t}else void 0===n[o.uuid]&&(n[o.uuid]=r.parse(o)),i[o.uuid]=n[o.uuid]}}return i}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const i=t[n],r=Fl.parse(i);e[r.uuid]=r}return e}parseImages(t,e){function n(t){if("string"==typeof t){const e=t;return function(t){return i.manager.itemStart(t),o.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemError(t),i.manager.itemEnd(t)})}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:i.resourcePath+e)}return t.data?{data:b(t.type,t.data),width:t.width,height:t.height}:null}const i=this,r={};let o;if(void 0!==t&&t.length>0){const i=new ke(e);(o=new zl(i)).setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],o=i.url;if(Array.isArray(o)){r[i.uuid]=[];for(let t=0,e=o.length;t<e;t++){const e=n(o[t]);null!==e&&(e instanceof HTMLImageElement?r[i.uuid].push(e):r[i.uuid].push(new ga(e.data,e.width,e.height)))}}else{const t=n(i.url);null!==t&&(r[i.uuid]=t)}}}return r}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const i={};if(void 0!==t)for(let r=0,o=t.length;r<o;r++){const o=t[r];void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===e[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);let s;const a=e[o.image];Array.isArray(a)?(s=new fa(a),6===a.length&&(s.needsUpdate=!0)):(s=a&&a.data?new ga(a.data,a.width,a.height):new co(a),a&&(s.needsUpdate=!0)),s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),void 0!==o.mapping&&(s.mapping=n(o.mapping,Ph)),void 0!==o.offset&&s.offset.fromArray(o.offset),void 0!==o.repeat&&s.repeat.fromArray(o.repeat),void 0!==o.center&&s.center.fromArray(o.center),void 0!==o.rotation&&(s.rotation=o.rotation),void 0!==o.wrap&&(s.wrapS=n(o.wrap[0],Nh),s.wrapT=n(o.wrap[1],Nh)),void 0!==o.format&&(s.format=o.format),void 0!==o.type&&(s.type=o.type),void 0!==o.encoding&&(s.encoding=o.encoding),void 0!==o.minFilter&&(s.minFilter=n(o.minFilter,Dh)),void 0!==o.magFilter&&(s.magFilter=n(o.magFilter,Dh)),void 0!==o.anisotropy&&(s.anisotropy=o.anisotropy),void 0!==o.flipY&&(s.flipY=o.flipY),void 0!==o.premultiplyAlpha&&(s.premultiplyAlpha=o.premultiplyAlpha),void 0!==o.unpackAlignment&&(s.unpackAlignment=o.unpackAlignment),i[o.uuid]=s}return i}parseObject(t,e,n,i){function o(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function s(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];void 0===n[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),e.push(n[r])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}let a,c,h;switch(t.type){case"Scene":a=new Za,void 0!==t.background&&Number.isInteger(t.background)&&(a.background=new Is(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?a.fog=new Ka(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(a.fog=new Ya(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":a=new L(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(a.focus=t.focus),void 0!==t.zoom&&(a.zoom=t.zoom),void 0!==t.filmGauge&&(a.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(a.filmOffset=t.filmOffset),void 0!==t.view&&(a.view=Object.assign({},t.view));break;case"OrthographicCamera":a=new _h(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(a.zoom=t.zoom),void 0!==t.view&&(a.view=Object.assign({},t.view));break;case"AmbientLight":a=new wh(t.color,t.intensity);break;case"DirectionalLight":a=new Eh(t.color,t.intensity);break;case"PointLight":a=new xh(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":a=new Mh(t.color,t.intensity,t.width,t.height);break;case"SpotLight":a=new fh(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":a=new ch(t.color,t.groundColor,t.intensity);break;case"LightProbe":a=(new Sh).fromJSON(t);break;case"SkinnedMesh":a=new ne(c=o(t.geometry),h=s(t.material)),void 0!==t.bindMode&&(a.bindMode=t.bindMode),void 0!==t.bindMatrix&&a.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(a.skeleton=t.skeleton);break;case"Mesh":a=new w(c=o(t.geometry),h=s(t.material));break;case"InstancedMesh":c=o(t.geometry),h=s(t.material);const e=t.count,n=t.instanceMatrix,i=t.instanceColor;(a=new re(c,h,e)).instanceMatrix=new l(new Float32Array(n.array),16),void 0!==i&&(a.instanceColor=new l(new Float32Array(i.array),i.itemSize));break;case"LOD":a=new mc;break;case"Line":a=new oe(o(t.geometry),s(t.material));break;case"LineLoop":a=new Fc(o(t.geometry),s(t.material));break;case"LineSegments":a=new se(o(t.geometry),s(t.material));break;case"PointCloud":case"Points":a=new ae(o(t.geometry),s(t.material));break;case"Sprite":a=new dc(s(t.material));break;case"Group":a=new Xa;break;case"Bone":a=new ie;break;default:a=new r}if(a.uuid=t.uuid,void 0!==t.name&&(a.name=t.name),void 0!==t.matrix?(a.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(a.matrixAutoUpdate=t.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==t.position&&a.position.fromArray(t.position),void 0!==t.rotation&&a.rotation.fromArray(t.rotation),void 0!==t.quaternion&&a.quaternion.fromArray(t.quaternion),void 0!==t.scale&&a.scale.fromArray(t.scale)),void 0!==t.castShadow&&(a.castShadow=t.castShadow),void 0!==t.receiveShadow&&(a.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(a.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(a.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(a.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&a.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(a.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(a.visible=t.visible),void 0!==t.frustumCulled&&(a.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(a.renderOrder=t.renderOrder),void 0!==t.userData&&(a.userData=t.userData),void 0!==t.layers&&(a.layers.mask=t.layers),void 0!==t.children){const r=t.children;for(let t=0;t<r.length;t++)a.add(this.parseObject(r[t],e,n,i))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];a.animations.push(i[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(a.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=a.getObjectByProperty("uuid",n.object);void 0!==i&&a.addLevel(i,n.distance)}}return a}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse(function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}})}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const Ph={UVMapping:300,CubeReflectionMapping:ui,CubeRefractionMapping:di,EquirectangularReflectionMapping:pi,EquirectangularRefractionMapping:fi,CubeUVReflectionMapping:mi,CubeUVRefractionMapping:gi},Nh={RepeatWrapping:vi,ClampToEdgeWrapping:yi,MirroredRepeatWrapping:xi},Dh={NearestFilter:_i,NearestMipmapNearestFilter:bi,NearestMipmapLinearFilter:Ei,LinearFilter:wi,LinearMipmapNearestFilter:Mi,LinearMipmapLinearFilter:Ti};Ze.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ze,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=kl.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout(function(){e&&e(o),r.manager.itemEnd(t)},0),o;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(n){kl.add(t,n),e&&e(n),r.manager.itemEnd(t)}).catch(function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}),r.manager.itemStart(t)}});class Ih{constructor(){this.type="ShapePath",this.color=new Is,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new oh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,o){return this.currentPath.bezierCurveTo(t,e,n,i,r,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new sh;r.curves=i.curves,e.push(r)}return e}function i(t,e){const n=e.length;let i=!1;for(let r=n-1,o=0;o<n;r=o++){let n=e[r],s=e[o],a=s.x-n.x,c=s.y-n.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(n=e[o],a=-a,s=e[r],c=-c),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=c*(t.x-n.x)-a*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return i}const r=il.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return n(o);let s,a,c;const l=[];if(1===o.length)return a=o[0],c=new sh,c.curves=a.curves,l.push(c),l;let h=!r(o[0].getPoints());h=t?!h:h;const u=[],d=[];let p,f=[],m=0;d[m]=void 0,f[m]=[];for(let e=0,n=o.length;e<n;e++)s=r(p=(a=o[e]).getPoints()),(s=t?!s:s)?(!h&&d[m]&&m++,d[m]={s:new sh,p:p},d[m].s.curves=a.curves,h&&m++,f[m]=[]):f[m].push({h:a,p:p[0]});if(!d[0])return n(o);if(d.length>1){let t=!1;const e=[];for(let t=0,e=d.length;t<e;t++)u[t]=[];for(let n=0,r=d.length;n<r;n++){const r=f[n];for(let o=0;o<r.length;o++){const s=r[o];let a=!0;for(let r=0;r<d.length;r++)i(s.p,d[r].p)&&(n!==r&&e.push({froms:n,tos:r,hole:o}),a?(a=!1,u[r].push(s)):t=!0);a&&u[n].push(s)}}e.length>0&&(t||(f=u))}let g;for(let t=0,e=d.length;t<e;t++){c=d[t].s,l.push(c);for(let e=0,n=(g=f[t]).length;e<n;e++)c.holes.push(g[e].h)}return l}}class Oh{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],i=Je(t,e,this.data);for(let t=0,e=i.length;t<e;t++)Array.prototype.push.apply(n,i[t].toShapes());return n}}Oh.prototype.isFont=!0;class Fh extends Be{constructor(t){super(t)}load(t,e,n,i){const r=this,o=new He(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const i=r.parse(n);e&&e(i)},n,i)}parse(t){return new Oh(t)}}let kh;const Bh={getContext:function(){return void 0===kh&&(kh=new(window.AudioContext||window.webkitAudioContext)),kh},setContext:function(t){kh=t}};class Hh extends Be{constructor(t){super(t)}load(t,e,n,i){const r=this,o=new He(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(n){try{const o=n.slice(0);Bh.getContext().decodeAudioData(o,function(t){e(t)})}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},n,i)}}class Uh extends Sh{constructor(t,e,n=1){super(void 0,n);const i=(new Is).set(t),r=(new Is).set(e),o=new fo(i.r,i.g,i.b),s=new fo(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(s).multiplyScalar(a),this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(c)}}Uh.prototype.isHemisphereLightProbe=!0;class zh extends Sh{constructor(t,e=1){super(void 0,e);const n=(new Is).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}zh.prototype.isAmbientLightProbe=!0;const Gh=new Wo,Vh=new Wo;class Wh{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new L,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new L,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),i=e.eyeSep/2,r=i*e.near/e.focus,o=e.near*Math.tan(no.DEG2RAD*e.fov*.5)/e.zoom;let s,a;Vh.elements[12]=-i,Gh.elements[12]=i,s=-o*e.aspect+r,a=o*e.aspect+r,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(n),s=-o*e.aspect-r,a=o*e.aspect-r,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Vh),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Gh)}}class jh{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Qe(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Qe();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const Xh=new fo,qh=new po,Yh=new fo,Kh=new fo;class Zh extends r{constructor(){super(),this.type="AudioListener",this.context=Bh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new jh}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Xh,qh,Yh),Kh.set(0,0,-1).applyQuaternion(qh),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Xh.x,t),e.positionY.linearRampToValueAtTime(Xh.y,t),e.positionZ.linearRampToValueAtTime(Xh.z,t),e.forwardX.linearRampToValueAtTime(Kh.x,t),e.forwardY.linearRampToValueAtTime(Kh.y,t),e.forwardZ.linearRampToValueAtTime(Kh.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(Xh.x,Xh.y,Xh.z),e.setOrientation(Kh.x,Kh.y,Kh.z,n.x,n.y,n.z)}}class Jh extends r{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const Qh=new fo,$h=new po,tu=new fo,eu=new fo;class nu extends Jh{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Qh,$h,tu),eu.set(0,0,1).applyQuaternion($h);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Qh.x,t),e.positionY.linearRampToValueAtTime(Qh.y,t),e.positionZ.linearRampToValueAtTime(Qh.z,t),e.orientationX.linearRampToValueAtTime(eu.x,t),e.orientationY.linearRampToValueAtTime(eu.y,t),e.orientationZ.linearRampToValueAtTime(eu.z,t)}else e.setPosition(Qh.x,Qh.y,Qh.z),e.setOrientation(eu.x,eu.y,eu.z)}}class iu{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class ru{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,r,o;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let o=this.cumulativeWeight;if(0===o){for(let t=0;t!==i;++t)n[r+t]=n[t];o=e}else{const t=e/(o+=e);this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=o}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){s.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){po.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const o=this._workIndex*r;po.multiplyQuaternionsFlat(t,o,t,e,t,n),po.slerpFlat(t,e,t,e,t,o,i)}_lerp(t,e,n,i,r){const o=1-i;for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]*o+t[n+s]*i}}_lerpAdditive(t,e,n,i,r){for(let o=0;o!==r;++o){const r=e+o;t[r]=t[r]+t[n+o]*i}}}const ou=new RegExp("[\\[\\]\\.:\\/]","g"),su="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",au=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),cu=/(WCOD+)?/.source.replace("WCOD",su),lu=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),hu=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),uu=new RegExp("^"+au+cu+lu+hu+"$"),du=["material","materials","bones"];Object.assign($e.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(tn,{Composite:$e,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new tn.Composite(t,e,n):new tn(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(ou,"")},parseTrackName:function(t){const e=uu.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==du.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const o=n(r.children);if(o)return o}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(tn.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=tn.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const o=t[i];if(void 0===o){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}a=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(a=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(tn.prototype,{_getValue_unbound:tn.prototype.getValue,_setValue_unbound:tn.prototype.setValue});class pu{constructor(){this.uuid=no.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let s=void 0,a=t.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const h=arguments[l],u=h.uuid;let d=e[u];if(void 0===d){d=a++,e[u]=d,t.push(h);for(let t=0,e=o;t!==e;++t)r[t].push(new tn(h,n[t],i[t]))}else if(d<c){s=t[d];const a=--c,l=t[a];e[l.uuid]=d,t[d]=l,e[u]=a,t[a]=h;for(let t=0,e=o;t!==e;++t){const e=r[t],o=e[a];let s=e[d];e[d]=o,void 0===s&&(s=new tn(h,n[t],i[t])),e[a]=s}}else t[d]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o],a=s.uuid,c=e[a];if(void 0!==c&&c>=r){const o=r++,l=t[o];e[l.uuid]=c,t[c]=l,e[a]=o,t[o]=s;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[o],r=e[c];e[c]=i,e[o]=r}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=t.length;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s].uuid,c=e[a];if(void 0!==c)if(delete e[a],c<r){const s=--r,a=t[s],l=--o,h=t[l];e[a.uuid]=c,t[c]=a,e[h.uuid]=s,t[s]=h,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[s],r=e[l];e[c]=i,e[s]=r,e.pop()}}else{const r=--o,s=t[r];r>0&&(e[s.uuid]=c),t[c]=s,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[c]=e[r],e.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(void 0!==i)return r[i];const o=this._paths,s=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[t]=i,o.push(t),s.push(e),r.push(h);for(let n=l,i=a.length;n!==i;++n){const i=a[n];h[n]=new tn(i,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,r=this._parsedPaths,o=this._bindings,s=o.length-1,a=o[s];e[t[s]]=n,o[n]=a,o.pop(),r[n]=r[s],r.pop(),i[n]=i[s],i.pop()}}}pu.prototype.isAnimationObjectGroup=!0;class fu{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,o=r.length,s=new Array(o),a={endingStart:2400,endingEnd:2400};for(let t=0;t!==o;++t){const e=r[t].createInterpolant(null);s[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,o=n/i;t.warp(1,r,e),this.warp(o,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,o=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,c=s.sampleValues;return a[0]=r,a[1]=r+n,c[0]=t/o,c[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const o=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(o),e[n].accumulateAdditive(s);break;case 2500:default:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(o),e[n].accumulate(i,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const o=2202===n;if(0===t)return-1===r?i:o&&1==(1&r)?e-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(o&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=2401,i.endingEnd=2401):(i.endingStart=t?this.zeroSlopeAtStart?2401:2400:2402,i.endingEnd=e?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;null===o&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const s=o.parameterPositions,a=o.sampleValues;return s[0]=r,a[0]=e,s[1]=r+t,a[1]=n,this}}class mu extends e{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,o=t._propertyBindings,s=t._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];void 0===l&&(l={},c[a]=l);for(let t=0;t!==r;++t){const r=i[t],c=r.name;let h=l[c];if(void 0!==h)o[t]=h;else{if(void 0!==(h=o[t])){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,a,c));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;++(h=new ru(tn.create(n,c,i),r.ValueTypeName,r.getValueSize())).referenceCount,this._addInactiveBinding(h,a,c),o[t]=h}s[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let o=r[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=o;else{const e=o.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),o.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,o=this._actionsByClip,s=o[r],a=s.knownActions,c=a[a.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),t._byClipCacheIndex=null;delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete o[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[e];void 0===o&&(o={},i[e]=o),o[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,s=o[i],a=e[e.length-1],c=t._cacheIndex;a._cacheIndex=c,e[c]=a,e.pop(),delete s[r],0===Object.keys(s).length&&delete o[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&((n=new De(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let o="string"==typeof t?Fl.findByName(i,t):t;const s=null!==o?o.uuid:t,a=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==o?o.blendMode:2500),void 0!==a){const t=a.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;c=a.knownActions[0],null===o&&(o=c._clip)}if(null===o)return null;const l=new fu(this,o,e,n);return this._bindAction(l,c),this._addInactiveAction(l,s,r),l}existingAction(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?Fl.findByName(n,t):t,o=r?r.uuid:t,s=this._actionsByClip[o];return void 0!==s?s.actionByRoot[i]||null:null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),o=this._accuIndex^=1;for(let s=0;s!==n;++s){e[s]._update(i,t,r,o)}const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(o);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,o=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,o._cacheIndex=r,e[r]=o,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}mu.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class gu{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new gu(void 0===this.value.clone?this.value:this.value.clone())}}en.prototype=Object.assign(Object.create($t.prototype),{constructor:en,isInstancedInterleavedBuffer:!0,copy:function(t){return $t.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=$t.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=$t.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(nn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(nn.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(rn.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e=!1,n=[]){return sn(t,this,n,e),n.sort(on),n},intersectObjects:function(t,e=!1,n=[]){for(let i=0,r=t.length;i<r;i++)sn(t[i],this,n,e);return n.sort(on),n}});class vu{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(no.clamp(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class yu{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const xu=new io;class _u{constructor(t=new io(1/0,1/0),e=new io(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=xu.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new io),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new io),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new io),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new io),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return xu.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}_u.prototype.isBox2=!0;const bu=new fo,Eu=new fo;class wu{constructor(t=new fo,e=new fo){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new fo),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new fo),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new fo),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){bu.subVectors(t,this.start),Eu.subVectors(this.end,this.start);const n=Eu.dot(Eu);let i=Eu.dot(bu)/n;return e&&(i=no.clamp(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new fo),this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}(an.prototype=Object.create(r.prototype)).constructor=an,an.prototype.isImmediateRenderObject=!0;const Mu=new fo;class Tu extends r{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new E,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1;t<32;t++,e++){const n=t/32*Math.PI*2,r=e/32*Math.PI*2;i.push(Math.cos(n),Math.sin(n),1,Math.cos(r),Math.sin(r),1)}n.setAttribute("position",new y(i,3));const r=new Rc({fog:!1,toneMapped:!1});this.cone=new se(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Mu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Mu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Su=new fo,Au=new Wo,Ru=new Wo;class Lu extends se{constructor(t){const e=cn(t),n=new E,i=[],r=[],o=new Is(0,0,1),s=new Is(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new y(i,3)),n.setAttribute("color",new y(r,3));super(n,new Rc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Ru.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(Au.multiplyMatrices(Ru,r.matrixWorld),Su.setFromMatrixPosition(Au),i.setXYZ(n,Su.x,Su.y,Su.z),Au.multiplyMatrices(Ru,r.parent.matrixWorld),Su.setFromMatrixPosition(Au),i.setXYZ(n+1,Su.x,Su.y,Su.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}class Cu extends w{constructor(t,e,n){super(new ul(e,4,2),new Os({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Pu=new fo,Nu=new Is,Du=new Is;class Iu extends r{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new cl(e);i.rotateY(.5*Math.PI),this.material=new Os({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(3*r.count);i.setAttribute("color",new l(o,3)),this.add(new w(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Nu.copy(this.light.color),Du.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?Nu:Du;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}t.lookAt(Pu.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Ou extends se{constructor(t=10,e=10,n=4473924,i=8947848){n=new Is(n),i=new Is(i);const r=e/2,o=t/e,s=t/2,a=[],c=[];for(let t=0,l=0,h=-s;t<=e;t++,h+=o){a.push(-s,0,h,s,0,h),a.push(h,0,-s,h,0,s);const e=t===r?n:i;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new E;l.setAttribute("position",new y(a,3)),l.setAttribute("color",new y(c,3));super(l,new Rc({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class Fu extends se{constructor(t=10,e=16,n=8,i=64,r=4473924,o=8947848){r=new Is(r),o=new Is(o);const s=[],a=[];for(let n=0;n<=e;n++){const i=n/e*(2*Math.PI),c=Math.sin(i)*t,l=Math.cos(i)*t;s.push(0,0,0),s.push(c,0,l);const h=1&n?r:o;a.push(h.r,h.g,h.b),a.push(h.r,h.g,h.b)}for(let e=0;e<=n;e++){const c=1&e?r:o,l=t-t/n*e;for(let t=0;t<i;t++){let e=t/i*(2*Math.PI),n=Math.sin(e)*l,r=Math.cos(e)*l;s.push(n,0,r),a.push(c.r,c.g,c.b),e=(t+1)/i*(2*Math.PI),n=Math.sin(e)*l,r=Math.cos(e)*l,s.push(n,0,r),a.push(c.r,c.g,c.b)}}const c=new E;c.setAttribute("position",new y(s,3)),c.setAttribute("color",new y(a,3));super(c,new Rc({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const ku=new fo,Bu=new fo,Hu=new fo;class Uu extends r{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let i=new E;i.setAttribute("position",new y([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new Rc({fog:!1,toneMapped:!1});this.lightPlane=new oe(i,r),this.add(this.lightPlane),(i=new E).setAttribute("position",new y([0,0,0,0,0,1],3)),this.targetLine=new oe(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ku.setFromMatrixPosition(this.light.matrixWorld),Bu.setFromMatrixPosition(this.light.target.matrixWorld),Hu.subVectors(Bu,ku),this.lightPlane.lookAt(Bu),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Bu),this.targetLine.scale.z=Hu.length()}}const zu=new fo,Gu=new R;class Vu extends se{constructor(t){function e(t,e,i){n(t,i),n(e,i)}function n(t,e){o.push(0,0,0),s.push(e.r,e.g,e.b),void 0===a[t]&&(a[t]=[]),a[t].push(o.length/3-1)}const i=new E,r=new Rc({color:16777215,vertexColors:!0,toneMapped:!1}),o=[],s=[],a={},c=new Is(16755200),l=new Is(16711680),h=new Is(43775),u=new Is(16777215),d=new Is(3355443);e("n1","n2",c),e("n2","n4",c),e("n4","n3",c),e("n3","n1",c),e("f1","f2",c),e("f2","f4",c),e("f4","f3",c),e("f3","f1",c),e("n1","f1",c),e("n2","f2",c),e("n3","f3",c),e("n4","f4",c),e("p","n1",l),e("p","n2",l),e("p","n3",l),e("p","n4",l),e("u1","u2",h),e("u2","u3",h),e("u3","u1",h),e("c","t",u),e("p","c",d),e("cn1","cn2",d),e("cn3","cn4",d),e("cf1","cf2",d),e("cf3","cf4",d),i.setAttribute("position",new y(o,3)),i.setAttribute("color",new y(s,3)),super(i,r),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const t=this.geometry,e=this.pointMap;Gu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),ln("c",e,t,Gu,0,0,-1),ln("t",e,t,Gu,0,0,1),ln("n1",e,t,Gu,-1,-1,-1),ln("n2",e,t,Gu,1,-1,-1),ln("n3",e,t,Gu,-1,1,-1),ln("n4",e,t,Gu,1,1,-1),ln("f1",e,t,Gu,-1,-1,1),ln("f2",e,t,Gu,1,-1,1),ln("f3",e,t,Gu,-1,1,1),ln("f4",e,t,Gu,1,1,1),ln("u1",e,t,Gu,.7,1.1,-1),ln("u2",e,t,Gu,-.7,1.1,-1),ln("u3",e,t,Gu,0,2,-1),ln("cf1",e,t,Gu,-1,0,1),ln("cf2",e,t,Gu,1,0,1),ln("cf3",e,t,Gu,0,-1,1),ln("cf4",e,t,Gu,0,1,1),ln("cn1",e,t,Gu,-1,0,-1),ln("cn2",e,t,Gu,1,0,-1),ln("cn3",e,t,Gu,0,-1,-1),ln("cn4",e,t,Gu,0,1,-1),t.getAttribute("position").needsUpdate=!0}}const Wu=new vo;class ju extends se{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new E;r.setIndex(new l(n,1)),r.setAttribute("position",new l(i,3)),super(r,new Rc({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Wu.setFromObject(this.object),Wu.isEmpty())return;const e=Wu.min,n=Wu.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=e.x,r[4]=n.y,r[5]=n.z,r[6]=e.x,r[7]=e.y,r[8]=n.z,r[9]=n.x,r[10]=e.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=e.z,r[15]=e.x,r[16]=n.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=n.x,r[22]=e.y,r[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return se.prototype.copy.call(this,t),this.object=t.object,this}}class Xu extends se{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new E;i.setIndex(new l(n,1)),i.setAttribute("position",new y([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new Rc({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class qu extends oe{constructor(t,e=1,n=16776960){const i=n,r=new E;r.setAttribute("position",new y([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new Rc({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const o=new E;o.setAttribute("position",new y([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new w(o,new Os({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?Mn:wn,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const Yu=new fo;let Ku,Zu;class Ju extends r{constructor(t=new fo(0,0,1),e=new fo(0,0,0),n=1,i=16776960,r=.2*n,o=.2*r){super(),this.type="ArrowHelper",void 0===Ku&&((Ku=new E).setAttribute("position",new y([0,0,0,0,1,0],3)),(Zu=new qc(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new oe(Ku,new Rc({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new w(Zu,new Os({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Yu.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Yu,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class Qu extends se{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new E;n.setAttribute("position",new y(e,3)),n.setAttribute("color",new y([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new Rc({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const $u=new Float32Array(1),td=new Int32Array($u.buffer),ed={toHalfFloat:function(t){$u[0]=t;const e=td[0];let n=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?n:r>142?(n|=31744,n|=(255==r?0:1)&&8388607&e):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1)):(n|=r-112<<10|i>>1,n+=1&i)}},nd=4,id=8,rd=Math.pow(2,id),od=[.125,.215,.35,.446,.526,.582],sd=id-nd+1+od.length,ad={[Br]:0,[Hr]:1,[zr]:2,[Vr]:3,[Wr]:4,[jr]:5,[Ur]:6},cd=new Os({side:Mn,depthWrite:!1,depthTest:!1}),ld=new w(new la,cd),hd=new _h,{_lodPlanes:ud,_sizeLods:dd,_sigmas:pd}=function(){const t=[],e=[],n=[];let i=id;for(let r=0;r<sd;r++){const o=Math.pow(2,i);e.push(o);let s=1/o;r>id-nd?s=od[r-id+nd-1]:0==r&&(s=0),n.push(s);const a=1/(o-1),c=-a/2,h=1+a/2,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=new Float32Array(108),p=new Float32Array(72),f=new Float32Array(36);for(let t=0;t<6;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];d.set(i,18*t),p.set(u,12*t);const r=[t,t,t,t,t,t];f.set(r,6*t)}const m=new E;m.setAttribute("position",new l(d,3)),m.setAttribute("uv",new l(p,2)),m.setAttribute("faceIndex",new l(f,1)),t.push(m),i>nd&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}(),fd=new Is;let md=null;const gd=(1+Math.sqrt(5))/2,vd=1/gd,yd=[new fo(1,1,1),new fo(-1,1,1),new fo(1,1,-1),new fo(-1,1,-1),new fo(0,gd,vd),new fo(0,gd,-vd),new fo(vd,0,gd),new fo(-vd,0,gd),new fo(gd,vd,0),new fo(-gd,vd,0)];class xd{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new fo(0,1,0);return new _l({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:ad[Br]},outputEncoding:{value:ad[Br]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:Sn,depthTest:!1,depthWrite:!1})}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){md=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=fn(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=pn(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<ud.length;t++)ud[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(md),t.scissorTest=!1,dn(t,0,0,t.width,t.height)}_fromTexture(t){md=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:_i,minFilter:_i,generateMipmaps:!1,type:Si,format:Vi,encoding:function(t){return void 0!==t&&t.type===Si&&(t.encoding===Br||t.encoding===Hr||t.encoding===Ur)}(t)?t.encoding:zr,depthBuffer:!1},n=un(e);return n.depthBuffer=!t,this._pingPongRenderTarget=un(e),n}_compileMaterial(t){const e=new w(ud[0],t);this._renderer.compile(e,hd)}_sceneToCubeUV(t,e,n,i){const r=new L(90,1,e,n),o=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],a=this._renderer,c=a.autoClear,l=a.outputEncoding,h=a.toneMapping;a.getClearColor(fd),a.toneMapping=oi,a.outputEncoding=Br,a.autoClear=!1;let u=!1;const d=t.background;if(d){if(d.isColor){cd.color.copy(d).convertSRGBToLinear(),t.background=null;const e=hn(cd.color);cd.opacity=e,u=!0}}else{cd.color.copy(fd).convertSRGBToLinear();const t=hn(cd.color);cd.opacity=t,u=!0}for(let e=0;e<6;e++){const n=e%3;0==n?(r.up.set(0,o[e],0),r.lookAt(s[e],0,0)):1==n?(r.up.set(0,0,o[e]),r.lookAt(0,s[e],0)):(r.up.set(0,o[e],0),r.lookAt(0,0,s[e])),dn(i,n*rd,e>2?rd:0,rd,rd),a.setRenderTarget(i),u&&a.render(ld,r),a.render(t,r)}a.toneMapping=h,a.outputEncoding=l,a.autoClear=c}_textureToCubeUV(t,e){const n=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=fn()):null==this._equirectShader&&(this._equirectShader=pn());const i=t.isCubeTexture?this._cubemapShader:this._equirectShader,r=new w(ud[0],i),o=i.uniforms;o.envMap.value=t,t.isCubeTexture||o.texelSize.value.set(1/t.image.width,1/t.image.height),o.inputEncoding.value=ad[t.encoding],o.outputEncoding.value=ad[e.texture.encoding],dn(e,0,0,3*rd,2*rd),n.setRenderTarget(e),n.render(r,hd)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<sd;e++){const n=Math.sqrt(pd[e]*pd[e]-pd[e-1]*pd[e-1]),i=yd[(e-1)%yd.length];this._blur(t,e-1,e,n,i)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,s){const a=this._renderer,c=this._blurMaterial;"latitudinal"!==o&&"longitudinal"!==o&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new w(ud[i],c),h=c.uniforms,u=dd[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let t=0;t<20;++t){const e=t/p,n=Math.exp(-e*e/2);m.push(n),0==t?g+=n:t<f&&(g+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/g;h.envMap.value=t.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===o,s&&(h.poleAxis.value=s),h.dTheta.value=d,h.mipInt.value=id-n,h.inputEncoding.value=ad[t.texture.encoding],h.outputEncoding.value=ad[t.texture.encoding];const v=dd[i];dn(e,3*Math.max(0,rd-2*v),(0===i?0:2*rd)+2*v*(i>id-nd?i-id+nd:0),3*v,2*v),a.setRenderTarget(e),a.render(l,hd)}}Ve.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Ve.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},oh.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},Ou.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Lu.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Be.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Rh.extractUrlBase(t)},Be.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},_u.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},_u.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},_u.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},_u.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},vo.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},vo.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},vo.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},vo.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},vo.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},Oo.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},xa.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},wu.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},no.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},no.nearestPowerOfTwo=function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),no.floorPowerOfTwo(t)},no.nextPowerOfTwo=function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),no.ceilPowerOfTwo(t)},ro.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},ro.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},ro.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},ro.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},ro.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},ro.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Wo.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Wo.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Wo.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new fo).setFromMatrixColumn(this,3)},Wo.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Wo.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Wo.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Wo.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Wo.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Wo.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Wo.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Wo.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Wo.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Wo.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Wo.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Wo.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Wo.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Wo.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Wo.prototype.makeFrustum=function(t,e,n,i,r,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,o)},Wo.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},ys.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},po.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},po.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Vo.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Vo.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Vo.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Ls.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Ls.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Ls.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Ls.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Ls.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Ls.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ls.getBarycoord(t,e,n,i,r)},Ls.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ls.getNormal(t,e,n,i)},sh.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},sh.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new rl(this,t)},sh.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new hl(this,t)},io.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},io.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},io.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},fo.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},fo.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},fo.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},fo.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},fo.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},fo.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fo.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},fo.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},fo.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},lo.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lo.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},r.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},r.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},r.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},r.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},r.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(r.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),w.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(w.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),ne.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Ve.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),L.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(ah.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(l.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Qr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Qr)}}}),l.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Qr:Jr),this},l.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},l.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},E.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},E.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new l(arguments[1],arguments[2])))},E.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},E.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},E.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},E.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},E.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(E.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Ye.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(rn.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties($t.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Qr},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),$t.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Qr:Jr),this},$t.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},rl.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},rl.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},rl.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Za.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},gu.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(o.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Is}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Ce.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(A.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Qt.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},Qt.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Qt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Qt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Qt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Qt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Qt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Qt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Qt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Qt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Qt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Qt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Qt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Qt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Qt.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Qt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Qt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Qt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Qt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Qt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Qt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Qt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Qt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Qt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Qt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Qt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Hr:Br}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Xt.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(ho.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Jh.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new Hh).load(t,function(t){e.setBuffer(t)}),this},iu.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},pa.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},pa.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)},so.crossOrigin=void 0,so.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Ge;r.setCrossOrigin(this.crossOrigin);const o=r.load(t,n,void 0,i);return e&&(o.mapping=e),o},so.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Gl;r.setCrossOrigin(this.crossOrigin);const o=r.load(t,n,void 0,i);return e&&(o.mapping=e),o},so.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},so.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const _d={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"127"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="127"),t.ACESFilmicToneMapping=li,t.AddEquation=Nn,t.AddOperation=ri,t.AdditiveAnimationBlendMode=2501,t.AdditiveBlending=Rn,t.AlphaFormat=Bi,t.AlwaysDepth=Kn,t.AlwaysStencilFunc=Zr,t.AmbientLight=wh,t.AmbientLightProbe=zh,t.AnimationClip=Fl,t.AnimationLoader=Ul,t.AnimationMixer=mu,t.AnimationObjectGroup=pu,t.AnimationUtils=Rl,t.ArcCurve=Wl,t.ArrayCamera=ja,t.ArrowHelper=Ju,t.Audio=Jh,t.AudioAnalyser=iu,t.AudioContext=Bh,t.AudioListener=Zh,t.AudioLoader=Hh,t.AxesHelper=Qu,t.AxisHelper=function(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Qu(t)},t.BackSide=Mn,t.BasicDepthPacking=3200,t.BasicShadowMap=0,t.BinaryTextureLoader=function(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new ze(t)},t.Bone=ie,t.BooleanKeyframeTrack=Cl,t.BoundingBoxHelper=function(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new ju(t,e)},t.Box2=_u,t.Box3=vo,t.Box3Helper=Xu,t.BoxBufferGeometry=la,t.BoxGeometry=la,t.BoxHelper=ju,t.BufferAttribute=l,t.BufferGeometry=E,t.BufferGeometryLoader=Lh,t.ByteType=Ai,t.Cache=kl,t.Camera=R,t.CameraHelper=Vu,t.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")},t.CanvasTexture=Wc,t.CatmullRomCurve3=Kl,t.CineonToneMapping=ci,t.CircleBufferGeometry=Xc,t.CircleGeometry=Xc,t.ClampToEdgeWrapping=yi,t.Clock=jh,t.Color=Is,t.ColorKeyframeTrack=Pl,t.CompressedTexture=Vc,t.CompressedTextureLoader=Ue,t.ConeBufferGeometry=Yc,t.ConeGeometry=Yc,t.CubeCamera=pa,t.CubeReflectionMapping=ui,t.CubeRefractionMapping=di,t.CubeTexture=fa,t.CubeTextureLoader=Gl,t.CubeUVReflectionMapping=mi,t.CubeUVRefractionMapping=gi,t.CubicBezierCurve=Zl,t.CubicBezierCurve3=Jl,t.CubicInterpolant=Ne,t.CullFaceBack=yn,t.CullFaceFront=xn,t.CullFaceFrontBack=3,t.CullFaceNone=vn,t.Curve=Ve,t.CurvePath=rh,t.CustomBlending=Pn,t.CustomToneMapping=hi,t.CylinderBufferGeometry=qc,t.CylinderGeometry=qc,t.Cylindrical=yu,t.DataTexture=ga,t.DataTexture2DArray=Ma,t.DataTexture3D=Ta,t.DataTextureLoader=ze,t.DataUtils=ed,t.DecrementStencilOp=7683,t.DecrementWrapStencilOp=34056,t.DefaultLoadingManager=Bl,t.DepthFormat=Wi,t.DepthStencilFormat=ji,t.DepthTexture=jc,t.DirectionalLight=Eh,t.DirectionalLightHelper=Uu,t.DiscreteInterpolant=Ie,t.DodecahedronBufferGeometry=Zc,t.DodecahedronGeometry=Zc,t.DoubleSide=Tn,t.DstAlphaFactor=Vn,t.DstColorFactor=jn,t.DynamicBufferAttribute=function(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new l(t,e).setUsage(Qr)},t.DynamicCopyUsage=35050,t.DynamicDrawUsage=Qr,t.DynamicReadUsage=35049,t.EdgesGeometry=el,t.EdgesHelper=function(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new se(new el(t.geometry),new Rc({color:void 0!==e?e:16777215}))},t.EllipseCurve=Vl,t.EqualDepth=Qn,t.EqualStencilFunc=514,t.EquirectangularReflectionMapping=pi,t.EquirectangularRefractionMapping=fi,t.Euler=ts,t.EventDispatcher=e,t.ExtrudeBufferGeometry=rl,t.ExtrudeGeometry=rl,t.FaceColors=1,t.FileLoader=He,t.FlatShading=1,t.Float16BufferAttribute=v,t.Float32Attribute=function(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new y(t,e)},t.Float32BufferAttribute=y,t.Float64Attribute=function(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new x(t,e)},t.Float64BufferAttribute=x,t.FloatType=Ni,t.Fog=Ka,t.FogExp2=Ya,t.Font=Oh,t.FontLoader=Fh,t.FrontSide=wn,t.Frustum=xa,t.GLBufferAttribute=nn,t.GLSL1="100",t.GLSL3=$r,t.GammaEncoding=Ur,t.GreaterDepth=ti,t.GreaterEqualDepth=$n,t.GreaterEqualStencilFunc=518,t.GreaterStencilFunc=516,t.GridHelper=Ou,t.Group=Xa,t.HalfFloatType=Di,t.HemisphereLight=ch,t.HemisphereLightHelper=Iu,t.HemisphereLightProbe=Uh,t.IcosahedronBufferGeometry=sl,t.IcosahedronGeometry=sl,t.ImageBitmapLoader=Ze,t.ImageLoader=zl,t.ImageUtils=so,t.ImmediateRenderObject=an,t.IncrementStencilOp=7682,t.IncrementWrapStencilOp=34055,t.InstancedBufferAttribute=Ke,t.InstancedBufferGeometry=Ye,t.InstancedInterleavedBuffer=en,t.InstancedMesh=re,t.Int16Attribute=function(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new p(t,e)},t.Int16BufferAttribute=p,t.Int32Attribute=function(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new m(t,e)},t.Int32BufferAttribute=m,t.Int8Attribute=function(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new h(t,e)},t.Int8BufferAttribute=h,t.IntType=Ci,t.InterleavedBuffer=$t,t.InterleavedBufferAttribute=te,t.Interpolant=Pe,t.InterpolateDiscrete=2300,t.InterpolateLinear=2301,t.InterpolateSmooth=2302,t.InvertStencilOp=5386,t.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")},t.KeepStencilOp=Kr,t.KeyframeTrack=Ll,t.LOD=mc,t.LatheBufferGeometry=al,t.LatheGeometry=al,t.Layers=es,t.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},t.LessDepth=Zn,t.LessEqualDepth=Jn,t.LessEqualStencilFunc=515,t.LessStencilFunc=513,t.Light=ah,t.LightProbe=Sh,t.Line=oe,t.Line3=wu,t.LineBasicMaterial=Rc,t.LineCurve=Ql,t.LineCurve3=$l,t.LineDashedMaterial=Sl,t.LineLoop=Fc,t.LinePieces=1,t.LineSegments=se,t.LineStrip=0,t.LinearEncoding=Br,t.LinearFilter=wi,t.LinearInterpolant=De,t.LinearMipMapLinearFilter=1008,t.LinearMipMapNearestFilter=1007,t.LinearMipmapLinearFilter=Ti,t.LinearMipmapNearestFilter=Mi,t.LinearToneMapping=si,t.Loader=Be,t.LoaderUtils=Rh,t.LoadingManager=ke,t.LogLuvEncoding=Gr,t.LoopOnce=2200,t.LoopPingPong=2202,t.LoopRepeat=2201,t.LuminanceAlphaFormat=Gi,t.LuminanceFormat=zi,t.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},t.Material=o,t.MaterialLoader=Ah,t.Math=no,t.MathUtils=no,t.Matrix3=ro,t.Matrix4=Wo,t.MaxEquation=Fn,t.Mesh=w,t.MeshBasicMaterial=Os,t.MeshDepthMaterial=za,t.MeshDistanceMaterial=Ga,t.MeshFaceMaterial=function(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t},t.MeshLambertMaterial=Ml,t.MeshMatcapMaterial=Tl,t.MeshNormalMaterial=wl,t.MeshPhongMaterial=bl,t.MeshPhysicalMaterial=Ce,t.MeshStandardMaterial=Le,t.MeshToonMaterial=El,t.MinEquation=On,t.MirroredRepeatWrapping=xi,t.MixOperation=ii,t.MultiMaterial=function(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t},t.MultiplyBlending=Cn,t.MultiplyOperation=ni,t.NearestFilter=_i,t.NearestMipMapLinearFilter=1005,t.NearestMipMapNearestFilter=1004,t.NearestMipmapLinearFilter=Ei,t.NearestMipmapNearestFilter=bi,t.NeverDepth=Yn,t.NeverStencilFunc=512,t.NoBlending=Sn,t.NoColors=0,t.NoToneMapping=oi,t.NormalAnimationBlendMode=2500,t.NormalBlending=An,t.NotEqualDepth=ei,t.NotEqualStencilFunc=517,t.NumberKeyframeTrack=Nl,t.Object3D=r,t.ObjectLoader=Ch,t.ObjectSpaceNormalMap=Yr,t.OctahedronBufferGeometry=cl,t.OctahedronGeometry=cl,t.OneFactor=Bn,t.OneMinusDstAlphaFactor=Wn,t.OneMinusDstColorFactor=Xn,t.OneMinusSrcAlphaFactor=Gn,t.OneMinusSrcColorFactor=Un,t.OrthographicCamera=_h,t.PCFShadowMap=_n,t.PCFSoftShadowMap=bn,t.PMREMGenerator=xd,t.ParametricBufferGeometry=Re,t.ParametricGeometry=Re,t.Particle=function(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new dc(t)},t.ParticleBasicMaterial=function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new kc(t)},t.ParticleSystem=function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ae(t,e)},t.ParticleSystemMaterial=function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new kc(t)},t.Path=oh,t.PerspectiveCamera=L,t.Plane=ys,t.PlaneBufferGeometry=_a,t.PlaneGeometry=_a,t.PlaneHelper=qu,t.PointCloud=function(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ae(t,e)},t.PointCloudMaterial=function(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new kc(t)},t.PointLight=xh,t.PointLightHelper=Cu,t.Points=ae,t.PointsMaterial=kc,t.PolarGridHelper=Fu,t.PolyhedronBufferGeometry=Kc,t.PolyhedronGeometry=Kc,t.PositionalAudio=nu,t.PropertyBinding=tn,t.PropertyMixer=ru,t.QuadraticBezierCurve=th,t.QuadraticBezierCurve3=eh,t.Quaternion=po,t.QuaternionKeyframeTrack=Dl,t.QuaternionLinearInterpolant=Oe,t.REVISION="127",t.RGBADepthPacking=Xr,t.RGBAFormat=Ui,t.RGBAIntegerFormat=Ji,t.RGBA_ASTC_10x10_Format=_r,t.RGBA_ASTC_10x5_Format=vr,t.RGBA_ASTC_10x6_Format=yr,t.RGBA_ASTC_10x8_Format=xr,t.RGBA_ASTC_12x10_Format=br,t.RGBA_ASTC_12x12_Format=Er,t.RGBA_ASTC_4x4_Format=lr,t.RGBA_ASTC_5x4_Format=hr,t.RGBA_ASTC_5x5_Format=ur,t.RGBA_ASTC_6x5_Format=dr,t.RGBA_ASTC_6x6_Format=pr,t.RGBA_ASTC_8x5_Format=fr,t.RGBA_ASTC_8x6_Format=mr,t.RGBA_ASTC_8x8_Format=gr,t.RGBA_BPTC_Format=wr,t.RGBA_ETC2_EAC_Format=cr,t.RGBA_PVRTC_2BPPV1_Format=or,t.RGBA_PVRTC_4BPPV1_Format=rr,t.RGBA_S3TC_DXT1_Format=$i,t.RGBA_S3TC_DXT3_Format=tr,t.RGBA_S3TC_DXT5_Format=er,t.RGBDEncoding=jr,t.RGBEEncoding=zr,t.RGBEFormat=Vi,t.RGBFormat=Hi,t.RGBIntegerFormat=Zi,t.RGBM16Encoding=Wr,t.RGBM7Encoding=Vr,t.RGB_ETC1_Format=sr,t.RGB_ETC2_Format=ar,t.RGB_PVRTC_2BPPV1_Format=ir,t.RGB_PVRTC_4BPPV1_Format=nr,t.RGB_S3TC_DXT1_Format=Qi,t.RGFormat=Yi,t.RGIntegerFormat=Ki,t.RawShaderMaterial=_l,t.Ray=Vo,t.Raycaster=rn,t.RectAreaLight=Mh,t.RedFormat=Xi,t.RedIntegerFormat=qi,t.ReinhardToneMapping=ai,t.RepeatWrapping=vi,t.ReplaceStencilOp=7681,t.ReverseSubtractEquation=In,t.RingBufferGeometry=ll,t.RingGeometry=ll,t.SRGB8_ALPHA8_ASTC_10x10_Format=Or,t.SRGB8_ALPHA8_ASTC_10x5_Format=Nr,t.SRGB8_ALPHA8_ASTC_10x6_Format=Dr,t.SRGB8_ALPHA8_ASTC_10x8_Format=Ir,t.SRGB8_ALPHA8_ASTC_12x10_Format=Fr,t.SRGB8_ALPHA8_ASTC_12x12_Format=kr,t.SRGB8_ALPHA8_ASTC_4x4_Format=Mr,t.SRGB8_ALPHA8_ASTC_5x4_Format=Tr,t.SRGB8_ALPHA8_ASTC_5x5_Format=Sr,t.SRGB8_ALPHA8_ASTC_6x5_Format=Ar,t.SRGB8_ALPHA8_ASTC_6x6_Format=Rr,t.SRGB8_ALPHA8_ASTC_8x5_Format=Lr,t.SRGB8_ALPHA8_ASTC_8x6_Format=Cr,t.SRGB8_ALPHA8_ASTC_8x8_Format=Pr,t.Scene=Za,t.SceneUtils=_d,t.ShaderChunk=ba,t.ShaderLib=wa,t.ShaderMaterial=A,t.ShadowMaterial=xl,t.Shape=sh,t.ShapeBufferGeometry=hl,t.ShapeGeometry=hl,t.ShapePath=Ih,t.ShapeUtils=il,t.ShortType=Ri,t.Skeleton=wc,t.SkeletonHelper=Lu,t.SkinnedMesh=ne,t.SmoothShading=2,t.Sphere=Oo,t.SphereBufferGeometry=ul,t.SphereGeometry=ul,t.Spherical=vu,t.SphericalHarmonics3=Th,t.SplineCurve=nh,t.SpotLight=fh,t.SpotLightHelper=Tu,t.Sprite=dc,t.SpriteMaterial=Qa,t.SrcAlphaFactor=zn,t.SrcAlphaSaturateFactor=qn,t.SrcColorFactor=Hn,t.StaticCopyUsage=35046,t.StaticDrawUsage=Jr,t.StaticReadUsage=35045,t.StereoCamera=Wh,t.StreamCopyUsage=35042,t.StreamDrawUsage=35040,t.StreamReadUsage=35041,t.StringKeyframeTrack=Il,t.SubtractEquation=Dn,t.SubtractiveBlending=Ln,t.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},t.TangentSpaceNormalMap=qr,t.TetrahedronBufferGeometry=dl,t.TetrahedronGeometry=dl,t.TextBufferGeometry=pl,t.TextGeometry=pl,t.Texture=co,t.TextureLoader=Ge,t.TorusBufferGeometry=fl,t.TorusGeometry=fl,t.TorusKnotBufferGeometry=ml,t.TorusKnotGeometry=ml,t.Triangle=Ls,t.TriangleFanDrawMode=2,t.TriangleStripDrawMode=1,t.TrianglesDrawMode=0,t.TubeBufferGeometry=gl,t.TubeGeometry=gl,t.UVMapping=300,t.Uint16Attribute=function(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new f(t,e)},t.Uint16BufferAttribute=f,t.Uint32Attribute=function(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new g(t,e)},t.Uint32BufferAttribute=g,t.Uint8Attribute=function(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new u(t,e)},t.Uint8BufferAttribute=u,t.Uint8ClampedAttribute=function(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new d(t,e)},t.Uint8ClampedBufferAttribute=d,t.Uniform=gu,t.UniformsLib=Ea,t.UniformsUtils=ha,t.UnsignedByteType=Si,t.UnsignedInt248Type=ki,t.UnsignedIntType=Pi,t.UnsignedShort4444Type=Ii,t.UnsignedShort5551Type=Oi,t.UnsignedShort565Type=Fi,t.UnsignedShortType=Li,t.VSMShadowMap=En,t.Vector2=io,t.Vector3=fo,t.Vector4=lo,t.VectorKeyframeTrack=Ol,t.Vertex=function(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new fo(t,e,n)},t.VertexColors=2,t.VideoTexture=Gc,t.WebGL1Renderer=qa,t.WebGLCubeRenderTarget=ma,t.WebGLMultisampleRenderTarget=uo,t.WebGLRenderTarget=ho,t.WebGLRenderTargetCube=function(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new ma(t,n)},t.WebGLRenderer=Qt,t.WebGLUtils=Yt,t.WireframeGeometry=vl,t.WireframeHelper=function(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new se(new vl(t.geometry),new Rc({color:void 0!==e?e:16777215}))},t.WrapAroundEnding=2402,t.XHRLoader=function(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new He(t)},t.ZeroCurvatureEnding=2400,t.ZeroFactor=kn,t.ZeroSlopeEnding=2401,t.ZeroStencilOp=0,t.sRGBEncoding=Hr,Object.defineProperty(t,"__esModule",{value:!0})})},{}],12:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("checkpoint-controls",{schema:{enabled:{default:!0},mode:{default:"teleport",oneOf:["teleport","animate"]},animateSpeed:{default:3}},init:function(){this.active=!0,this.checkpoint=null,this.isNavMeshConstrained=!1,this.offset=new THREE.Vector3,this.position=new THREE.Vector3,this.targetPosition=new THREE.Vector3},play:function(){this.active=!0},pause:function(){this.active=!1},setCheckpoint:function(t){var e=this.el;this.active&&this.checkpoint!==t&&(this.checkpoint&&e.emit("navigation-end",{checkpoint:this.checkpoint}),this.checkpoint=t,this.sync(),this.position.distanceTo(this.targetPosition)<.1?this.checkpoint=null:(e.emit("navigation-start",{checkpoint:t}),"teleport"===this.data.mode&&(this.el.setAttribute("position",this.targetPosition),this.checkpoint=null,e.emit("navigation-end",{checkpoint:t}),e.components["movement-controls"].updateNavLocation())))},isVelocityActive:function(){return!(!this.active||!this.checkpoint)},getVelocity:function(){if(this.active){var t=this.data,e=this.offset,n=this.position,i=this.targetPosition,r=this.checkpoint;return this.sync(),n.distanceTo(i)<.1?(this.checkpoint=null,this.el.emit("navigation-end",{checkpoint:r}),e.set(0,0,0)):(e.setLength(t.animateSpeed),e)}},sync:function(){var t=this.offset,e=this.position,n=this.targetPosition;e.copy(this.el.getAttribute("position")),this.checkpoint.object3D.getWorldPosition(n),n.add(this.checkpoint.components.checkpoint.getOffset()),t.copy(n).sub(e)}})},{}],13:[function(t,e,n){"use strict";var i=t("../../lib/GamepadButton"),r=t("../../lib/GamepadButtonEvent"),o={LEFT:"left",RIGHT:"right"},s={MOVEMENT:1,ROTATION:2};e.exports=AFRAME.registerComponent("gamepad-controls",{GamepadButton:i,schema:{enabled:{default:!0},rotationSensitivity:{default:2}},init:function(){var t=this.el.sceneEl;this.system=t.systems["tracked-controls-webxr"]||{controllers:[]},this.prevTime=window.performance.now(),this.buttons={};var e=this.el.object3D.rotation;this.pitch=new THREE.Object3D,this.pitch.rotation.x=e.x,this.yaw=new THREE.Object3D,this.yaw.position.y=10,this.yaw.rotation.y=e.y,this.yaw.add(this.pitch),this._lookVector=new THREE.Vector2,this._moveVector=new THREE.Vector2,this._dpadVector=new THREE.Vector2,t.addBehavior(this)},update:function(){this.tick()},tick:function(t,e){this.updateButtonState(),this.updateRotation(e)},remove:function(){},isVelocityActive:function(){if(!this.data.enabled||!this.isConnected())return!1;var t=this._dpadVector,e=this._moveVector;this.getDpad(t),this.getJoystick(s.MOVEMENT,e);var n=t.x||e.x,i=t.y||e.y;return Math.abs(n)>.2||Math.abs(i)>.2},getVelocityDelta:function(){var t=this._dpadVector,e=this._moveVector;this.getDpad(t),this.getJoystick(s.MOVEMENT,e);var n=t.x||e.x,i=t.y||e.y,r=new THREE.Vector3;return Math.abs(n)>.2&&(r.x+=n),Math.abs(i)>.2&&(r.z+=i),r},isRotationActive:function(){if(!this.data.enabled||!this.isConnected())return!1;var t=this._lookVector;return this.getJoystick(s.ROTATION,t),Math.abs(t.x)>.2||Math.abs(t.y)>.2},updateRotation:function(t){if(this.isRotationActive()){var e=this.data,n=this.yaw,i=this.pitch;n.rotation.y=this.el.object3D.rotation.y,i.rotation.x=this.el.object3D.rotation.x;var r=this._lookVector;this.getJoystick(s.ROTATION,r),Math.abs(r.x)<=.2&&(r.x=0),Math.abs(r.y)<=.2&&(r.y=0),r.multiplyScalar(e.rotationSensitivity*t/1e3),n.rotation.y-=r.x,i.rotation.x-=r.y,i.rotation.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,i.rotation.x)),this.el.object3D.rotation.set(i.rotation.x,n.rotation.y,0)}},updateButtonState:function(){var t=this.getGamepad(o.RIGHT);if(this.data.enabled&&t)for(var e=0;e<t.buttons.length;e++)t.buttons[e].pressed&&!this.buttons[e]?this.emit(new r("gamepadbuttondown",e,t.buttons[e])):!t.buttons[e].pressed&&this.buttons[e]&&this.emit(new r("gamepadbuttonup",e,t.buttons[e])),this.buttons[e]=t.buttons[e].pressed;else Object.keys(this.buttons)&&(this.buttons={})},emit:function(t){this.el.emit(t.type,t),this.el.emit(t.type+":"+t.index,new r(t.type,t.index,t))},getGamepad:function(){var t=[],e=[];return function(n){var i=this.el.sceneEl.components["proxy-controls"],r=i&&i.isConnected()&&i.getGamepad(0);if(r)return r;t.length=0;for(var o=0;o<this.system.controllers.length;o++){var s=this.system.controllers[o],a=s?s.gamepad:null;if(t.push(a),a&&s.handedness===n)return a}for(var c=navigator.getGamepads?navigator.getGamepads():e,l=0;l<c.length;l++){var h=c[l];if(h&&h.hand===n)return h}return t[0]||c[0]}}(),getButton:function(t){return this.getGamepad(o.RIGHT).buttons[t]},getAxis:function(t){return this.getGamepad(t>1?o.RIGHT:o.LEFT).axes[t]},getJoystick:function(t,e){var n=this.getGamepad(t===s.MOVEMENT?o.LEFT:o.RIGHT);if(!n)return e.set(0,0);if("xr-standard"===n.mapping)switch(t){case s.MOVEMENT:return e.set(n.axes[2],n.axes[3]);case s.ROTATION:return e.set(n.axes[2],0)}else switch(t){case s.MOVEMENT:return e.set(n.axes[0],n.axes[1]);case s.ROTATION:return e.set(n.axes[2],n.axes[3])}throw new Error('Unexpected joystick index "%d".',t)},getDpad:function(t){var e=this.getGamepad(o.LEFT);return e&&e.buttons[i.DPAD_RIGHT]?t.set((e.buttons[i.DPAD_RIGHT].pressed?1:0)+(e.buttons[i.DPAD_LEFT].pressed?-1:0),(e.buttons[i.DPAD_UP].pressed?-1:0)+(e.buttons[i.DPAD_DOWN].pressed?1:0)):t.set(0,0)},isConnected:function(){var t=this.getGamepad(o.LEFT);return!(!t||!t.connected)},getID:function(){return this.getGamepad(o.LEFT).id}})},{"../../lib/GamepadButton":5,"../../lib/GamepadButtonEvent":6}],14:[function(t,e,n){"use strict";t("./checkpoint-controls"),t("./gamepad-controls"),t("./keyboard-controls"),t("./touch-controls"),t("./movement-controls"),t("./trackpad-controls"),t("./nipple-controls")},{"./checkpoint-controls":12,"./gamepad-controls":13,"./keyboard-controls":15,"./movement-controls":16,"./nipple-controls":17,"./touch-controls":18,"./trackpad-controls":19}],15:[function(t,e,n){"use strict";t("../../lib/keyboard.polyfill");var i=window.KeyboardEvent;e.exports=AFRAME.registerComponent("keyboard-controls",{schema:{enabled:{default:!0},debug:{default:!1}},init:function(){this.dVelocity=new THREE.Vector3,this.localKeys={},this.listeners={keydown:this.onKeyDown.bind(this),keyup:this.onKeyUp.bind(this),blur:this.onBlur.bind(this),onContextMenu:this.onContextMenu.bind(this)}},isVelocityActive:function(){return this.data.enabled&&!!Object.keys(this.getKeys()).length},getVelocityDelta:function(){var t=this.data,e=this.getKeys();return this.dVelocity.set(0,0,0),t.enabled&&((e.KeyW||e.ArrowUp)&&(this.dVelocity.z-=1),(e.KeyA||e.ArrowLeft)&&(this.dVelocity.x-=1),(e.KeyS||e.ArrowDown)&&(this.dVelocity.z+=1),(e.KeyD||e.ArrowRight)&&(this.dVelocity.x+=1)),this.dVelocity.clone()},play:function(){this.attachEventListeners()},pause:function(){this.removeEventListeners()},attachEventListeners:function(){window.addEventListener("contextmenu",this.listeners.onContextMenu,!1),window.addEventListener("keydown",this.listeners.keydown,!1),window.addEventListener("keyup",this.listeners.keyup,!1),window.addEventListener("blur",this.listeners.blur,!1)},onContextMenu:function(){for(var t in this.localKeys)this.localKeys.hasOwnProperty(t)&&delete this.localKeys[t]},removeEventListeners:function(){window.removeEventListener("keydown",this.listeners.keydown),window.removeEventListener("keyup",this.listeners.keyup),window.removeEventListener("blur",this.listeners.blur)},onKeyDown:function(t){AFRAME.utils.shouldCaptureKeyEvent(t)&&(this.localKeys[t.code]=!0,this.emit(t))},onKeyUp:function(t){AFRAME.utils.shouldCaptureKeyEvent(t)&&(delete this.localKeys[t.code],this.emit(t))},onBlur:function(){for(var t in this.localKeys)this.localKeys.hasOwnProperty(t)&&delete this.localKeys[t]},emit:function(t){"__keyboard-controls-proxy"in t&&this.el.emit(t.type,t),this.el.emit(t.type+":"+t.code,new i(t.type,t)),this.data.debug&&console.log(t.type+":"+t.code)},isPressed:function(t){return t in this.getKeys()},getKeys:function(){return this.isProxied()?this.el.sceneEl.components["proxy-controls"].getKeyboard():this.localKeys},isProxied:function(){var t=this.el.sceneEl.components["proxy-controls"];return t&&t.isConnected()}})},{"../../lib/keyboard.polyfill":8}],16:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("movement-controls",{dependencies:["rotation"],schema:{enabled:{default:!0},controls:{default:["gamepad","trackpad","keyboard","touch"]},speed:{default:.3,min:0},fly:{default:!1},constrainToNavMesh:{default:!1},camera:{default:"[movement-controls] [camera]",type:"selector"}},init:function(){var t=this.el;this.data.camera||(this.data.camera=t.querySelector("[camera]")),this.velocityCtrl=null,this.velocity=new THREE.Vector3,this.heading=new THREE.Quaternion,this.navGroup=null,this.navNode=null,t.sceneEl.hasLoaded?this.injectControls():t.sceneEl.addEventListener("loaded",this.injectControls.bind(this))},update:function(t){var e=this.el,n=this.data,i=e.sceneEl.systems.nav;if(e.sceneEl.hasLoaded&&this.injectControls(),i&&n.constrainToNavMesh!==t.constrainToNavMesh&&(n.constrainToNavMesh?i.addAgent(this):i.removeAgent(this)),n.enabled!==t.enabled)for(var r=0;r<n.controls.length;r++){var o=n.controls[r]+"-controls";this.el.setAttribute(o,{enabled:this.data.enabled})}},injectControls:function(){for(var t=this.data,e=0;e<t.controls.length;e++){var n=t.controls[e]+"-controls";this.el.setAttribute(n,{enabled:this.data.enabled})}},updateNavLocation:function(){this.navGroup=null,this.navNode=null},tick:function(){var t=new THREE.Vector3,e=new THREE.Vector3,n=new THREE.Vector3;return function(i,r){if(r){var o=this.el,s=this.data;if(s.enabled){this.updateVelocityCtrl();var a=this.velocityCtrl,c=this.velocity;if(a)if(r/1e3>.2?c.set(0,0,0):this.updateVelocity(r),s.constrainToNavMesh&&!1!==a.isNavMeshConstrained){if(c.lengthSq()<1e-5)return;t.copy(o.object3D.position),e.copy(c).multiplyScalar(r/1e3).add(t);var l=o.sceneEl.systems.nav;this.navGroup=null===this.navGroup?l.getGroup(t):this.navGroup,this.navNode=this.navNode||l.getNode(t,this.navGroup),this.navNode=l.clampStep(t,e,this.navGroup,this.navNode,n),o.object3D.position.copy(n)}else o.hasAttribute("velocity")?o.setAttribute("velocity",c):(o.object3D.position.x+=c.x*r/1e3,o.object3D.position.y+=c.y*r/1e3,o.object3D.position.z+=c.z*r/1e3)}}}}(),updateVelocityCtrl:function(){var t=this.data;if(t.enabled){for(var e=0,n=t.controls.length;e<n;e++){var i=this.el.components[t.controls[e]+"-controls"];if(i&&i.isVelocityActive())return void(this.velocityCtrl=i)}this.velocityCtrl=null}},updateVelocity:function(){var t=new THREE.Vector2,e=new THREE.Quaternion;return function(n){var i=void 0,r=this.el,o=this.velocityCtrl,s=this.velocity,a=this.data;if(o){if(!o.getVelocityDelta){if(o.getVelocity)return void s.copy(o.getVelocity());if(o.getPositionDelta)return void s.copy(o.getPositionDelta(n).multiplyScalar(1e3/n));throw new Error("Incompatible movement controls: ",o)}i=o.getVelocityDelta(n)}if(r.hasAttribute("velocity")&&!a.constrainToNavMesh&&s.copy(this.el.getAttribute("velocity")),i&&a.enabled){var c=a.camera;e.copy(c.object3D.quaternion),e.premultiply(r.object3D.quaternion),i.applyQuaternion(e);var l=i.length();a.fly?(s.copy(i),s.multiplyScalar(16.66667*this.data.speed)):(t.set(i.x,i.z),t.setLength(l*this.data.speed*16.66667),s.x=t.x,s.y=0,s.z=t.y)}}}()})},{}],17:[function(t,e,n){"use strict";var i=function(t){return t&&t.__esModule?t:{default:t}}(t("nipplejs"));AFRAME.registerComponent("nipple-controls",{schema:{enabled:{default:!0},mode:{default:"dynamic",oneOf:["static","semi","dynamic"]},rotationSensitivity:{default:1},moveJoystickEnabled:{default:!0},lookJoystickEnabled:{default:!0},sideMargin:{default:"30px"},bottomMargin:{default:"70px"},moveJoystickPosition:{default:"left",oneOf:["left","right"]},lookJoystickPosition:{default:"right",oneOf:["left","right"]}},init:function(){this.dVelocity=new THREE.Vector3,this.lookVector=new THREE.Vector2;var t=this.el.querySelector("[look-controls]").components["look-controls"];this.pitchObject=t.pitchObject,this.yawObject=t.yawObject,this.rigRotation=this.el.object3D.rotation,this.moveData=void 0,this.lookData=void 0,this.moving=!1,this.rotating=!1},update:function(t){this.data.moveJoystickPosition===t.moveJoystickPosition&&this.data.sideMargin===t.sideMargin&&this.data.bottomMargin===t.bottomMargin&&this.data.mode===t.mode||this.removeMoveJoystick(),this.data.lookJoystickPosition===t.lookJoystickPosition&&this.data.sideMargin===t.sideMargin&&this.data.bottomMargin===t.bottomMargin&&this.data.mode===t.mode||this.removeLookJoystick(),this.data.enabled&&this.data.moveJoystickEnabled?this.createMoveJoystick():this.removeMoveJoystick(),this.data.enabled&&this.data.lookJoystickEnabled?this.createLookJoystick():this.removeLookJoystick()},pause:function(){this.moving=!1,this.rotating=!1},remove:function(){this.removeMoveJoystick(),this.removeLookJoystick()},isVelocityActive:function(){return this.data.enabled&&this.moving},getVelocityDelta:function(){if(this.dVelocity.set(0,0,0),this.isVelocityActive()){var t=this.moveData.force<1?this.moveData.force:1,e=this.moveData.angle.radian,n=Math.cos(e)*t,i=-Math.sin(e)*t;this.dVelocity.set(n,0,i)}return this.dVelocity},isRotationActive:function(){return this.data.enabled&&this.rotating},updateRotation:function(t){if(this.isRotationActive()){var e=this.lookData.force<1?this.lookData.force:1,n=this.lookData.angle.radian,i=this.lookVector;i.x=Math.cos(n)*e,i.y=Math.sin(n)*e,i.multiplyScalar(this.data.rotationSensitivity*t/1e3),this.yawObject.rotation.y-=i.x;var r=this.pitchObject.rotation.x+i.y;r=Math.max(-Math.PI/2,Math.min(Math.PI/2,r)),this.pitchObject.rotation.x=r}},tick:function(t,e){this.updateRotation(e)},initLeftZone:function(){var t=document.createElement("div");t.setAttribute("id","joystickLeftZone"),t.setAttribute("style","position:absolute;"+this.data.moveJoystickPosition+":"+this.data.sideMargin+";bottom:"+this.data.bottomMargin+";z-index:1"),document.body.appendChild(t),this.leftZone=t},initRightZone:function(){var t=document.createElement("div");t.setAttribute("id","joystickRightZone"),t.setAttribute("style","position:absolute;"+this.data.lookJoystickPosition+":"+this.data.sideMargin+";bottom:"+this.data.bottomMargin+";z-index:1"),document.body.appendChild(t),this.rightZone=t},createMoveJoystick:function(){var t=this;if(!this.moveJoystick){this.initLeftZone();var e={mode:this.data.mode,zone:this.leftZone,color:"white",fadeTime:0};this.leftZone.style.width="100px","static"===this.data.mode?(this.leftZone.style.height="100px",e.position={left:"50%",bottom:"50%"}):this.leftZone.style.height="400px",this.moveJoystick=i.default.create(e),this.moveJoystick.on("move",function(e,n){t.moveData=n,t.moving=!0}),this.moveJoystick.on("end",function(e,n){t.moving=!1})}},createLookJoystick:function(){var t=this;if(!this.lookJoystick){this.initRightZone();var e={mode:this.data.mode,zone:this.rightZone,color:"white",fadeTime:0};this.rightZone.style.width="100px","static"===this.data.mode?(this.rightZone.style.height="100px",e.position={left:"50%",bottom:"50%"}):this.rightZone.style.height="400px",this.lookJoystick=i.default.create(e),this.lookJoystick.on("move",function(e,n){t.lookData=n,t.rotating=!0}),this.lookJoystick.on("end",function(e,n){t.rotating=!1})}},removeMoveJoystick:function(){this.moveJoystick&&(this.moveJoystick.destroy(),this.moveJoystick=void 0),this.moveData=void 0,this.leftZone&&this.leftZone.parentNode&&(this.leftZone.remove(),this.leftZone=void 0)},removeLookJoystick:function(){this.lookJoystick&&(this.lookJoystick.destroy(),this.lookJoystick=void 0),this.lookData=void 0,this.rightZone&&this.rightZone.parentNode&&(this.rightZone.remove(),this.rightZone=void 0)}})},{nipplejs:9}],18:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("touch-controls",{schema:{enabled:{default:!0},reverseEnabled:{default:!0}},init:function(){this.dVelocity=new THREE.Vector3,this.bindMethods(),this.direction=0},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.dVelocity.set(0,0,0)},remove:function(){this.pause()},addEventListeners:function(){var t=this.el.sceneEl,e=t.canvas;if(e){e.addEventListener("touchstart",this.onTouchStart),e.addEventListener("touchend",this.onTouchEnd);var n=t.getAttribute("vr-mode-ui");n&&n.cardboardModeEnabled&&t.addEventListener("enter-vr",this.onEnterVR)}else t.addEventListener("render-target-loaded",this.addEventListeners.bind(this))},removeEventListeners:function(){var t=this.el.sceneEl&&this.el.sceneEl.canvas;t&&(t.removeEventListener("touchstart",this.onTouchStart),t.removeEventListener("touchend",this.onTouchEnd),this.el.sceneEl.removeEventListener("enter-vr",this.onEnterVR))},isVelocityActive:function(){return this.data.enabled&&!!this.direction},getVelocityDelta:function(){return this.dVelocity.z=this.direction,this.dVelocity.clone()},bindMethods:function(){this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onEnterVR=this.onEnterVR.bind(this)},onTouchStart:function(t){this.direction=-1,this.data.reverseEnabled&&t.touches&&2===t.touches.length&&(this.direction=1),t.preventDefault()},onTouchEnd:function(t){this.direction=0,t.preventDefault()},onEnterVR:function(){var t=this.el.sceneEl.xrSession;t&&(t.addEventListener("selectstart",this.onTouchStart),t.addEventListener("selectend",this.onTouchEnd))}})},{}],19:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("trackpad-controls",{schema:{enabled:{default:!0},enableNegX:{default:!0},enablePosX:{default:!0},enableNegZ:{default:!0},enablePosZ:{default:!0},mode:{default:"touch",oneOf:["swipe","touch","press"]}},init:function(){this.dVelocity=new THREE.Vector3,this.zVel=0,this.xVel=0,this.bindMethods()},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.dVelocity.set(0,0,0)},remove:function(){this.pause()},addEventListeners:function(){var t=this.data,e=this.el.sceneEl;switch(e.addEventListener("axismove",this.onAxisMove),t.mode){case"swipe":case"touch":e.addEventListener("trackpadtouchstart",this.onTouchStart),e.addEventListener("trackpadtouchend",this.onTouchEnd);break;case"press":e.addEventListener("trackpaddown",this.onTouchStart),e.addEventListener("trackpadup",this.onTouchEnd)}},removeEventListeners:function(){var t=this.el.sceneEl;t.removeEventListener("axismove",this.onAxisMove),t.removeEventListener("trackpadtouchstart",this.onTouchStart),t.removeEventListener("trackpadtouchend",this.onTouchEnd),t.removeEventListener("trackpaddown",this.onTouchStart),t.removeEventListener("trackpadup",this.onTouchEnd)},isVelocityActive:function(){return this.data.enabled&&this.isMoving},getVelocityDelta:function(){return this.dVelocity.z=this.isMoving?-this.zVel:1,this.dVelocity.x=this.isMoving?this.xVel:1,this.dVelocity.clone()},bindMethods:function(){this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onAxisMove=this.onAxisMove.bind(this)},onTouchStart:function(t){switch(this.data.mode){case"swipe":this.canRecordAxis=!0,this.startingAxisData=[];break;case"touch":case"press":this.isMoving=!0}t.preventDefault()},onTouchEnd:function(t){"swipe"==this.data.mode&&(this.startingAxisData=[]),this.isMoving=!1,t.preventDefault()},onAxisMove:function(t){switch(this.data.mode){case"swipe":return this.handleSwipeAxis(t);case"touch":case"press":return this.handleTouchAxis(t)}},handleSwipeAxis:function(t){var e=this.data,n=t.detail.axis;if(0===this.startingAxisData.length&&this.canRecordAxis&&(this.canRecordAxis=!1,this.startingAxisData[0]=n[0],this.startingAxisData[1]=n[1]),this.startingAxisData.length>0){var i=0,r=0;e.enableNegX&&n[0]<this.startingAxisData[0]&&(i=-1),e.enablePosX&&n[0]>this.startingAxisData[0]&&(i=1),e.enablePosZ&&n[1]>this.startingAxisData[1]&&(r=-1),e.enableNegZ&&n[1]<this.startingAxisData[1]&&(r=1);var o=Math.abs(this.startingAxisData[1]-n[1]);Math.abs(this.startingAxisData[0]-n[0])>o?(this.zVel=0,this.xVel=i,this.isMoving=!0):(this.xVel=0,this.zVel=r,this.isMoving=!0)}},handleTouchAxis:function(t){var e=this.data,n=t.detail.axis,i=0,r=0;e.enableNegX&&n[0]<0&&(i=-1),e.enablePosX&&n[0]>0&&(i=1),e.enablePosZ&&n[1]>0&&(r=-1),e.enableNegZ&&n[1]<0&&(r=1),Math.abs(n[0])>Math.abs(n[1])?(this.zVel=0,this.xVel=i):(this.xVel=0,this.zVel=r)}})},{}],20:[function(t,e,n){"use strict";function i(t){return t.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&")}var r={once:THREE.LoopOnce,repeat:THREE.LoopRepeat,pingpong:THREE.LoopPingPong};e.exports=AFRAME.registerComponent("animation-mixer",{schema:{clip:{default:"*"},duration:{default:0},clampWhenFinished:{default:!1,type:"boolean"},crossFadeDuration:{default:0},loop:{default:"repeat",oneOf:Object.keys(r)},repetitions:{default:1/0,min:0},timeScale:{default:1},startAt:{default:0}},init:function(){var t=this;this.model=null,this.mixer=null,this.activeActions=[];var e=this.el.getObject3D("mesh");e?this.load(e):this.el.addEventListener("model-loaded",function(e){t.load(e.detail.model)})},load:function(t){var e=this.el;this.model=t,this.mixer=new THREE.AnimationMixer(t),this.mixer.addEventListener("loop",function(t){e.emit("animation-loop",{action:t.action,loopDelta:t.loopDelta})}),this.mixer.addEventListener("finished",function(t){e.emit("animation-finished",{action:t.action,direction:t.direction})}),this.data.clip&&this.update({})},remove:function(){this.mixer&&this.mixer.stopAllAction()},update:function(t){if(t){var e=this.data,n=AFRAME.utils.diff(e,t);if("clip"in n)return this.stopAction(),void(e.clip&&this.playAction());this.activeActions.forEach(function(t){"duration"in n&&e.duration&&t.setDuration(e.duration),"clampWhenFinished"in n&&(t.clampWhenFinished=e.clampWhenFinished),("loop"in n||"repetitions"in n)&&t.setLoop(r[e.loop],e.repetitions),"timeScale"in n&&t.setEffectiveTimeScale(e.timeScale)})}},stopAction:function(){for(var t=this.data,e=0;e<this.activeActions.length;e++)t.crossFadeDuration?this.activeActions[e].fadeOut(t.crossFadeDuration):this.activeActions[e].stop();this.activeActions.length=0},playAction:function(){if(this.mixer){var t=this.model,e=this.data,n=t.animations||(t.geometry||{}).animations||[];if(n.length)for(var o,s=function(t){return new RegExp("^"+t.split(/\*+/).map(i).join(".*")+"$")}(e.clip),a=0;o=n[a];a++)if(o.name.match(s)){var c=this.mixer.clipAction(o,t);c.enabled=!0,c.clampWhenFinished=e.clampWhenFinished,e.duration&&c.setDuration(e.duration),1!==e.timeScale&&c.setEffectiveTimeScale(e.timeScale),c.startAt(this.mixer.time-e.startAt/1e3),c.setLoop(r[e.loop],e.repetitions).fadeIn(e.crossFadeDuration).play(),this.activeActions.push(c)}}},tick:function(t,e){this.mixer&&!isNaN(e)&&this.mixer.update(e/1e3)}})},{}],21:[function(t,e,n){"use strict";THREE.ColladaLoader=t("../../lib/ColladaLoader"),e.exports.Component=AFRAME.registerComponent("collada-model-legacy",{schema:{type:"asset"},init:function(){this.model=null,this.loader=new THREE.ColladaLoader},update:function(){var t=this,e=this.el,n=this.data,i=this.el.sceneEl.systems.renderer;n&&(this.remove(),this.loader.load(n,function(n){t.model=n.scene,t.model.traverse(function(t){if(t.isMesh){var e=t.material;e.color&&i.applyColorCorrection(e.color),e.map&&i.applyColorCorrection(e.map),e.emissive&&i.applyColorCorrection(e.emissive),e.emissiveMap&&i.applyColorCorrection(e.emissiveMap)}}),e.setObject3D("mesh",t.model),e.emit("model-loaded",{format:"collada",model:t.model})}))},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},{"../../lib/ColladaLoader":3}],22:[function(t,e,n){"use strict";THREE.FBXLoader=t("../../lib/FBXLoader"),e.exports=AFRAME.registerComponent("fbx-model",{schema:{src:{type:"asset"},crossorigin:{default:""}},init:function(){this.model=null},update:function(){var t=this.data;if(t.src){this.remove();var e=new THREE.FBXLoader;t.crossorigin&&e.setCrossOrigin(t.crossorigin),e.load(t.src,this.load.bind(this))}},load:function(t){this.model=t,this.el.setObject3D("mesh",t),this.el.emit("model-loaded",{format:"fbx",model:t})},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},{"../../lib/FBXLoader":4}],23:[function(t,e,n){"use strict";var i=t("../../lib/fetch-script")(),r=function(){var t=void 0;return function(){return t=t||i("https://cdn.jsdelivr.net/gh/mrdoob/three.js@r86/examples/js/loaders/GLTFLoader.js")}}();e.exports=AFRAME.registerComponent("gltf-model-legacy",{schema:{type:"model"},init:function(){var t=this;this.model=null,this.loader=null,this.loaderPromise=r().then(function(){t.loader=new THREE.GLTFLoader,t.loader.setCrossOrigin("Anonymous")})},update:function(){var t=this,e=this,n=this.el,i=this.data;i&&(this.remove(),this.loaderPromise.then(function(){t.loader.load(i,function(t){e.model=t.scene,e.model.animations=t.animations,n.setObject3D("mesh",e.model),n.emit("model-loaded",{format:"gltf",model:e.model})})}))},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},{"../../lib/fetch-script":7}],24:[function(t,e,n){"use strict";t("./animation-mixer"),t("./collada-model-legacy"),t("./fbx-model"),t("./gltf-model-legacy"),t("./object-model")},{"./animation-mixer":20,"./collada-model-legacy":21,"./fbx-model":22,"./gltf-model-legacy":23,"./object-model":25}],25:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("object-model",{schema:{src:{type:"asset"},crossorigin:{default:""}},init:function(){this.model=null},update:function(){var t=this,e=void 0,n=this.data;n.src&&(this.remove(),e=new THREE.ObjectLoader,n.crossorigin&&e.setCrossOrigin(n.crossorigin),e.load(n.src,function(e){e.traverse(function(t){t instanceof THREE.SkinnedMesh&&t.material&&(t.material.skinning=!!(t.geometry&&t.geometry.bones||[]).length)}),t.load(e)}))},load:function(t){this.model=t,this.el.setObject3D("mesh",t),this.el.emit("model-loaded",{format:"json",model:t})},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},{}],26:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("checkpoint",{schema:{offset:{default:{x:0,y:0,z:0},type:"vec3"}},init:function(){this.active=!1,this.targetEl=null,this.fire=this.fire.bind(this),this.offset=new THREE.Vector3},update:function(){this.offset.copy(this.data.offset)},play:function(){this.el.addEventListener("click",this.fire)},pause:function(){this.el.removeEventListener("click",this.fire)},remove:function(){this.pause()},fire:function(){var t=this.el.sceneEl.querySelector("[checkpoint-controls]");if(!t)throw new Error("No `checkpoint-controls` component found.");t.components["checkpoint-controls"].setCheckpoint(this.el)},getOffset:function(){return this.offset.copy(this.data.offset)}})},{}],27:[function(t,e,n){"use strict";function i(t,e,n,i){t&&(e=e||[],t.traverse(function(t){if(t.isMesh){(function(t){return t?Array.isArray(t)?t:t.materials?t.materials:[t]:[]})(t.material).forEach(function(t){(!t||"envMap"in t)&&(e.length&&-1===e.indexOf(t.name)||(t.envMap=n,t.reflectivity=i,t.needsUpdate=!0))})}}))}e.exports=AFRAME.registerComponent("cube-env-map",{multiple:!0,schema:{path:{default:""},extension:{default:"jpg",oneOf:["jpg","png"]},enableBackground:{default:!1},reflectivity:{default:1,min:0,max:1},materials:{default:[]}},init:function(){var t=this,e=this.data;this.texture=(new THREE.CubeTextureLoader).load([e.path+"posx."+e.extension,e.path+"negx."+e.extension,e.path+"posy."+e.extension,e.path+"negy."+e.extension,e.path+"posz."+e.extension,e.path+"negz."+e.extension]),this.texture.format=THREE.RGBAFormat,this.object3dsetHandler=function(){var e=t.el.getObject3D("mesh"),n=t.data;i(e,n.materials,t.texture,n.reflectivity)},this.object3dsetHandler(),this.el.addEventListener("object3dset",this.object3dsetHandler)},update:function(t){var e=this.data,n=this.el.getObject3D("mesh"),r=[],o=[];if(e.materials.length&&(t.materials?(r=e.materials.filter(function(e){return!t.materials.includes(e)}),o=t.materials.filter(function(t){return!e.materials.includes(t)})):r=e.materials),r.length&&i(n,r,this.texture,e.reflectivity),o.length&&i(n,o,null,1),t.materials&&e.reflectivity!==t.reflectivity){var s=e.materials.filter(function(e){return t.materials.includes(e)});s.length&&i(n,s,this.texture,e.reflectivity)}this.data.enableBackground&&!t.enableBackground?this.setBackground(this.texture):!this.data.enableBackground&&t.enableBackground&&this.setBackground(null)},remove:function(){this.el.removeEventListener("object3dset",this.object3dsetHandler);var t=this.el.getObject3D("mesh"),e=this.data;i(t,e.materials,null,1),e.enableBackground&&this.setBackground(null)},setBackground:function(t){this.el.sceneEl.object3D.background=t}})},{}],28:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("grab",{init:function(){this.system=this.el.sceneEl.systems.physics,this.GRABBED_STATE="grabbed",this.grabbing=!1,this.hitEl=null,this.physics=this.el.sceneEl.systems.physics,this.constraint=null,this.onHit=this.onHit.bind(this),this.onGripOpen=this.onGripOpen.bind(this),this.onGripClose=this.onGripClose.bind(this)},play:function(){var t=this.el;t.addEventListener("hit",this.onHit),t.addEventListener("gripdown",this.onGripClose),t.addEventListener("gripup",this.onGripOpen),t.addEventListener("trackpaddown",this.onGripClose),t.addEventListener("trackpadup",this.onGripOpen),t.addEventListener("triggerdown",this.onGripClose),t.addEventListener("triggerup",this.onGripOpen)},pause:function(){var t=this.el;t.removeEventListener("hit",this.onHit),t.removeEventListener("gripdown",this.onGripClose),t.removeEventListener("gripup",this.onGripOpen),t.removeEventListener("trackpaddown",this.onGripClose),t.removeEventListener("trackpadup",this.onGripOpen),t.removeEventListener("triggerdown",this.onGripClose),t.removeEventListener("triggerup",this.onGripOpen)},onGripClose:function(){this.grabbing=!0},onGripOpen:function(){var t=this.hitEl;this.grabbing=!1,t&&(t.removeState(this.GRABBED_STATE),this.hitEl=void 0,this.system.removeConstraint(this.constraint),this.constraint=null)},onHit:function(t){var e=t.detail.el;e.is(this.GRABBED_STATE)||!this.grabbing||this.hitEl||(e.addState(this.GRABBED_STATE),this.hitEl=e,this.constraint=new CANNON.LockConstraint(this.el.body,e.body),this.system.addConstraint(this.constraint))}})},{}],29:[function(t,e,n){"use strict";t("./checkpoint"),t("./cube-env-map"),t("./grab"),t("./normal-material"),t("./sphere-collider")},{"./checkpoint":26,"./cube-env-map":27,"./grab":28,"./normal-material":30,"./sphere-collider":31}],30:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("normal-material",{init:function(){this.material=new THREE.MeshNormalMaterial({flatShading:!0}),this.applyMaterial=this.applyMaterial.bind(this),this.el.addEventListener("object3dset",this.applyMaterial),this.applyMaterial()},remove:function(){this.el.removeEventListener("object3dset",this.applyMaterial)},applyMaterial:function(){var t=this;this.el.object3D.traverse(function(e){e.isMesh&&(e.material=t.material)})}})},{}],31:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("sphere-collider",{schema:{enabled:{default:!0},interval:{default:80},objects:{default:""},state:{default:"collided"},radius:{default:.05},watch:{default:!0}},init:function(){this.observer=null,this.els=[],this.collisions=[],this.prevCheckTime=void 0,this.eventDetail={},this.handleHit=this.handleHit.bind(this),this.handleHitEnd=this.handleHitEnd.bind(this)},play:function(){var t=this.el.sceneEl;this.data.watch&&(this.observer=new MutationObserver(this.update.bind(this,null)),this.observer.observe(t,{childList:!0,subtree:!0}))},pause:function(){this.observer&&(this.observer.disconnect(),this.observer=null)},update:function(){var t=this.data,e=void 0;e=t.objects?this.el.sceneEl.querySelectorAll(t.objects):this.el.sceneEl.children,this.els=Array.prototype.slice.call(e)},tick:function(){var t=new THREE.Vector3,e=new THREE.Vector3,n=new THREE.Vector3,i=new THREE.Vector3,r=new THREE.Box3,o=[],s=new Map;return function(a){if(this.data.enabled){var c=this.prevCheckTime;if(!(c&&a-c<this.data.interval)){this.prevCheckTime=a;var l=this.el,h=this.data,u=void 0;l.getObject3D("mesh")&&(o.length=0,s.clear(),l.object3D.getWorldPosition(t),l.object3D.getWorldScale(n),u=h.radius*function(t){return Math.max(t.x,t.y,t.z)}(n),this.els.forEach(function(n){var a=void 0,c=void 0,l=void 0,h=void 0;n.isEntity&&(c=n.getObject3D("mesh"))&&(r.setFromObject(c).getSize(i),h=Math.max(i.x,i.y,i.z)/2,a=Math.sqrt(2*h*h),r.getCenter(e),a&&(l=t.distanceTo(e))<a+u&&(o.push(n),s.set(n,l)))}),o.sort(function(t,e){return s.get(t)>s.get(e)?1:-1}).forEach(this.handleHit),this.collisions.filter(function(t){return!s.has(t)}).forEach(this.handleHitEnd),function(t,e){t.length=0;for(var n=0;n<e.length;n++)t[n]=e[n]}(this.collisions,o))}}}}(),handleHit:function(t){t.emit("hit"),t.addState(this.data.state),this.eventDetail.el=t,this.el.emit("hit",this.eventDetail)},handleHitEnd:function(t){t.emit("hitend"),t.removeState(this.data.state),this.eventDetail.el=t,this.el.emit("hitend",this.eventDetail)}})},{}],32:[function(t,e,n){"use strict";t("./nav-mesh"),t("./nav-agent"),t("./system")},{"./nav-agent":33,"./nav-mesh":34,"./system":35}],33:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("nav-agent",{schema:{destination:{type:"vec3"},active:{default:!1},speed:{default:2}},init:function(){this.system=this.el.sceneEl.systems.nav,this.system.addAgent(this),this.group=null,this.path=[],this.raycaster=new THREE.Raycaster},remove:function(){this.system.removeAgent(this)},update:function(){this.path.length=0},updateNavLocation:function(){this.group=null,this.path=[]},tick:function(){var t=new THREE.Vector3,e=new THREE.Vector3,n=new THREE.Vector3;return function(i,r){var o=this.el,s=this.data,a=this.raycaster,c=s.speed*r/1e3;if(s.active){if(!this.path.length){var l=this.el.object3D.position;this.group=this.group||this.system.getGroup(l),this.path=this.system.getPath(l,t.copy(s.destination),this.group)||[],o.emit("navigation-start")}if(!this.path.length)return console.warn("[nav] Unable to find path to %o.",s.destination),this.el.setAttribute("nav-agent",{active:!1}),void o.emit("navigation-end");var h=o.object3D.position,u=this.path[0];e.subVectors(u,h);var d=void 0;if(e.length()<c){if(this.path.shift(),!this.path.length)return this.el.setAttribute("nav-agent",{active:!1}),void o.emit("navigation-end");n.copy(h),d=this.path[0]}else n.copy(e.setLength(c)).add(h),d=u;d.y=h.y,o.object3D.lookAt(d),a.ray.origin.copy(n),a.ray.origin.y+=1.5,a.ray.direction={x:0,y:-1,z:0};var p=a.intersectObject(this.system.getNavMesh());p.length?(e.subVectors(p[0].point,h),h.add(e.setLength(c))):h.copy(n)}}}()})},{}],34:[function(t,e,n){"use strict";e.exports=AFRAME.registerComponent("nav-mesh",{schema:{nodeName:{type:"string"}},init:function(){this.system=this.el.sceneEl.systems.nav,this.hasLoadedNavMesh=!1,this.nodeName=this.data.nodeName,this.el.addEventListener("object3dset",this.loadNavMesh.bind(this))},play:function(){this.hasLoadedNavMesh||this.loadNavMesh()},loadNavMesh:function(){var t=this,e=this.el.getObject3D("mesh");this.el.sceneEl.object3D;if(e){var n=void 0;if(e.traverse(function(e){!e.isMesh||t.nodeName&&e.name!==t.nodeName||(n=e)}),n){var i=n.geometry.clone();n.updateWorldMatrix(!0,!1),i.applyMatrix4(n.matrixWorld),this.system.setNavMeshGeometry(i),this.hasLoadedNavMesh=!0}}}})},{}],35:[function(t,e,n){"use strict";var i=t("three-pathfinding").Pathfinding,r=new i,o="level";e.exports=AFRAME.registerSystem("nav",{init:function(){this.navMesh=null,this.agents=new Set},setNavMeshGeometry:function(t){this.navMesh=new THREE.Mesh(t),r.setZoneData(o,i.createZone(t)),Array.from(this.agents).forEach(function(t){return t.updateNavLocation()})},getNavMesh:function(){return this.navMesh},addAgent:function(t){this.agents.add(t)},removeAgent:function(t){this.agents.delete(t)},getPath:function(t,e,n){return this.navMesh?r.findPath(t,e,o,n):null},getGroup:function(t){return this.navMesh?r.getGroup(o,t):null},getNode:function(t,e){return this.navMesh?r.getClosestNode(t,o,e,!0):null},clampStep:function(t,e,n,i,s){return this.navMesh?i?r.clampStep(t,e,i,o,n,s):(s.copy(e),this.getNode(e,n)):(s.copy(e),null)}})},{"three-pathfinding":10}],36:[function(t,e,n){"use strict";e.exports=AFRAME.registerPrimitive("a-grid",{defaultComponents:{geometry:{primitive:"plane",width:75,height:75},rotation:{x:-90,y:0,z:0},material:{src:"url(https://cdn.jsdelivr.net/gh/donmccurdy/aframe-extras@v1.16.3/assets/grid.png)",repeat:"75 75"}},mappings:{width:"geometry.width",height:"geometry.height",src:"material.src"}})},{}],37:[function(t,e,n){"use strict";e.exports.Primitive=AFRAME.registerPrimitive("a-ocean",{defaultComponents:{ocean:{},rotation:{x:-90,y:0,z:0}},mappings:{width:"ocean.width",depth:"ocean.depth",density:"ocean.density",amplitude:"ocean.amplitude",amplitudeVariance:"ocean.amplitudeVariance",speed:"ocean.speed",speedVariance:"ocean.speedVariance",color:"ocean.color",opacity:"ocean.opacity"}}),e.exports.Component=AFRAME.registerComponent("ocean",{schema:{width:{default:10,min:0},depth:{default:10,min:0},density:{default:10},amplitude:{default:.1},amplitudeVariance:{default:.3},speed:{default:1},speedVariance:{default:2},color:{default:"#7AD2F7",type:"color"},opacity:{default:.8}},play:function(){var t=this.el,e=this.data,n=t.components.material,i=new THREE.PlaneGeometry(e.width,e.depth,e.density,e.density);this.waves=[];for(var r=i.getAttribute("position"),o=0;o<r.count;o++)this.waves.push({z:r.getZ(o),ang:Math.random()*Math.PI*2,amp:e.amplitude+Math.random()*e.amplitudeVariance,speed:(e.speed+Math.random()*e.speedVariance)/1e3});n||((n={}).material=new THREE.MeshPhongMaterial({color:e.color,transparent:e.opacity<1,opacity:e.opacity,flatShading:!0})),this.mesh=new THREE.Mesh(i,n.material),t.setObject3D("mesh",this.mesh)},remove:function(){this.el.removeObject3D("mesh")},tick:function(t,e){if(e){for(var n=this.mesh.geometry.getAttribute("position"),i=0;i<n.count;i++){var r=this.waves[i],o=r.z+Math.sin(r.ang)*r.amp;n.setZ(i,o),r.ang+=r.speed*e}n.needsUpdate=!0}}})},{}],38:[function(t,e,n){"use strict";e.exports.Primitive=AFRAME.registerPrimitive("a-tube",{defaultComponents:{tube:{}},mappings:{path:"tube.path",segments:"tube.segments",radius:"tube.radius","radial-segments":"tube.radialSegments",closed:"tube.closed"}}),e.exports.Component=AFRAME.registerComponent("tube",{schema:{path:{default:[]},segments:{default:64},radius:{default:1},radialSegments:{default:8},closed:{default:!1}},init:function(){var t=this.el,e=this.data,n=t.components.material;if(e.path.length){var i=new THREE.CatmullRomCurve3(e.path.map(function(t){return t=t.split(" "),new THREE.Vector3(Number(t[0]),Number(t[1]),Number(t[2]))})),r=new THREE.TubeGeometry(i,e.segments,e.radius,e.radialSegments,e.closed);n||((n={}).material=new THREE.MeshPhongMaterial),this.mesh=new THREE.Mesh(r,n.material),this.el.setObject3D("mesh",this.mesh)}else console.error("[a-tube] `path` property expected but not found.")},update:function(t){Object.keys(t).length&&(this.remove(),this.init())},remove:function(){this.mesh&&this.el.removeObject3D("mesh")}})},{}],39:[function(t,e,n){"use strict";t("./a-grid"),t("./a-ocean"),t("./a-tube")},{"./a-grid":36,"./a-ocean":37,"./a-tube":38}]},{},[1]);