!function e(t,r,i){function o(s,c){if(!r[s]){if(!t[s]){var l="function"==typeof require&&require;if(!c&&l)return l(s,!0);if(n)return n(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var a=r[s]={exports:{}};t[s][0].call(a.exports,function(e){var r=t[s][1][e];return o(r?r:e)},a,a.exports,e,t,r,i)}return r[s].exports}for(var n="function"==typeof require&&require,s=0;s<i.length;s++)o(i[s]);return o}({1:[function(e,t,r){AFRAME.registerComponent("sphere-collider",e("./src/misc/sphere-collider"))},{"./src/misc/sphere-collider":2}],2:[function(e,t,r){t.exports={schema:{objects:{"default":""},state:{"default":"collided"},radius:{"default":.05}},init:function(){this.els=[],this.collisions=[]},update:function(){var e,t=this.data;e=t.objects?this.el.sceneEl.querySelectorAll(t.objects):this.el.sceneEl.children,this.els=Array.prototype.slice.call(e)},tick:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){function r(r){var i,o=r.getObject3D("mesh");o&&(o.getWorldPosition(t),o.geometry.computeBoundingSphere(),i=o.geometry.boundingSphere.radius,e.distanceTo(t)<i+n.radius&&c.push(r))}function i(e){e.emit("hit"),e.addState(n.state),o.emit("hit",{el:e})}var o=this.el,n=this.data,s=o.getObject3D("mesh"),c=[];s&&(e.copy(o.getAttribute("position")),this.els.forEach(r),c.forEach(i),0===c.length&&o.emit("hit",{el:null}),this.collisions.filter(function(e){return c.indexOf(e)===-1}).forEach(function(e){e.removeState(n.state)}),this.collisions=c)}}()}},{}]},{},[1]);