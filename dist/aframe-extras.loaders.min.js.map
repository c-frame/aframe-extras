{"version":3,"file":"aframe-extras.loaders.min.js","mappings":"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","sources":["webpack://aframe-extras/webpack/universalModuleDefinition","webpack://aframe-extras/./lib/ColladaLoader.js","webpack://aframe-extras/./lib/fetch-script.js","webpack://aframe-extras/./src/loaders/animation-mixer.js","webpack://aframe-extras/./src/loaders/collada-model-legacy.js","webpack://aframe-extras/./node_modules/three/examples/jsm/libs/fflate.module.js","webpack://aframe-extras/./node_modules/three/examples/jsm/curves/NURBSUtils.js","webpack://aframe-extras/./node_modules/three/examples/jsm/curves/NURBSCurve.js","webpack://aframe-extras/./node_modules/three/examples/jsm/loaders/FBXLoader.js","webpack://aframe-extras/./src/loaders/fbx-model.js","webpack://aframe-extras/./src/loaders/gltf-model-legacy.js","webpack://aframe-extras/./src/loaders/object-model.js","webpack://aframe-extras/external umd \"THREE\"","webpack://aframe-extras/webpack/bootstrap","webpack://aframe-extras/webpack/runtime/make namespace object","webpack://aframe-extras/./src/loaders/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"THREE\")) : factory(root[\"THREE\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__612__) => {\nreturn ","/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nmodule.exports = THREE.ColladaLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ColladaLoader.prototype = {\n\n  constructor: THREE.ColladaLoader,\n\n  crossOrigin: 'anonymous',\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var path = ( scope.path === undefined ) ? THREE.LoaderUtils.extractUrlBase( url ) : scope.path;\n\n    var loader = new THREE.FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.load( url, function ( text ) {\n\n      onLoad( scope.parse( text, path ) );\n\n    }, onProgress, onError );\n\n  },\n\n  setPath: function ( value ) {\n\n    this.path = value;\n    return this;\n\n  },\n\n  setResourcePath: function ( value ) {\n\n    this.resourcePath = value;\n    return this;\n\n  },\n\n  options: {\n\n    set convertUpAxis( value ) {\n\n      console.warn( 'THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.' );\n\n    }\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n    return this;\n\n  },\n\n  parse: function ( text, path ) {\n\n    function getElementsByTagName( xml, name ) {\n\n      // Non recursive xml.getElementsByTagName() ...\n\n      var array = [];\n      var childNodes = xml.childNodes;\n\n      for ( var i = 0, l = childNodes.length; i < l; i ++ ) {\n\n        var child = childNodes[ i ];\n\n        if ( child.nodeName === name ) {\n\n          array.push( child );\n\n        }\n\n      }\n\n      return array;\n\n    }\n\n    function parseStrings( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parts[ i ];\n\n      }\n\n      return array;\n\n    }\n\n    function parseFloats( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parseFloat( parts[ i ] );\n\n      }\n\n      return array;\n\n    }\n\n    function parseInts( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parseInt( parts[ i ] );\n\n      }\n\n      return array;\n\n    }\n\n    function parseId( text ) {\n\n      return text.substring( 1 );\n\n    }\n\n    function generateId() {\n\n      return 'three_default_' + ( count ++ );\n\n    }\n\n    function isEmpty( object ) {\n\n      return Object.keys( object ).length === 0;\n\n    }\n\n    // asset\n\n    function parseAsset( xml ) {\n\n      return {\n        unit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n        upAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n      };\n\n    }\n\n    function parseAssetUnit( xml ) {\n\n      if ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n        return parseFloat( xml.getAttribute( 'meter' ) );\n\n      } else {\n\n        return 1; // default 1 meter\n\n      }\n\n    }\n\n    function parseAssetUpAxis( xml ) {\n\n      return xml !== undefined ? xml.textContent : 'Y_UP';\n\n    }\n\n    // library\n\n    function parseLibrary( xml, libraryName, nodeName, parser ) {\n\n      var library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n      if ( library !== undefined ) {\n\n        var elements = getElementsByTagName( library, nodeName );\n\n        for ( var i = 0; i < elements.length; i ++ ) {\n\n          parser( elements[ i ] );\n\n        }\n\n      }\n\n    }\n\n    function buildLibrary( data, builder ) {\n\n      for ( var name in data ) {\n\n        var object = data[ name ];\n        object.build = builder( data[ name ] );\n\n      }\n\n    }\n\n    // get\n\n    function getBuild( data, builder ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      data.build = builder( data );\n\n      return data.build;\n\n    }\n\n    // animation\n\n    function parseAnimation( xml ) {\n\n      var data = {\n        sources: {},\n        samplers: {},\n        channels: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        var id;\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            id = child.getAttribute( 'id' );\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'sampler':\n            id = child.getAttribute( 'id' );\n            data.samplers[ id ] = parseAnimationSampler( child );\n            break;\n\n          case 'channel':\n            id = child.getAttribute( 'target' );\n            data.channels[ id ] = parseAnimationChannel( child );\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      library.animations[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseAnimationSampler( xml ) {\n\n      var data = {\n        inputs: {},\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var id = parseId( child.getAttribute( 'source' ) );\n            var semantic = child.getAttribute( 'semantic' );\n            data.inputs[ semantic ] = id;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseAnimationChannel( xml ) {\n\n      var data = {};\n\n      var target = xml.getAttribute( 'target' );\n\n      // parsing SID Addressing Syntax\n\n      var parts = target.split( '/' );\n\n      var id = parts.shift();\n      var sid = parts.shift();\n\n      // check selection syntax\n\n      var arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n      var memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n      if ( memberSyntax ) {\n\n        //  member selection access\n\n        parts = sid.split( '.' );\n        sid = parts.shift();\n        data.member = parts.shift();\n\n      } else if ( arraySyntax ) {\n\n        // array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n        var indices = sid.split( '(' );\n        sid = indices.shift();\n\n        for ( var i = 0; i < indices.length; i ++ ) {\n\n          indices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n        }\n\n        data.indices = indices;\n\n      }\n\n      data.id = id;\n      data.sid = sid;\n\n      data.arraySyntax = arraySyntax;\n      data.memberSyntax = memberSyntax;\n\n      data.sampler = parseId( xml.getAttribute( 'source' ) );\n\n      return data;\n\n    }\n\n    function buildAnimation( data ) {\n\n      var tracks = [];\n\n      var channels = data.channels;\n      var samplers = data.samplers;\n      var sources = data.sources;\n\n      for ( var target in channels ) {\n\n        if ( channels.hasOwnProperty( target ) ) {\n\n          var channel = channels[ target ];\n          var sampler = samplers[ channel.sampler ];\n\n          var inputId = sampler.inputs.INPUT;\n          var outputId = sampler.inputs.OUTPUT;\n\n          var inputSource = sources[ inputId ];\n          var outputSource = sources[ outputId ];\n\n          var animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n          createKeyframeTracks( animation, tracks );\n\n        }\n\n      }\n\n      return tracks;\n\n    }\n\n    function getAnimation( id ) {\n\n      return getBuild( library.animations[ id ], buildAnimation );\n\n    }\n\n    function buildAnimationChannel( channel, inputSource, outputSource ) {\n\n      var node = library.nodes[ channel.id ];\n      var object3D = getNode( node.id );\n\n      var transform = node.transforms[ channel.sid ];\n      var defaultMatrix = node.matrix.clone().transpose();\n\n      var time, stride;\n      var i, il, j, jl;\n\n      var data = {};\n\n      // the collada spec allows the animation of data in various ways.\n      // depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n      switch ( transform ) {\n\n        case 'matrix':\n\n          for ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n            time = inputSource.array[ i ];\n            stride = i * outputSource.stride;\n\n            if ( data[ time ] === undefined ) data[ time ] = {};\n\n            if ( channel.arraySyntax === true ) {\n\n              var value = outputSource.array[ stride ];\n              var index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n              data[ time ][ index ] = value;\n\n            } else {\n\n              for ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n                data[ time ][ j ] = outputSource.array[ stride + j ];\n\n              }\n\n            }\n\n          }\n\n          break;\n\n        case 'translate':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n        case 'rotate':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n        case 'scale':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n      }\n\n      var keyframes = prepareAnimationData( data, defaultMatrix );\n\n      var animation = {\n        name: object3D.uuid,\n        keyframes: keyframes\n      };\n\n      return animation;\n\n    }\n\n    function prepareAnimationData( data, defaultMatrix ) {\n\n      var keyframes = [];\n\n      // transfer data into a sortable array\n\n      for ( var time in data ) {\n\n        keyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n      }\n\n      // ensure keyframes are sorted by time\n\n      keyframes.sort( ascending );\n\n      // now we clean up all animation data, so we can use them for keyframe tracks\n\n      for ( var i = 0; i < 16; i ++ ) {\n\n        transformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n      }\n\n      return keyframes;\n\n      // array sort function\n\n      function ascending( a, b ) {\n\n        return a.time - b.time;\n\n      }\n\n    }\n\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n\n    function createKeyframeTracks( animation, tracks ) {\n\n      var keyframes = animation.keyframes;\n      var name = animation.name;\n\n      var times = [];\n      var positionData = [];\n      var quaternionData = [];\n      var scaleData = [];\n\n      for ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        var keyframe = keyframes[ i ];\n\n        var time = keyframe.time;\n        var value = keyframe.value;\n\n        matrix.fromArray( value ).transpose();\n        matrix.decompose( position, quaternion, scale );\n\n        times.push( time );\n        positionData.push( position.x, position.y, position.z );\n        quaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n        scaleData.push( scale.x, scale.y, scale.z );\n\n      }\n\n      if ( positionData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.position', times, positionData ) );\n      if ( quaternionData.length > 0 ) tracks.push( new THREE.QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n      if ( scaleData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n      return tracks;\n\n    }\n\n    function transformAnimationData( keyframes, property, defaultValue ) {\n\n      var keyframe;\n\n      var empty = true;\n      var i, l;\n\n      // check, if values of a property are missing in our keyframes\n\n      for ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] === undefined ) {\n\n          keyframe.value[ property ] = null; // mark as missing\n\n        } else {\n\n          empty = false;\n\n        }\n\n      }\n\n      if ( empty === true ) {\n\n        // no values at all, so we set a default value\n\n        for ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n          keyframe = keyframes[ i ];\n\n          keyframe.value[ property ] = defaultValue;\n\n        }\n\n      } else {\n\n        // filling gaps\n\n        createMissingKeyframes( keyframes, property );\n\n      }\n\n    }\n\n    function createMissingKeyframes( keyframes, property ) {\n\n      var prev, next;\n\n      for ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] === null ) {\n\n          prev = getPrev( keyframes, i, property );\n          next = getNext( keyframes, i, property );\n\n          if ( prev === null ) {\n\n            keyframe.value[ property ] = next.value[ property ];\n            continue;\n\n          }\n\n          if ( next === null ) {\n\n            keyframe.value[ property ] = prev.value[ property ];\n            continue;\n\n          }\n\n          interpolate( keyframe, prev, next, property );\n\n        }\n\n      }\n\n    }\n\n    function getPrev( keyframes, i, property ) {\n\n      while ( i >= 0 ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] !== null ) return keyframe;\n\n        i --;\n\n      }\n\n      return null;\n\n    }\n\n    function getNext( keyframes, i, property ) {\n\n      while ( i < keyframes.length ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] !== null ) return keyframe;\n\n        i ++;\n\n      }\n\n      return null;\n\n    }\n\n    function interpolate( key, prev, next, property ) {\n\n      if ( ( next.time - prev.time ) === 0 ) {\n\n        key.value[ property ] = prev.value[ property ];\n        return;\n\n      }\n\n      key.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n    }\n\n    // animation clips\n\n    function parseAnimationClip( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'id' ) || 'default',\n        start: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n        end: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n        animations: []\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'instance_animation':\n            data.animations.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n        }\n\n      }\n\n      library.clips[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildAnimationClip( data ) {\n\n      var tracks = [];\n\n      var name = data.name;\n      var duration = ( data.end - data.start ) || - 1;\n      var animations = data.animations;\n\n      for ( var i = 0, il = animations.length; i < il; i ++ ) {\n\n        var animationTracks = getAnimation( animations[ i ] );\n\n        for ( var j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n          tracks.push( animationTracks[ j ] );\n\n        }\n\n      }\n\n      return new THREE.AnimationClip( name, duration, tracks );\n\n    }\n\n    function getAnimationClip( id ) {\n\n      return getBuild( library.clips[ id ], buildAnimationClip );\n\n    }\n\n    // controller\n\n    function parseController( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'skin':\n            // there is exactly one skin per controller\n            data.id = parseId( child.getAttribute( 'source' ) );\n            data.skin = parseSkin( child );\n            break;\n\n          case 'morph':\n            data.id = parseId( child.getAttribute( 'source' ) );\n            console.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n            break;\n\n        }\n\n      }\n\n      library.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseSkin( xml ) {\n\n      var data = {\n        sources: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'bind_shape_matrix':\n            data.bindShapeMatrix = parseFloats( child.textContent );\n            break;\n\n          case 'source':\n            var id = child.getAttribute( 'id' );\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'joints':\n            data.joints = parseJoints( child );\n            break;\n\n          case 'vertex_weights':\n            data.vertexWeights = parseVertexWeights( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseJoints( xml ) {\n\n      var data = {\n        inputs: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var semantic = child.getAttribute( 'semantic' );\n            var id = parseId( child.getAttribute( 'source' ) );\n            data.inputs[ semantic ] = id;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseVertexWeights( xml ) {\n\n      var data = {\n        inputs: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var semantic = child.getAttribute( 'semantic' );\n            var id = parseId( child.getAttribute( 'source' ) );\n            var offset = parseInt( child.getAttribute( 'offset' ) );\n            data.inputs[ semantic ] = { id: id, offset: offset };\n            break;\n\n          case 'vcount':\n            data.vcount = parseInts( child.textContent );\n            break;\n\n          case 'v':\n            data.v = parseInts( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildController( data ) {\n\n      var build = {\n        id: data.id\n      };\n\n      var geometry = library.geometries[ build.id ];\n\n      if ( data.skin !== undefined ) {\n\n        build.skin = buildSkin( data.skin );\n\n        // we enhance the 'sources' property of the corresponding geometry with our skin data\n\n        geometry.sources.skinIndices = build.skin.indices;\n        geometry.sources.skinWeights = build.skin.weights;\n\n      }\n\n      return build;\n\n    }\n\n    function buildSkin( data ) {\n\n      var BONE_LIMIT = 4;\n\n      var build = {\n        joints: [], // this must be an array to preserve the joint order\n        indices: {\n          array: [],\n          stride: BONE_LIMIT\n        },\n        weights: {\n          array: [],\n          stride: BONE_LIMIT\n        }\n      };\n\n      var sources = data.sources;\n      var vertexWeights = data.vertexWeights;\n\n      var vcount = vertexWeights.vcount;\n      var v = vertexWeights.v;\n      var jointOffset = vertexWeights.inputs.JOINT.offset;\n      var weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n      var jointSource = data.sources[ data.joints.inputs.JOINT ];\n      var inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n      var weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n      var stride = 0;\n\n      var i, j, l;\n\n      // procces skin data for each vertex\n\n      for ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n        var jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n        var vertexSkinData = [];\n\n        for ( j = 0; j < jointCount; j ++ ) {\n\n          var skinIndex = v[ stride + jointOffset ];\n          var weightId = v[ stride + weightOffset ];\n          var skinWeight = weights[ weightId ];\n\n          vertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n          stride += 2;\n\n        }\n\n        // we sort the joints in descending order based on the weights.\n        // this ensures, we only procced the most important joints of the vertex\n\n        vertexSkinData.sort( descending );\n\n        // now we provide for each vertex a set of four index and weight values.\n        // the order of the skin data matches the order of vertices\n\n        for ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n          var d = vertexSkinData[ j ];\n\n          if ( d !== undefined ) {\n\n            build.indices.array.push( d.index );\n            build.weights.array.push( d.weight );\n\n          } else {\n\n            build.indices.array.push( 0 );\n            build.weights.array.push( 0 );\n\n          }\n\n        }\n\n      }\n\n      // setup bind matrix\n\n      if ( data.bindShapeMatrix ) {\n\n        build.bindMatrix = new THREE.Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n      } else {\n\n        build.bindMatrix = new THREE.Matrix4().identity();\n\n      }\n\n      // process bones and inverse bind matrix data\n\n      for ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n        var name = jointSource.array[ i ];\n        var boneInverse = new THREE.Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n        build.joints.push( { name: name, boneInverse: boneInverse } );\n\n      }\n\n      return build;\n\n      // array sort function\n\n      function descending( a, b ) {\n\n        return b.weight - a.weight;\n\n      }\n\n    }\n\n    function getController( id ) {\n\n      return getBuild( library.controllers[ id ], buildController );\n\n    }\n\n    // image\n\n    function parseImage( xml ) {\n\n      var data = {\n        init_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n      };\n\n      library.images[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildImage( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data.init_from;\n\n    }\n\n    function getImage( id ) {\n\n      var data = library.images[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildImage );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n      return null;\n\n    }\n\n    // effect\n\n    function parseEffect( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'profile_COMMON':\n            data.profile = parseEffectProfileCOMMON( child );\n            break;\n\n        }\n\n      }\n\n      library.effects[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseEffectProfileCOMMON( xml ) {\n\n      var data = {\n        surfaces: {},\n        samplers: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'newparam':\n            parseEffectNewparam( child, data );\n            break;\n\n          case 'technique':\n            data.technique = parseEffectTechnique( child );\n            break;\n\n          case 'extra':\n            data.extra = parseEffectExtra( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectNewparam( xml, data ) {\n\n      var sid = xml.getAttribute( 'sid' );\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'surface':\n            data.surfaces[ sid ] = parseEffectSurface( child );\n            break;\n\n          case 'sampler2D':\n            data.samplers[ sid ] = parseEffectSampler( child );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectSurface( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'init_from':\n            data.init_from = child.textContent;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectSampler( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            data.source = child.textContent;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'constant':\n          case 'lambert':\n          case 'blinn':\n          case 'phong':\n            data.type = child.nodeName;\n            data.parameters = parseEffectParameters( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'emission':\n          case 'diffuse':\n          case 'specular':\n          case 'bump':\n          case 'ambient':\n          case 'shininess':\n          case 'transparency':\n            data[ child.nodeName ] = parseEffectParameter( child );\n            break;\n          case 'transparent':\n            data[ child.nodeName ] = {\n              opaque: child.getAttribute( 'opaque' ),\n              data: parseEffectParameter( child )\n            };\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameter( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'color':\n            data[ child.nodeName ] = parseFloats( child.textContent );\n            break;\n\n          case 'float':\n            data[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n          case 'texture':\n            data[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameterTexture( xml ) {\n\n      var data = {\n        technique: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'extra':\n            parseEffectParameterTextureExtra( child, data );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameterTextureExtra( xml, data ) {\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique':\n            parseEffectParameterTextureExtraTechnique( child, data );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'repeatU':\n          case 'repeatV':\n          case 'offsetU':\n          case 'offsetV':\n            data.technique[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n          case 'wrapU':\n          case 'wrapV':\n\n            // some files have values for wrapU/wrapV which become NaN via parseInt\n\n            if ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n              data.technique[ child.nodeName ] = 1;\n\n            } else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n              data.technique[ child.nodeName ] = 0;\n\n            } else {\n\n              data.technique[ child.nodeName ] = parseInt( child.textContent );\n\n            }\n\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectExtra( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique':\n            data.technique = parseEffectExtraTechnique( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectExtraTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'double_sided':\n            data[ child.nodeName ] = parseInt( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildEffect( data ) {\n\n      return data;\n\n    }\n\n    function getEffect( id ) {\n\n      return getBuild( library.effects[ id ], buildEffect );\n\n    }\n\n    // material\n\n    function parseMaterial( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' )\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'instance_effect':\n            data.url = parseId( child.getAttribute( 'url' ) );\n            break;\n\n        }\n\n      }\n\n      library.materials[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function getTextureLoader( image ) {\n\n      var loader;\n\n      var extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n      extension = extension.toLowerCase();\n\n      switch ( extension ) {\n\n        case 'tga':\n          loader = tgaLoader;\n          break;\n\n        default:\n          loader = textureLoader;\n\n      }\n\n      return loader;\n\n    }\n\n    function buildMaterial( data ) {\n\n      var effect = getEffect( data.url );\n      var technique = effect.profile.technique;\n      var extra = effect.profile.extra;\n\n      var material;\n\n      switch ( technique.type ) {\n\n        case 'phong':\n        case 'blinn':\n          material = new THREE.MeshPhongMaterial();\n          break;\n\n        case 'lambert':\n          material = new THREE.MeshLambertMaterial();\n          break;\n\n        default:\n          material = new THREE.MeshBasicMaterial();\n          break;\n\n      }\n\n      material.name = data.name;\n\n      function getTexture( textureObject ) {\n\n        var sampler = effect.profile.samplers[ textureObject.id ];\n        var image = null;\n\n        // get image\n\n        if ( sampler !== undefined ) {\n\n          var surface = effect.profile.surfaces[ sampler.source ];\n          image = getImage( surface.init_from );\n\n        } else {\n\n          console.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n          image = getImage( textureObject.id );\n\n        }\n\n        // create texture if image is avaiable\n\n        if ( image !== null ) {\n\n          var loader = getTextureLoader( image );\n\n          if ( loader !== undefined ) {\n\n            var texture = loader.load( image );\n\n            var extra = textureObject.extra;\n\n            if ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n              var technique = extra.technique;\n\n              texture.wrapS = technique.wrapU ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n              texture.wrapT = technique.wrapV ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n              texture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n              texture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n            } else {\n\n              texture.wrapS = THREE.RepeatWrapping;\n              texture.wrapT = THREE.RepeatWrapping;\n\n            }\n\n            return texture;\n\n          } else {\n\n            console.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n            return null;\n\n          }\n\n        } else {\n\n          console.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n          return null;\n\n        }\n\n      }\n\n      var parameters = technique.parameters;\n\n      for ( var key in parameters ) {\n\n        var parameter = parameters[ key ];\n\n        switch ( key ) {\n\n          case 'diffuse':\n            if ( parameter.color ) material.color.fromArray( parameter.color );\n            if ( parameter.texture ) material.map = getTexture( parameter.texture );\n            break;\n          case 'specular':\n            if ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n            if ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n            break;\n          case 'bump':\n            if ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n            break;\n          case 'ambient':\n            if ( parameter.texture ) material.lightMap = getTexture( parameter.texture );\n            break;\n          case 'shininess':\n            if ( parameter.float && material.shininess ) material.shininess = parameter.float;\n            break;\n          case 'emission':\n            if ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n            if ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture );\n            break;\n\n        }\n\n      }\n\n      //\n\n      var transparent = parameters[ 'transparent' ];\n      var transparency = parameters[ 'transparency' ];\n\n      // <transparency> does not exist but <transparent>\n\n      if ( transparency === undefined && transparent ) {\n\n        transparency = {\n          float: 1\n        };\n\n      }\n\n      // <transparent> does not exist but <transparency>\n\n      if ( transparent === undefined && transparency ) {\n\n        transparent = {\n          opaque: 'A_ONE',\n          data: {\n            color: [ 1, 1, 1, 1 ]\n          } };\n\n      }\n\n      if ( transparent && transparency ) {\n\n        // handle case if a texture exists but no color\n\n        if ( transparent.data.texture ) {\n\n          // we do not set an alpha map (see #13792)\n\n          material.transparent = true;\n\n        } else {\n\n          var color = transparent.data.color;\n\n          switch ( transparent.opaque ) {\n\n            case 'A_ONE':\n              material.opacity = color[ 3 ] * transparency.float;\n              break;\n            case 'RGB_ZERO':\n              material.opacity = 1 - ( color[ 0 ] * transparency.float );\n              break;\n            case 'A_ZERO':\n              material.opacity = 1 - ( color[ 3 ] * transparency.float );\n              break;\n            case 'RGB_ONE':\n              material.opacity = color[ 0 ] * transparency.float;\n              break;\n            default:\n              console.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n          }\n\n          if ( material.opacity < 1 ) material.transparent = true;\n\n        }\n\n      }\n\n      //\n\n      if ( extra !== undefined && extra.technique !== undefined && extra.technique.double_sided === 1 ) {\n\n        material.side = THREE.DoubleSide;\n\n      }\n\n      return material;\n\n    }\n\n    function getMaterial( id ) {\n\n      return getBuild( library.materials[ id ], buildMaterial );\n\n    }\n\n    // camera\n\n    function parseCamera( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' )\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'optics':\n            data.optics = parseCameraOptics( child );\n            break;\n\n        }\n\n      }\n\n      library.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseCameraOptics( xml ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            return parseCameraTechnique( child );\n\n        }\n\n      }\n\n      return {};\n\n    }\n\n    function parseCameraTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'perspective':\n          case 'orthographic':\n\n            data.technique = child.nodeName;\n            data.parameters = parseCameraParameters( child );\n\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseCameraParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'xfov':\n          case 'yfov':\n          case 'xmag':\n          case 'ymag':\n          case 'znear':\n          case 'zfar':\n          case 'aspect_ratio':\n            data[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildCamera( data ) {\n\n      var camera;\n\n      switch ( data.optics.technique ) {\n\n        case 'perspective':\n          camera = new THREE.PerspectiveCamera(\n            data.optics.parameters.yfov,\n            data.optics.parameters.aspect_ratio,\n            data.optics.parameters.znear,\n            data.optics.parameters.zfar\n          );\n          break;\n\n        case 'orthographic':\n          var ymag = data.optics.parameters.ymag;\n          var xmag = data.optics.parameters.xmag;\n          var aspectRatio = data.optics.parameters.aspect_ratio;\n\n          xmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n          ymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n          xmag *= 0.5;\n          ymag *= 0.5;\n\n          camera = new THREE.OrthographicCamera(\n            - xmag, xmag, ymag, - ymag, // left, right, top, bottom\n            data.optics.parameters.znear,\n            data.optics.parameters.zfar\n          );\n          break;\n\n        default:\n          camera = new THREE.PerspectiveCamera();\n          break;\n\n      }\n\n      camera.name = data.name;\n\n      return camera;\n\n    }\n\n    function getCamera( id ) {\n\n      var data = library.cameras[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildCamera );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n      return null;\n\n    }\n\n    // light\n\n    function parseLight( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            data = parseLightTechnique( child );\n            break;\n\n        }\n\n      }\n\n      library.lights[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseLightTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'directional':\n          case 'point':\n          case 'spot':\n          case 'ambient':\n\n            data.technique = child.nodeName;\n            data.parameters = parseLightParameters( child );\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseLightParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'color':\n            var array = parseFloats( child.textContent );\n            data.color = new THREE.Color().fromArray( array );\n            break;\n\n          case 'falloff_angle':\n            data.falloffAngle = parseFloat( child.textContent );\n            break;\n\n          case 'quadratic_attenuation':\n            var f = parseFloat( child.textContent );\n            data.distance = f ? Math.sqrt( 1 / f ) : 0;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildLight( data ) {\n\n      var light;\n\n      switch ( data.technique ) {\n\n        case 'directional':\n          light = new THREE.DirectionalLight();\n          break;\n\n        case 'point':\n          light = new THREE.PointLight();\n          break;\n\n        case 'spot':\n          light = new THREE.SpotLight();\n          break;\n\n        case 'ambient':\n          light = new THREE.AmbientLight();\n          break;\n\n      }\n\n      if ( data.parameters.color ) light.color.copy( data.parameters.color );\n      if ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n      return light;\n\n    }\n\n    function getLight( id ) {\n\n      var data = library.lights[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildLight );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n      return null;\n\n    }\n\n    // geometry\n\n    function parseGeometry( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ),\n        sources: {},\n        vertices: {},\n        primitives: []\n      };\n\n      var mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n      // the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n      if ( mesh === undefined ) return;\n\n      for ( var i = 0; i < mesh.childNodes.length; i ++ ) {\n\n        var child = mesh.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        var id = child.getAttribute( 'id' );\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'vertices':\n            // data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n            data.vertices = parseGeometryVertices( child );\n            break;\n\n          case 'polygons':\n            console.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n            break;\n\n          case 'lines':\n          case 'linestrips':\n          case 'polylist':\n          case 'triangles':\n            data.primitives.push( parseGeometryPrimitive( child ) );\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      library.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseSource( xml ) {\n\n      var data = {\n        array: [],\n        stride: 3\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'float_array':\n            data.array = parseFloats( child.textContent );\n            break;\n\n          case 'Name_array':\n            data.array = parseStrings( child.textContent );\n            break;\n\n          case 'technique_common':\n            var accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n            if ( accessor !== undefined ) {\n\n              data.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n            }\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseGeometryVertices( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        data[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n      }\n\n      return data;\n\n    }\n\n    function parseGeometryPrimitive( xml ) {\n\n      var primitive = {\n        type: xml.nodeName,\n        material: xml.getAttribute( 'material' ),\n        count: parseInt( xml.getAttribute( 'count' ) ),\n        inputs: {},\n        stride: 0,\n        hasUV: false\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var id = parseId( child.getAttribute( 'source' ) );\n            var semantic = child.getAttribute( 'semantic' );\n            var offset = parseInt( child.getAttribute( 'offset' ) );\n            var set = parseInt( child.getAttribute( 'set' ) );\n            var inputname = ( set > 0 ? semantic + set : semantic );\n            primitive.inputs[ inputname ] = { id: id, offset: offset };\n            primitive.stride = Math.max( primitive.stride, offset + 1 );\n            if ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n            break;\n\n          case 'vcount':\n            primitive.vcount = parseInts( child.textContent );\n            break;\n\n          case 'p':\n            primitive.p = parseInts( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return primitive;\n\n    }\n\n    function groupPrimitives( primitives ) {\n\n      var build = {};\n\n      for ( var i = 0; i < primitives.length; i ++ ) {\n\n        var primitive = primitives[ i ];\n\n        if ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n        build[ primitive.type ].push( primitive );\n\n      }\n\n      return build;\n\n    }\n\n    function checkUVCoordinates( primitives ) {\n\n      var count = 0;\n\n      for ( var i = 0, l = primitives.length; i < l; i ++ ) {\n\n        var primitive = primitives[ i ];\n\n        if ( primitive.hasUV === true ) {\n\n          count ++;\n\n        }\n\n      }\n\n      if ( count > 0 && count < primitives.length ) {\n\n        primitives.uvsNeedsFix = true;\n\n      }\n\n    }\n\n    function buildGeometry( data ) {\n\n      var build = {};\n\n      var sources = data.sources;\n      var vertices = data.vertices;\n      var primitives = data.primitives;\n\n      if ( primitives.length === 0 ) return {};\n\n      // our goal is to create one buffer geometry for a single type of primitives\n      // first, we group all primitives by their type\n\n      var groupedPrimitives = groupPrimitives( primitives );\n\n      for ( var type in groupedPrimitives ) {\n\n        var primitiveType = groupedPrimitives[ type ];\n\n        // second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n        checkUVCoordinates( primitiveType );\n\n        // third, create a buffer geometry for each type of primitives\n\n        build[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n      }\n\n      return build;\n\n    }\n\n    function buildGeometryType( primitives, sources, vertices ) {\n\n      var build = {};\n\n      var position = { array: [], stride: 0 };\n      var normal = { array: [], stride: 0 };\n      var uv = { array: [], stride: 0 };\n      var uv2 = { array: [], stride: 0 };\n      var color = { array: [], stride: 0 };\n\n      var skinIndex = { array: [], stride: 4 };\n      var skinWeight = { array: [], stride: 4 };\n\n      var geometry = new THREE.BufferGeometry();\n\n      var materialKeys = [];\n\n      var start = 0;\n\n      for ( var p = 0; p < primitives.length; p ++ ) {\n\n        var primitive = primitives[ p ];\n        var inputs = primitive.inputs;\n\n        // groups\n\n        var count = 0;\n\n        switch ( primitive.type ) {\n\n          case 'lines':\n          case 'linestrips':\n            count = primitive.count * 2;\n            break;\n\n          case 'triangles':\n            count = primitive.count * 3;\n            break;\n\n          case 'polylist':\n\n            for ( var g = 0; g < primitive.count; g ++ ) {\n\n              var vc = primitive.vcount[ g ];\n\n              switch ( vc ) {\n\n                case 3:\n                  count += 3; // single triangle\n                  break;\n\n                case 4:\n                  count += 6; // quad, subdivided into two triangles\n                  break;\n\n                default:\n                  count += ( vc - 2 ) * 3; // polylist with more than four vertices\n                  break;\n\n              }\n\n            }\n\n            break;\n\n          default:\n            console.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n        }\n\n        geometry.addGroup( start, count, p );\n        start += count;\n\n        // material\n\n        if ( primitive.material ) {\n\n          materialKeys.push( primitive.material );\n\n        }\n\n        // geometry data\n\n        for ( var name in inputs ) {\n\n          var input = inputs[ name ];\n\n          switch ( name ) {\n\n            case 'VERTEX':\n              for ( var key in vertices ) {\n\n                var id = vertices[ key ];\n\n                switch ( key ) {\n\n                  case 'POSITION':\n                    var prevLength = position.array.length;\n                    buildGeometryData( primitive, sources[ id ], input.offset, position.array );\n                    position.stride = sources[ id ].stride;\n\n                    if ( sources.skinWeights && sources.skinIndices ) {\n\n                      buildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n                      buildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n                    }\n\n                    // see #3803\n\n                    if ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n                      var count = ( position.array.length - prevLength ) / position.stride;\n\n                      for ( var i = 0; i < count; i ++ ) {\n\n                        // fill missing uv coordinates\n\n                        uv.array.push( 0, 0 );\n\n                      }\n\n                    }\n                    break;\n\n                  case 'NORMAL':\n                    buildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n                    normal.stride = sources[ id ].stride;\n                    break;\n\n                  case 'COLOR':\n                    buildGeometryData( primitive, sources[ id ], input.offset, color.array );\n                    color.stride = sources[ id ].stride;\n                    break;\n\n                  case 'TEXCOORD':\n                    buildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n                    uv.stride = sources[ id ].stride;\n                    break;\n\n                  case 'TEXCOORD1':\n                    buildGeometryData( primitive, sources[ id ], input.offset, uv2.array );\n                    uv.stride = sources[ id ].stride;\n                    break;\n\n                  default:\n                    console.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n                }\n\n              }\n              break;\n\n            case 'NORMAL':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n              normal.stride = sources[ input.id ].stride;\n              break;\n\n            case 'COLOR':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, color.array );\n              color.stride = sources[ input.id ].stride;\n              break;\n\n            case 'TEXCOORD':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n              uv.stride = sources[ input.id ].stride;\n              break;\n\n            case 'TEXCOORD1':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, uv2.array );\n              uv2.stride = sources[ input.id ].stride;\n              break;\n\n          }\n\n        }\n\n      }\n\n      // build geometry\n\n      if ( position.array.length > 0 ) geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( position.array, position.stride ) );\n      if ( normal.array.length > 0 ) geometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( normal.array, normal.stride ) );\n      if ( color.array.length > 0 ) geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( color.array, color.stride ) );\n      if ( uv.array.length > 0 ) geometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( uv.array, uv.stride ) );\n      if ( uv2.array.length > 0 ) geometry.addAttribute( 'uv2', new THREE.Float32BufferAttribute( uv2.array, uv2.stride ) );\n\n      if ( skinIndex.array.length > 0 ) geometry.addAttribute( 'skinIndex', new THREE.Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n      if ( skinWeight.array.length > 0 ) geometry.addAttribute( 'skinWeight', new THREE.Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n      build.data = geometry;\n      build.type = primitives[ 0 ].type;\n      build.materialKeys = materialKeys;\n\n      return build;\n\n    }\n\n    function buildGeometryData( primitive, source, offset, array ) {\n\n      var indices = primitive.p;\n      var stride = primitive.stride;\n      var vcount = primitive.vcount;\n\n      function pushVector( i ) {\n\n        var index = indices[ i + offset ] * sourceStride;\n        var length = index + sourceStride;\n\n        for ( ; index < length; index ++ ) {\n\n          array.push( sourceArray[ index ] );\n\n        }\n\n      }\n\n      var sourceArray = source.array;\n      var sourceStride = source.stride;\n\n      if ( primitive.vcount !== undefined ) {\n\n        var index = 0;\n\n        for ( var i = 0, l = vcount.length; i < l; i ++ ) {\n\n          var count = vcount[ i ];\n\n          if ( count === 4 ) {\n\n            var a = index + stride * 0;\n            var b = index + stride * 1;\n            var c = index + stride * 2;\n            var d = index + stride * 3;\n\n            pushVector( a ); pushVector( b ); pushVector( d );\n            pushVector( b ); pushVector( c ); pushVector( d );\n\n          } else if ( count === 3 ) {\n\n            var a = index + stride * 0;\n            var b = index + stride * 1;\n            var c = index + stride * 2;\n\n            pushVector( a ); pushVector( b ); pushVector( c );\n\n          } else if ( count > 4 ) {\n\n            for ( var k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n              var a = index + stride * 0;\n              var b = index + stride * k;\n              var c = index + stride * ( k + 1 );\n\n              pushVector( a ); pushVector( b ); pushVector( c );\n\n            }\n\n          }\n\n          index += stride * count;\n\n        }\n\n      } else {\n\n        for ( var i = 0, l = indices.length; i < l; i += stride ) {\n\n          pushVector( i );\n\n        }\n\n      }\n\n    }\n\n    function getGeometry( id ) {\n\n      return getBuild( library.geometries[ id ], buildGeometry );\n\n    }\n\n    // kinematics\n\n    function parseKinematicsModel( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        joints: {},\n        links: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            parseKinematicsTechniqueCommon( child, data );\n            break;\n\n        }\n\n      }\n\n      library.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildKinematicsModel( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data;\n\n    }\n\n    function getKinematicsModel( id ) {\n\n      return getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n    }\n\n    function parseKinematicsTechniqueCommon( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'joint':\n            data.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n            break;\n\n          case 'link':\n            data.links.push( parseKinematicsLink( child ) );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseKinematicsJoint( xml ) {\n\n      var data;\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'prismatic':\n          case 'revolute':\n            data = parseKinematicsJointParameter( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsJointParameter( xml, data ) {\n\n      var data = {\n        sid: xml.getAttribute( 'sid' ),\n        name: xml.getAttribute( 'name' ) || '',\n        axis: new THREE.Vector3(),\n        limits: {\n          min: 0,\n          max: 0\n        },\n        type: xml.nodeName,\n        static: false,\n        zeroPosition: 0,\n        middlePosition: 0\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'axis':\n            var array = parseFloats( child.textContent );\n            data.axis.fromArray( array );\n            break;\n          case 'limits':\n            var max = child.getElementsByTagName( 'max' )[ 0 ];\n            var min = child.getElementsByTagName( 'min' )[ 0 ];\n\n            data.limits.max = parseFloat( max.textContent );\n            data.limits.min = parseFloat( min.textContent );\n            break;\n\n        }\n\n      }\n\n      // if min is equal to or greater than max, consider the joint static\n\n      if ( data.limits.min >= data.limits.max ) {\n\n        data.static = true;\n\n      }\n\n      // calculate middle position\n\n      data.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n      return data;\n\n    }\n\n    function parseKinematicsLink( xml ) {\n\n      var data = {\n        sid: xml.getAttribute( 'sid' ),\n        name: xml.getAttribute( 'name' ) || '',\n        attachments: [],\n        transforms: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'attachment_full':\n            data.attachments.push( parseKinematicsAttachment( child ) );\n            break;\n\n          case 'matrix':\n          case 'translate':\n          case 'rotate':\n            data.transforms.push( parseKinematicsTransform( child ) );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsAttachment( xml ) {\n\n      var data = {\n        joint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n        transforms: [],\n        links: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'link':\n            data.links.push( parseKinematicsLink( child ) );\n            break;\n\n          case 'matrix':\n          case 'translate':\n          case 'rotate':\n            data.transforms.push( parseKinematicsTransform( child ) );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsTransform( xml ) {\n\n      var data = {\n        type: xml.nodeName\n      };\n\n      var array = parseFloats( xml.textContent );\n\n      switch ( data.type ) {\n\n        case 'matrix':\n          data.obj = new THREE.Matrix4();\n          data.obj.fromArray( array ).transpose();\n          break;\n\n        case 'translate':\n          data.obj = new THREE.Vector3();\n          data.obj.fromArray( array );\n          break;\n\n        case 'rotate':\n          data.obj = new THREE.Vector3();\n          data.obj.fromArray( array );\n          data.angle = THREE.MathUtils.degToRad( array[ 3 ] );\n          break;\n\n      }\n\n      return data;\n\n    }\n\n    // physics\n\n    function parsePhysicsModel( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        rigidBodies: {}\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'rigid_body':\n            data.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n            parsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n            break;\n\n        }\n\n      }\n\n      library.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parsePhysicsRigidBody( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            parsePhysicsTechniqueCommon( child, data );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parsePhysicsTechniqueCommon( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'inertia':\n            data.inertia = parseFloats( child.textContent );\n            break;\n\n          case 'mass':\n            data.mass = parseFloats( child.textContent )[ 0 ];\n            break;\n\n        }\n\n      }\n\n    }\n\n    // scene\n\n    function parseKinematicsScene( xml ) {\n\n      var data = {\n        bindJointAxis: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'bind_joint_axis':\n            data.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n            break;\n\n        }\n\n      }\n\n      library.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n    }\n\n    function parseKinematicsBindJointAxis( xml ) {\n\n      var data = {\n        target: xml.getAttribute( 'target' ).split( '/' ).pop()\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'axis':\n            var param = child.getElementsByTagName( 'param' )[ 0 ];\n            data.axis = param.textContent;\n            var tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n            data.jointIndex = tmpJointIndex.substr( 0, tmpJointIndex.length - 1 );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildKinematicsScene( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data;\n\n    }\n\n    function getKinematicsScene( id ) {\n\n      return getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n    }\n\n    function setupKinematics() {\n\n      var kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n      var kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n      var visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n      if ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n      var kinematicsModel = getKinematicsModel( kinematicsModelId );\n      var kinematicsScene = getKinematicsScene( kinematicsSceneId );\n      var visualScene = getVisualScene( visualSceneId );\n\n      var bindJointAxis = kinematicsScene.bindJointAxis;\n      var jointMap = {};\n\n      for ( var i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n        var axis = bindJointAxis[ i ];\n\n        // the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n        var targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n        if ( targetElement ) {\n\n          // get the parent of the transfrom element\n\n          var parentVisualElement = targetElement.parentElement;\n\n          // connect the joint of the kinematics model with the element in the visual scene\n\n          connect( axis.jointIndex, parentVisualElement );\n\n        }\n\n      }\n\n      function connect( jointIndex, visualElement ) {\n\n        var visualElementName = visualElement.getAttribute( 'name' );\n        var joint = kinematicsModel.joints[ jointIndex ];\n\n        visualScene.traverse( function ( object ) {\n\n          if ( object.name === visualElementName ) {\n\n            jointMap[ jointIndex ] = {\n              object: object,\n              transforms: buildTransformList( visualElement ),\n              joint: joint,\n              position: joint.zeroPosition\n            };\n\n          }\n\n        } );\n\n      }\n\n      var m0 = new THREE.Matrix4();\n\n      kinematics = {\n\n        joints: kinematicsModel && kinematicsModel.joints,\n\n        getJointValue: function ( jointIndex ) {\n\n          var jointData = jointMap[ jointIndex ];\n\n          if ( jointData ) {\n\n            return jointData.position;\n\n          } else {\n\n            console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n          }\n\n        },\n\n        setJointValue: function ( jointIndex, value ) {\n\n          var jointData = jointMap[ jointIndex ];\n\n          if ( jointData ) {\n\n            var joint = jointData.joint;\n\n            if ( value > joint.limits.max || value < joint.limits.min ) {\n\n              console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n            } else if ( joint.static ) {\n\n              console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n            } else {\n\n              var object = jointData.object;\n              var axis = joint.axis;\n              var transforms = jointData.transforms;\n\n              matrix.identity();\n\n              // each update, we have to apply all transforms in the correct order\n\n              for ( var i = 0; i < transforms.length; i ++ ) {\n\n                var transform = transforms[ i ];\n\n                // if there is a connection of the transform node with a joint, apply the joint value\n\n                if ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n                  switch ( joint.type ) {\n\n                    case 'revolute':\n                      matrix.multiply( m0.makeRotationAxis( axis, THREE.MathUtils.degToRad( value ) ) );\n                      break;\n\n                    case 'prismatic':\n                      matrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n                      break;\n\n                    default:\n                      console.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n                      break;\n\n                  }\n\n                } else {\n\n                  switch ( transform.type ) {\n\n                    case 'matrix':\n                      matrix.multiply( transform.obj );\n                      break;\n\n                    case 'translate':\n                      matrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n                      break;\n\n                    case 'scale':\n                      matrix.scale( transform.obj );\n                      break;\n\n                    case 'rotate':\n                      matrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n                      break;\n\n                  }\n\n                }\n\n              }\n\n              object.matrix.copy( matrix );\n              object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n              jointMap[ jointIndex ].position = value;\n\n            }\n\n          } else {\n\n            console.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n          }\n\n        }\n\n      };\n\n    }\n\n    function buildTransformList( node ) {\n\n      var transforms = [];\n\n      var xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'matrix':\n            var array = parseFloats( child.textContent );\n            var matrix = new THREE.Matrix4().fromArray( array ).transpose();\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: matrix\n            } );\n            break;\n\n          case 'translate':\n          case 'scale':\n            var array = parseFloats( child.textContent );\n            var vector = new THREE.Vector3().fromArray( array );\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: vector\n            } );\n            break;\n\n          case 'rotate':\n            var array = parseFloats( child.textContent );\n            var vector = new THREE.Vector3().fromArray( array );\n            var angle = THREE.MathUtils.degToRad( array[ 3 ] );\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: vector,\n              angle: angle\n            } );\n            break;\n\n        }\n\n      }\n\n      return transforms;\n\n    }\n\n    // nodes\n\n    function prepareNodes( xml ) {\n\n      var elements = xml.getElementsByTagName( 'node' );\n\n      // ensure all node elements have id attributes\n\n      for ( var i = 0; i < elements.length; i ++ ) {\n\n        var element = elements[ i ];\n\n        if ( element.hasAttribute( 'id' ) === false ) {\n\n          element.setAttribute( 'id', generateId() );\n\n        }\n\n      }\n\n    }\n\n    var matrix = new THREE.Matrix4();\n    var vector = new THREE.Vector3();\n\n    function parseNode( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        type: xml.getAttribute( 'type' ),\n        id: xml.getAttribute( 'id' ),\n        sid: xml.getAttribute( 'sid' ),\n        matrix: new THREE.Matrix4(),\n        nodes: [],\n        instanceCameras: [],\n        instanceControllers: [],\n        instanceLights: [],\n        instanceGeometries: [],\n        instanceNodes: [],\n        transforms: {}\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'node':\n            data.nodes.push( child.getAttribute( 'id' ) );\n            parseNode( child );\n            break;\n\n          case 'instance_camera':\n            data.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'instance_controller':\n            data.instanceControllers.push( parseNodeInstance( child ) );\n            break;\n\n          case 'instance_light':\n            data.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'instance_geometry':\n            data.instanceGeometries.push( parseNodeInstance( child ) );\n            break;\n\n          case 'instance_node':\n            data.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'matrix':\n            var array = parseFloats( child.textContent );\n            data.matrix.multiply( matrix.fromArray( array ).transpose() );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'translate':\n            var array = parseFloats( child.textContent );\n            vector.fromArray( array );\n            data.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'rotate':\n            var array = parseFloats( child.textContent );\n            var angle = THREE.MathUtils.degToRad( array[ 3 ] );\n            data.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'scale':\n            var array = parseFloats( child.textContent );\n            data.matrix.scale( vector.fromArray( array ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'extra':\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      if ( hasNode( data.id ) ) {\n\n        console.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n      } else {\n\n        library.nodes[ data.id ] = data;\n\n      }\n\n      return data;\n\n    }\n\n    function parseNodeInstance( xml ) {\n\n      var data = {\n        id: parseId( xml.getAttribute( 'url' ) ),\n        materials: {},\n        skeletons: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'bind_material':\n            var instances = child.getElementsByTagName( 'instance_material' );\n\n            for ( var j = 0; j < instances.length; j ++ ) {\n\n              var instance = instances[ j ];\n              var symbol = instance.getAttribute( 'symbol' );\n              var target = instance.getAttribute( 'target' );\n\n              data.materials[ symbol ] = parseId( target );\n\n            }\n\n            break;\n\n          case 'skeleton':\n            data.skeletons.push( parseId( child.textContent ) );\n            break;\n\n          default:\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildSkeleton( skeletons, joints ) {\n\n      var boneData = [];\n      var sortedBoneData = [];\n\n      var i, j, data;\n\n      // a skeleton can have multiple root bones. collada expresses this\n      // situtation with multiple \"skeleton\" tags per controller instance\n\n      for ( i = 0; i < skeletons.length; i ++ ) {\n\n        var skeleton = skeletons[ i ];\n\n        var root;\n\n        if ( hasNode( skeleton ) ) {\n\n          root = getNode( skeleton );\n          buildBoneHierarchy( root, joints, boneData );\n\n        } else if ( hasVisualScene( skeleton ) ) {\n\n          // handle case where the skeleton refers to the visual scene (#13335)\n\n          var visualScene = library.visualScenes[ skeleton ];\n          var children = visualScene.children;\n\n          for ( var j = 0; j < children.length; j ++ ) {\n\n            var child = children[ j ];\n\n            if ( child.type === 'JOINT' ) {\n\n              var root = getNode( child.id );\n              buildBoneHierarchy( root, joints, boneData );\n\n            }\n\n          }\n\n        } else {\n\n          console.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n        }\n\n      }\n\n      // sort bone data (the order is defined in the corresponding controller)\n\n      for ( i = 0; i < joints.length; i ++ ) {\n\n        for ( j = 0; j < boneData.length; j ++ ) {\n\n          data = boneData[ j ];\n\n          if ( data.bone.name === joints[ i ].name ) {\n\n            sortedBoneData[ i ] = data;\n            data.processed = true;\n            break;\n\n          }\n\n        }\n\n      }\n\n      // add unprocessed bone data at the end of the list\n\n      for ( i = 0; i < boneData.length; i ++ ) {\n\n        data = boneData[ i ];\n\n        if ( data.processed === false ) {\n\n          sortedBoneData.push( data );\n          data.processed = true;\n\n        }\n\n      }\n\n      // setup arrays for skeleton creation\n\n      var bones = [];\n      var boneInverses = [];\n\n      for ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n        data = sortedBoneData[ i ];\n\n        bones.push( data.bone );\n        boneInverses.push( data.boneInverse );\n\n      }\n\n      return new THREE.Skeleton( bones, boneInverses );\n\n    }\n\n    function buildBoneHierarchy( root, joints, boneData ) {\n\n      // setup bone data from visual scene\n\n      root.traverse( function ( object ) {\n\n        if ( object.isBone === true ) {\n\n          var boneInverse;\n\n          // retrieve the boneInverse from the controller data\n\n          for ( var i = 0; i < joints.length; i ++ ) {\n\n            var joint = joints[ i ];\n\n            if ( joint.name === object.name ) {\n\n              boneInverse = joint.boneInverse;\n              break;\n\n            }\n\n          }\n\n          if ( boneInverse === undefined ) {\n\n            // Unfortunately, there can be joints in the visual scene that are not part of the\n            // corresponding controller. In this case, we have to create a dummy boneInverse matrix\n            // for the respective bone. This bone won't affect any vertices, because there are no skin indices\n            // and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n            // ensure a correct animation of the model.\n\n            boneInverse = new THREE.Matrix4();\n\n          }\n\n          boneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n        }\n\n      } );\n\n    }\n\n    function buildNode( data ) {\n\n      var objects = [];\n\n      var matrix = data.matrix;\n      var nodes = data.nodes;\n      var type = data.type;\n      var instanceCameras = data.instanceCameras;\n      var instanceControllers = data.instanceControllers;\n      var instanceLights = data.instanceLights;\n      var instanceGeometries = data.instanceGeometries;\n      var instanceNodes = data.instanceNodes;\n\n      // nodes\n\n      for ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n        objects.push( getNode( nodes[ i ] ) );\n\n      }\n\n      // instance cameras\n\n      for ( var i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n        var instanceCamera = getCamera( instanceCameras[ i ] );\n\n        if ( instanceCamera !== null ) {\n\n          objects.push( instanceCamera.clone() );\n\n        }\n\n      }\n\n      // instance controllers\n\n      for ( var i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n        var instance = instanceControllers[ i ];\n        var controller = getController( instance.id );\n        var geometries = getGeometry( controller.id );\n        var newObjects = buildObjects( geometries, instance.materials );\n\n        var skeletons = instance.skeletons;\n        var joints = controller.skin.joints;\n\n        var skeleton = buildSkeleton( skeletons, joints );\n\n        for ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n          var object = newObjects[ j ];\n\n          if ( object.isSkinnedMesh ) {\n\n            object.bind( skeleton, controller.skin.bindMatrix );\n            object.normalizeSkinWeights();\n\n          }\n\n          objects.push( object );\n\n        }\n\n      }\n\n      // instance lights\n\n      for ( var i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n        var instanceLight = getLight( instanceLights[ i ] );\n\n        if ( instanceLight !== null ) {\n\n          objects.push( instanceLight.clone() );\n\n        }\n\n      }\n\n      // instance geometries\n\n      for ( var i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n        var instance = instanceGeometries[ i ];\n\n        // a single geometry instance in collada can lead to multiple object3Ds.\n        // this is the case when primitives are combined like triangles and lines\n\n        var geometries = getGeometry( instance.id );\n        var newObjects = buildObjects( geometries, instance.materials );\n\n        for ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n          objects.push( newObjects[ j ] );\n\n        }\n\n      }\n\n      // instance nodes\n\n      for ( var i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n        objects.push( getNode( instanceNodes[ i ] ).clone() );\n\n      }\n\n      var object;\n\n      if ( nodes.length === 0 && objects.length === 1 ) {\n\n        object = objects[ 0 ];\n\n      } else {\n\n        object = ( type === 'JOINT' ) ? new THREE.Bone() : new THREE.Group();\n\n        for ( var i = 0; i < objects.length; i ++ ) {\n\n          object.add( objects[ i ] );\n\n        }\n\n      }\n\n      if ( object.name === '' ) {\n\n        object.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\n      }\n\n      object.matrix.copy( matrix );\n      object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n      return object;\n\n    }\n\n    var fallbackMaterial = new THREE.MeshBasicMaterial( { color: 0xff00ff } );\n\n    function resolveMaterialBinding( keys, instanceMaterials ) {\n\n      var materials = [];\n\n      for ( var i = 0, l = keys.length; i < l; i ++ ) {\n\n        var id = instanceMaterials[ keys[ i ] ];\n\n        if ( id === undefined ) {\n\n          console.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n          materials.push( fallbackMaterial );\n\n        } else {\n\n          materials.push( getMaterial( id ) );\n\n        }\n\n      }\n\n      return materials;\n\n    }\n\n    function buildObjects( geometries, instanceMaterials ) {\n\n      var objects = [];\n\n      for ( var type in geometries ) {\n\n        var geometry = geometries[ type ];\n\n        var materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n        // handle case if no materials are defined\n\n        if ( materials.length === 0 ) {\n\n          if ( type === 'lines' || type === 'linestrips' ) {\n\n            materials.push( new THREE.LineBasicMaterial() );\n\n          } else {\n\n            materials.push( new THREE.MeshPhongMaterial() );\n\n          }\n\n        }\n\n        // regard skinning\n\n        var skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n        if ( skinning ) {\n\n          for ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n            materials[ i ].skinning = true;\n\n          }\n\n        }\n\n        // choose between a single or multi materials (material array)\n\n        var material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n        // now create a specific 3D object\n\n        var object;\n\n        switch ( type ) {\n\n          case 'lines':\n            object = new THREE.LineSegments( geometry.data, material );\n            break;\n\n          case 'linestrips':\n            object = new THREE.Line( geometry.data, material );\n            break;\n\n          case 'triangles':\n          case 'polylist':\n            if ( skinning ) {\n\n              object = new THREE.SkinnedMesh( geometry.data, material );\n\n            } else {\n\n              object = new THREE.Mesh( geometry.data, material );\n\n            }\n            break;\n\n        }\n\n        objects.push( object );\n\n      }\n\n      return objects;\n\n    }\n\n    function hasNode( id ) {\n\n      return library.nodes[ id ] !== undefined;\n\n    }\n\n    function getNode( id ) {\n\n      return getBuild( library.nodes[ id ], buildNode );\n\n    }\n\n    // visual scenes\n\n    function parseVisualScene( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ),\n        children: []\n      };\n\n      prepareNodes( xml );\n\n      var elements = getElementsByTagName( xml, 'node' );\n\n      for ( var i = 0; i < elements.length; i ++ ) {\n\n        data.children.push( parseNode( elements[ i ] ) );\n\n      }\n\n      library.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildVisualScene( data ) {\n\n      var group = new THREE.Group();\n      group.name = data.name;\n\n      var children = data.children;\n\n      for ( var i = 0; i < children.length; i ++ ) {\n\n        var child = children[ i ];\n\n        group.add( getNode( child.id ) );\n\n      }\n\n      return group;\n\n    }\n\n    function hasVisualScene( id ) {\n\n      return library.visualScenes[ id ] !== undefined;\n\n    }\n\n    function getVisualScene( id ) {\n\n      return getBuild( library.visualScenes[ id ], buildVisualScene );\n\n    }\n\n    // scenes\n\n    function parseScene( xml ) {\n\n      var instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n      return getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n    }\n\n    function setupAnimations() {\n\n      var clips = library.clips;\n\n      if ( isEmpty( clips ) === true ) {\n\n        if ( isEmpty( library.animations ) === false ) {\n\n          // if there are animations but no clips, we create a default clip for playback\n\n          var tracks = [];\n\n          for ( var id in library.animations ) {\n\n            var animationTracks = getAnimation( id );\n\n            for ( var i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n              tracks.push( animationTracks[ i ] );\n\n            }\n\n          }\n\n          animations.push( new THREE.AnimationClip( 'default', - 1, tracks ) );\n\n        }\n\n      } else {\n\n        for ( var id in clips ) {\n\n          animations.push( getAnimationClip( id ) );\n\n        }\n\n      }\n\n    }\n\n    if ( text.length === 0 ) {\n\n      return { scene: new THREE.Scene() };\n\n    }\n\n    var xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n    var collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n    // metadata\n\n    var version = collada.getAttribute( 'version' );\n    console.log( 'THREE.ColladaLoader: File version', version );\n\n    var asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n    var textureLoader = new THREE.TextureLoader( this.manager );\n    textureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n    var tgaLoader;\n\n    if ( THREE.TGALoader ) {\n\n      tgaLoader = new THREE.TGALoader( this.manager );\n      tgaLoader.setPath( this.resourcePath || path );\n\n    }\n\n    //\n\n    var animations = [];\n    var kinematics = {};\n    var count = 0;\n\n    //\n\n    var library = {\n      animations: {},\n      clips: {},\n      controllers: {},\n      images: {},\n      effects: {},\n      materials: {},\n      cameras: {},\n      lights: {},\n      geometries: {},\n      nodes: {},\n      visualScenes: {},\n      kinematicsModels: {},\n      physicsModels: {},\n      kinematicsScenes: {}\n    };\n\n    parseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n    parseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n    parseLibrary( collada, 'library_controllers', 'controller', parseController );\n    parseLibrary( collada, 'library_images', 'image', parseImage );\n    parseLibrary( collada, 'library_effects', 'effect', parseEffect );\n    parseLibrary( collada, 'library_materials', 'material', parseMaterial );\n    parseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n    parseLibrary( collada, 'library_lights', 'light', parseLight );\n    parseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n    parseLibrary( collada, 'library_nodes', 'node', parseNode );\n    parseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n    parseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n    parseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n    parseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n    buildLibrary( library.animations, buildAnimation );\n    buildLibrary( library.clips, buildAnimationClip );\n    buildLibrary( library.controllers, buildController );\n    buildLibrary( library.images, buildImage );\n    buildLibrary( library.effects, buildEffect );\n    buildLibrary( library.materials, buildMaterial );\n    buildLibrary( library.cameras, buildCamera );\n    buildLibrary( library.lights, buildLight );\n    buildLibrary( library.geometries, buildGeometry );\n    buildLibrary( library.visualScenes, buildVisualScene );\n\n    setupAnimations();\n    setupKinematics();\n\n    var scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\n    if ( asset.upAxis === 'Z_UP' ) {\n\n      scene.quaternion.setFromEuler( new THREE.Euler( - Math.PI / 2, 0, 0 ) );\n\n    }\n\n    scene.scale.multiplyScalar( asset.unit );\n\n    return {\n      animations: animations,\n      kinematics: kinematics,\n      library: library,\n      scene: scene\n    };\n\n  }\n\n};\n","/**\n * Source: https://github.com/Adobe-Marketing-Cloud/fetch-script\n */\n\nfunction getScriptId() {\n  return 'script_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n}\n\nfunction createScript(url, id) {\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = true;\n  script.id = id;\n  script.src = url;\n\n  return script;\n}\n\nfunction removeScript(id) {\n  const script = document.getElementById(id);\n  const parent = script.parentNode;\n\n  try {\n    parent && parent.removeChild(script);\n  } catch (e) {\n    // ignore\n  }\n}\n\nfunction appendScript(script) {\n  const firstScript = document.getElementsByTagName('script')[0];\n  firstScript.parentNode.insertBefore(script, firstScript);\n}\n\nfunction fetchScriptInternal(url, options, Promise) {\n  return new Promise(function(resolve, reject) {\n    const timeout = options.timeout || 5000;\n    const scriptId = getScriptId();\n    const script = createScript(url, scriptId);\n\n    const timeoutId = setTimeout(function() {\n      reject(new Error('Script request to ' + url + ' timed out'));\n\n      removeScript(scriptId);\n    }, timeout);\n\n    const disableTimeout = function(timeoutId) { clearTimeout(timeoutId); };\n\n    script.addEventListener('load', function(e) {\n      resolve({ok: true});\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    script.addEventListener('error', function(e) {\n      reject(new Error('Script request to ' + url + ' failed ' + e));\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    appendScript(script);\n  });\n}\n\nfunction fetchScript(settings) {\n  settings = settings || {};\n  return function (url, options) {\n    options = options || {};\n    return fetchScriptInternal(url, options, settings.Promise || Promise);\n  };\n}\n\nmodule.exports = fetchScript;\n","const LoopMode = {\n  once: THREE.LoopOnce,\n  repeat: THREE.LoopRepeat,\n  pingpong: THREE.LoopPingPong\n};\n\n/**\n * animation-mixer\n *\n * Player for animation clips. Intended to be compatible with any model format that supports\n * skeletal or morph animations through THREE.AnimationMixer.\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\n */\nmodule.exports = AFRAME.registerComponent('animation-mixer', {\n  schema: {\n    clip: { default: '*' },\n    useRegExp: {default: false},\n    duration: { default: 0 },\n    clampWhenFinished: { default: false, type: 'boolean' },\n    crossFadeDuration: { default: 0 },\n    loop: { default: 'repeat', oneOf: Object.keys(LoopMode) },\n    repetitions: { default: Infinity, min: 0 },\n    timeScale: { default: 1 },\n    startAt: { default: 0 }\n  },\n\n  init: function () {\n    /** @type {THREE.Mesh} */\n    this.model = null;\n    /** @type {THREE.AnimationMixer} */\n    this.mixer = null;\n    /** @type {Array<THREE.AnimationAction>} */\n    this.activeActions = [];\n\n    const model = this.el.getObject3D('mesh');\n\n    if (model) {\n      this.load(model);\n    } else {\n      this.el.addEventListener('model-loaded', (e) => {\n        this.load(e.detail.model);\n      });\n    }\n  },\n\n  load: function (model) {\n    const el = this.el;\n    this.model = model;\n    this.mixer = new THREE.AnimationMixer(model);\n    this.mixer.addEventListener('loop', (e) => {\n      el.emit('animation-loop', { action: e.action, loopDelta: e.loopDelta });\n    });\n    this.mixer.addEventListener('finished', (e) => {\n      el.emit('animation-finished', { action: e.action, direction: e.direction });\n    });\n    if (this.data.clip) this.update({});\n  },\n\n  remove: function () {\n    if (this.mixer) this.mixer.stopAllAction();\n  },\n\n  update: function (prevData) {\n    if (!prevData) return;\n\n    const data = this.data;\n    const changes = AFRAME.utils.diff(data, prevData);\n\n    // If selected clips have changed, restart animation.\n    if ('clip' in changes) {\n      this.stopAction();\n      if (data.clip) this.playAction();\n      return;\n    }\n\n    // Otherwise, modify running actions.\n    this.activeActions.forEach((action) => {\n      if ('duration' in changes && data.duration) {\n        action.setDuration(data.duration);\n      }\n      if ('clampWhenFinished' in changes) {\n        action.clampWhenFinished = data.clampWhenFinished;\n      }\n      if ('loop' in changes || 'repetitions' in changes) {\n        action.setLoop(LoopMode[data.loop], data.repetitions);\n      }\n      if ('timeScale' in changes) {\n        action.setEffectiveTimeScale(data.timeScale);\n      }\n    });\n  },\n\n  stopAction: function () {\n    const data = this.data;\n    for (let i = 0; i < this.activeActions.length; i++) {\n      data.crossFadeDuration\n        ? this.activeActions[i].fadeOut(data.crossFadeDuration)\n        : this.activeActions[i].stop();\n    }\n    this.activeActions.length = 0;\n  },\n\n  playAction: function () {\n    if (!this.mixer) return;\n\n    const model = this.model,\n      data = this.data,\n      clips = model.animations || (model.geometry || {}).animations || [];\n\n    if (!clips.length) return;\n\n    const re = data.useRegExp ? data.clip : wildcardToRegExp(data.clip);\n\n    for (let clip, i = 0; (clip = clips[i]); i++) {\n      if (clip.name.match(re)) {\n        const action = this.mixer.clipAction(clip, model);\n\n        action.enabled = true;\n        action.clampWhenFinished = data.clampWhenFinished;\n        if (data.duration) action.setDuration(data.duration);\n        if (data.timeScale !== 1) action.setEffectiveTimeScale(data.timeScale);\n        // animation-mixer.startAt and AnimationAction.startAt have very different meanings.\n        // animation-mixer.startAt indicates which frame in the animation to start at, in msecs.\n        // AnimationAction.startAt indicates when to start the animation (from the 1st frame),\n        // measured in global mixer time, in seconds.\n        action.startAt(this.mixer.time - data.startAt / 1000);\n        action\n          .setLoop(LoopMode[data.loop], data.repetitions)\n          .fadeIn(data.crossFadeDuration)\n          .play();\n        this.activeActions.push(action);\n      }\n    }\n  },\n\n  tick: function (t, dt) {\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\n  }\n});\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n */\nfunction wildcardToRegExp(s) {\n  return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n */\nfunction regExpEscape(s) {\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n","THREE.ColladaLoader = require('../../lib/ColladaLoader');\n\n/**\n * collada-model-legacy\n *\n * Loader for COLLADA (.dae) format.\n */\nmodule.exports.Component = AFRAME.registerComponent('collada-model-legacy', {\n  schema: {type: 'asset'},\n\n  init: function () {\n    this.model = null;\n    this.loader = new THREE.ColladaLoader();\n  },\n\n  update: function () {\n    var self = this;\n    var el = this.el;\n    var src = this.data;\n    var rendererSystem = this.el.sceneEl.systems.renderer;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loader.load(src, function (colladaModel) {\n      self.model = colladaModel.scene;\n      self.model.traverse(function (object) {\n        if (object.isMesh) {\n          var material = object.material;\n          if (material.color) rendererSystem.applyColorCorrection(material.color);\n          if (material.map) rendererSystem.applyColorCorrection(material.map);\n          if (material.emissive) rendererSystem.applyColorCorrection(material.emissive);\n          if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap);\n        }\n      });\n      el.setObject3D('mesh', self.model);\n      el.emit('model-loaded', {format: 'collada', model: self.model});\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n","/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.8.2\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q : degrees of B-Spline surface\nU, V : knot vectors\nP    : control points (x, y, z, w)\nu, v : parametric values\n\nreturns point for given (u, v)\n*/\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n/*\nCalculate rational B-Spline volume point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q, r   : degrees of B-Splinevolume\nU, V, W   : knot vectors\nP         : control points (x, y, z, w)\nu, v, w   : parametric values\n\nreturns point for given (u, v, w)\n*/\nfunction calcVolumePoint( p, q, r, U, V, W, P, u, v, w, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst wspan = findSpan( r, w, W );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst Nw = calcBasisFunctions( wspan, w, r, W );\n\tconst temp = [];\n\n\tfor ( let m = 0; m <= r; ++ m ) {\n\n\t\ttemp[ m ] = [];\n\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ m ][ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ][ wspan - r + m ].clone();\n\t\t\t\tconst w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ m ][ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let m = 0; m <= r; ++ m ) {\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ m ][ l ].multiplyScalar( Nw[ m ] ).multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n\tcalcVolumePoint,\n};\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector2,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace,\n\tShapeUtils\n} from 'three';\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * Binary format specification:\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\nclass FBXLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\tif ( 'Translation' in textureNode ) {\n\n\t\t\tconst values = textureNode.Translation.value;\n\n\t\t\ttexture.offset.x = values[ 0 ];\n\t\t\ttexture.offset.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tlet fileName;\n\n\t\tconst currentPath = this.textureLoader.path;\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet texture;\n\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\tif ( extension === 'tga' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'dds' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.dds' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: DDS loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'psd' ) {\n\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\ttexture = new Texture();\n\n\t\t} else {\n\n\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t}\n\n\t\tthis.textureLoader.setPath( currentPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\tif ( materialNode.Opacity ) {\n\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.addGlobalSceneSettings();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\t\t\t\tmodel.userData.originalName = node.attrName;\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.userData.originalName = name;\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value ).convertSRGBToLinear();\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( {\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\t\tcolor: 0xcccccc\n\t\t\t} );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0x3300ff,\n\t\t\tlinewidth: 1\n\t\t} );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\taddGlobalSceneSettings() {\n\n\t\tif ( 'GlobalSettings' in fbxTree ) {\n\n\t\t\tif ( 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\t// Parse ambient color - if it's not set to black (default), create an ambient light\n\n\t\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tconst r = ambientColor[ 0 ];\n\t\t\t\tconst g = ambientColor[ 1 ];\n\t\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tconst color = new Color( r, g, b ).convertSRGBToLinear();\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( 'UnitScaleFactor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tsceneGraph.userData.unitScaleFactor = fbxTree.GlobalSettings.UnitScaleFactor.value;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\tconstructor() {\n\n\t\tthis.negativeMaterialIndices = false;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// report warnings\n\n\t\tif ( this.negativeMaterialIndices === true ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected.' );\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\tconst name = i === 0 ? 'uv' : `uv${ i }`;\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\tif ( materialIndex < 0 ) {\n\n\t\t\t\t\tscope.negativeMaterialIndices = true;\n\t\t\t\t\tmaterialIndex = 0; // fallback\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// See https://www.khronos.org/opengl/wiki/Calculating_a_Surface_Normal\n\tgetNormalNewell( vertices ) {\n\n\t\tconst normal = new Vector3( 0.0, 0.0, 0.0 );\n\n\t\tfor ( let i = 0; i < vertices.length; i ++ ) {\n\n\t\t\tconst current = vertices[ i ];\n\t\t\tconst next = vertices[ ( i + 1 ) % vertices.length ];\n\n\t\t\tnormal.x += ( current.y - next.y ) * ( current.z + next.z );\n\t\t\tnormal.y += ( current.z - next.z ) * ( current.x + next.x );\n\t\t\tnormal.z += ( current.x - next.x ) * ( current.y + next.y );\n\n\t\t}\n\n\t\tnormal.normalize();\n\n\t\treturn normal;\n\n\t}\n\n\tgetNormalTangentAndBitangent( vertices ) {\n\n\t\tconst normalVector = this.getNormalNewell( vertices );\n\t\t// Avoid up being equal or almost equal to normalVector\n\t\tconst up = Math.abs( normalVector.z ) > 0.5 ? new Vector3( 0.0, 1.0, 0.0 ) : new Vector3( 0.0, 0.0, 1.0 );\n\t\tconst tangent = up.cross( normalVector ).normalize();\n\t\tconst bitangent = normalVector.clone().cross( tangent ).normalize();\n\n\t\treturn {\n\t\t\tnormal: normalVector,\n\t\t\ttangent: tangent,\n\t\t\tbitangent: bitangent\n\t\t};\n\n\t}\n\n\tflattenVertex( vertex, normalTangent, normalBitangent ) {\n\n\t\treturn new Vector2(\n\t\t\tvertex.dot( normalTangent ),\n\t\t\tvertex.dot( normalBitangent )\n\t\t);\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tlet triangles;\n\n\t\tif ( faceLength > 3 ) {\n\n\t\t\t// Triangulate n-gon using earcut\n\n\t\t\tconst vertices = [];\n\n\t\t\tfor ( let i = 0; i < facePositionIndexes.length; i += 3 ) {\n\n\t\t\t\tvertices.push( new Vector3(\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 1 ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 2 ] ]\n\t\t\t\t) );\n\n\t\t\t}\n\n\t\t\tconst { tangent, bitangent } = this.getNormalTangentAndBitangent( vertices );\n\t\t\tconst triangulationInput = [];\n\n\t\t\tfor ( const vertex of vertices ) {\n\n\t\t\t\ttriangulationInput.push( this.flattenVertex( vertex, tangent, bitangent ) );\n\n\t\t\t}\n\n\t\t\ttriangles = ShapeUtils.triangulateShape( triangulationInput, [] );\n\n\t\t} else {\n\n\t\t\t// Regular triangle, skip earcut triangulation step\n\t\t\ttriangles = [[ 0, 1, 2 ]];\n\n\t\t}\n\n\t\tfor ( const [ i0, i1, i2 ] of triangles ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\tconst morphIndex = indices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: vertexIndices,\n\t\t\tvertexPositions: morphPositions,\n\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\tfor ( let i = 0, c = new Color(); i < buffer.length; i += 4 ) {\n\n\t\t\tc.fromArray( buffer, i ).convertSRGBToLinear().toArray( buffer, i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, new Quaternion(), initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, preRotation, postRotation, eulerOrder ) {\n\n\t\tlet times;\n\t\tlet values;\n\n\t\tif ( curves.x !== undefined && curves.y !== undefined && curves.z !== undefined ) {\n\n\t\t\tconst result = this.interpolateRotations( curves.x, curves.y, curves.z, eulerOrder );\n\n\t\t\ttimes = result[ 0 ];\n\t\t\tvalues = result[ 1 ];\n\n\t\t}\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tif ( ! values || ! times ) return new QuaternionKeyframeTrack( modelName + '.quaternion', [ 0 ], [ 0 ] );\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t// Check unroll\n\t\t\tif ( i > 2 ) {\n\n\t\t\t\tconst prevQuat = new Quaternion().fromArray(\n\t\t\t\t\tquaternionValues,\n\t\t\t\t\t( ( i - 3 ) / 3 ) * 4\n\t\t\t\t);\n\n\t\t\t\tif ( prevQuat.dot( quaternion ) < 0 ) {\n\n\t\t\t\t\tquaternion.set( - quaternion.x, - quaternion.y, - quaternion.z, - quaternion.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curvex, curvey, curvez, eulerOrder ) {\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\t// Add first frame\n\t\ttimes.push( curvex.times[ 0 ] );\n\t\tvalues.push( MathUtils.degToRad( curvex.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvey.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvez.values[ 0 ] ) );\n\n\t\tfor ( let i = 1; i < curvex.values.length; i ++ ) {\n\n\t\t\tconst initialValue = [\n\t\t\t\tcurvex.values[ i - 1 ],\n\t\t\t\tcurvey.values[ i - 1 ],\n\t\t\t\tcurvez.values[ i - 1 ],\n\t\t\t];\n\n\t\t\tif ( isNaN( initialValue[ 0 ] ) || isNaN( initialValue[ 1 ] ) || isNaN( initialValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst initialValueRad = initialValue.map( MathUtils.degToRad );\n\n\t\t\tconst currentValue = [\n\t\t\t\tcurvex.values[ i ],\n\t\t\t\tcurvey.values[ i ],\n\t\t\t\tcurvez.values[ i ],\n\t\t\t];\n\n\t\t\tif ( isNaN( currentValue[ 0 ] ) || isNaN( currentValue[ 1 ] ) || isNaN( currentValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValueRad = currentValue.map( MathUtils.degToRad );\n\n\t\t\tconst valuesSpan = [\n\t\t\t\tcurrentValue[ 0 ] - initialValue[ 0 ],\n\t\t\t\tcurrentValue[ 1 ] - initialValue[ 1 ],\n\t\t\t\tcurrentValue[ 2 ] - initialValue[ 2 ],\n\t\t\t];\n\n\t\t\tconst absoluteSpan = [\n\t\t\t\tMath.abs( valuesSpan[ 0 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 1 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 2 ] ),\n\t\t\t];\n\n\t\t\tif ( absoluteSpan[ 0 ] >= 180 || absoluteSpan[ 1 ] >= 180 || absoluteSpan[ 2 ] >= 180 ) {\n\n\t\t\t\tconst maxAbsSpan = Math.max( ...absoluteSpan );\n\n\t\t\t\tconst numSubIntervals = maxAbsSpan / 180;\n\n\t\t\t\tconst E1 = new Euler( ...initialValueRad, eulerOrder );\n\t\t\t\tconst E2 = new Euler( ...currentValueRad, eulerOrder );\n\n\t\t\t\tconst Q1 = new Quaternion().setFromEuler( E1 );\n\t\t\t\tconst Q2 = new Quaternion().setFromEuler( E2 );\n\n\t\t\t\t// Check unroll\n\t\t\t\tif ( Q1.dot( Q2 ) ) {\n\n\t\t\t\t\tQ2.set( - Q2.x, - Q2.y, - Q2.z, - Q2.w );\n\n\t\t\t\t}\n\n\t\t\t\t// Interpolate\n\t\t\t\tconst initialTime = curvex.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curvex.times[ i ] - initialTime;\n\n\t\t\t\tconst Q = new Quaternion();\n\t\t\t\tconst E = new Euler();\n\t\t\t\tfor ( let t = 0; t < 1; t += 1 / numSubIntervals ) {\n\n\t\t\t\t\tQ.copy( Q1.clone().slerp( Q2.clone(), t ) );\n\n\t\t\t\t\ttimes.push( initialTime + t * timeSpan );\n\t\t\t\t\tE.setFromQuaternion( Q, eulerOrder );\n\n\t\t\t\t\tvalues.push( E.x );\n\t\t\t\t\tvalues.push( E.y );\n\t\t\t\t\tvalues.push( E.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttimes.push( curvex.times[ i ] );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvex.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvey.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvez.values[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn [ times, values ];\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) );\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\t\tbreak; // cannot happen but is required by the DeepScan\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\t\tthis._textDecoder = new TextDecoder();\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\tconst start = this.offset;\n\t\tlet a = new Uint8Array( this.dv.buffer, start, size );\n\n\t\tthis.skip( size );\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = new Uint8Array( this.dv.buffer, start, nullByte );\n\n\t\treturn this._textDecoder.decode( a );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn new TextDecoder().decode( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n\nexport { FBXLoader };\n","import { FBXLoader } from 'three/addons/loaders/FBXLoader.js';\nTHREE.FBXLoader = FBXLoader;\n\n/**\n * fbx-model\n *\n * Loader for FBX format.\n */\nAFRAME.registerComponent('fbx-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    const loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'fbx', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n","const fetchScript = require('../../lib/fetch-script')();\n\nconst LOADER_SRC = 'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r86/examples/js/loaders/GLTFLoader.js';\n\nconst loadLoader = (function () {\n  let promise;\n  return function () {\n    promise = promise || fetchScript(LOADER_SRC);\n    return promise;\n  };\n}());\n\n/**\n * Legacy loader for glTF 1.0 models.\n * Asynchronously loads THREE.GLTFLoader from jsdelivr.\n */\nmodule.exports = AFRAME.registerComponent('gltf-model-legacy', {\n  schema: {type: 'model'},\n\n  init: function () {\n    this.model = null;\n    this.loader = null;\n    this.loaderPromise = loadLoader().then(() => {\n      this.loader = new THREE.GLTFLoader();\n      this.loader.setCrossOrigin('Anonymous');\n    });\n  },\n\n  update: function () {\n    const self = this;\n    const el = this.el;\n    const src = this.data;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loaderPromise.then(() => {\n      this.loader.load(src, function gltfLoaded (gltfModel) {\n        self.model = gltfModel.scene;\n        self.model.animations = gltfModel.animations;\n        el.setObject3D('mesh', self.model);\n        el.emit('model-loaded', {format: 'gltf', model: self.model});\n      });\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n","/**\n * object-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.ObjectLoader, which typically\n * includes multiple meshes or an entire scene.\n *\n * Check the console for errors, if in doubt. You may need to use `json-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('object-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    loader = new THREE.ObjectLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, (object) => {\n\n      // Enable skinning, if applicable.\n      object.traverse((o) => {\n        if (o instanceof THREE.SkinnedMesh && o.material) {\n          o.material.skinning = !!((o.geometry && o.geometry.bones) || []).length;\n        }\n      });\n\n      this.load(object);\n    });\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'json', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n","module.exports = __WEBPACK_EXTERNAL_MODULE__612__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","require('./animation-mixer');\nrequire('./collada-model-legacy');\nrequire('./fbx-model');\nrequire('./gltf-model-legacy');\nrequire('./object-model');\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__612__","THREE","ColladaLoader","manager","this","undefined","DefaultLoadingManager","prototype","constructor","crossOrigin","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","text","parse","value","setResourcePath","resourcePath","options","convertUpAxis","console","warn","setCrossOrigin","getElementsByTagName","xml","name","array","childNodes","l","length","child","nodeName","push","parseStrings","parts","trim","split","Array","parseFloats","parseFloat","parseInts","parseInt","parseId","substring","isEmpty","object","Object","keys","parseAssetUnit","hasAttribute","getAttribute","parseAssetUpAxis","textContent","parseLibrary","libraryName","parser","library","elements","buildLibrary","data","builder","build","getBuild","parseAnimationSampler","inputs","nodeType","id","semantic","parseAnimationChannel","shift","sid","arraySyntax","indexOf","memberSyntax","member","indices","replace","sampler","buildAnimation","tracks","channels","samplers","sources","target","hasOwnProperty","channel","inputId","INPUT","outputId","OUTPUT","createKeyframeTracks","buildAnimationChannel","getAnimation","animations","inputSource","outputSource","time","stride","il","j","jl","node","nodes","object3D","getNode","transform","transforms","defaultMatrix","matrix","clone","transpose","index","keyframes","sort","b","transformAnimationData","prepareAnimationData","uuid","position","Vector3","scale","quaternion","Quaternion","animation","times","positionData","quaternionData","scaleData","keyframe","fromArray","decompose","x","y","z","w","VectorKeyframeTrack","QuaternionKeyframeTrack","property","defaultValue","empty","prev","next","getPrev","getNext","interpolate","createMissingKeyframes","key","buildAnimationClip","duration","end","start","animationTracks","AnimationClip","getAnimationClip","clips","parseSkin","bindShapeMatrix","parseSource","joints","parseJoints","vertexWeights","parseVertexWeights","offset","vcount","v","buildController","geometry","geometries","skin","weights","jointOffset","JOINT","weightOffset","WEIGHT","jointSource","inverseSource","INV_BIND_MATRIX","jointCount","vertexSkinData","skinIndex","skinWeight","weight","descending","d","bindMatrix","Matrix4","identity","boneInverse","buildSkin","skinIndices","skinWeights","buildImage","init_from","getImage","images","parseEffectProfileCOMMON","surfaces","parseEffectNewparam","technique","parseEffectTechnique","extra","parseEffectExtra","parseEffectSurface","parseEffectSampler","source","type","parameters","parseEffectParameters","parseEffectParameter","opaque","parseEffectParameterTexture","parseEffectParameterTextureExtra","parseEffectParameterTextureExtraTechnique","toUpperCase","parseEffectExtraTechnique","buildEffect","buildMaterial","material","effect","effects","profile","MeshPhongMaterial","MeshLambertMaterial","MeshBasicMaterial","getTexture","textureObject","image","extension","slice","lastIndexOf","toLowerCase","tgaLoader","textureLoader","getTextureLoader","texture","wrapS","wrapU","RepeatWrapping","ClampToEdgeWrapping","wrapT","wrapV","set","offsetU","offsetV","repeat","repeatU","repeatV","parameter","color","map","specular","specularMap","normalMap","lightMap","float","shininess","emissive","emissiveMap","transparent","transparency","opacity","double_sided","side","DoubleSide","getMaterial","materials","parseCameraOptics","parseCameraTechnique","parseCameraParameters","buildCamera","camera","optics","PerspectiveCamera","yfov","aspect_ratio","znear","zfar","ymag","xmag","aspectRatio","OrthographicCamera","getCamera","cameras","parseLightTechnique","parseLightParameters","Color","falloffAngle","f","distance","Math","sqrt","buildLight","light","DirectionalLight","PointLight","SpotLight","AmbientLight","copy","getLight","lights","accessor","parseGeometryVertices","parseGeometryPrimitive","primitive","count","hasUV","inputname","max","p","checkUVCoordinates","primitives","uvsNeedsFix","buildGeometry","vertices","groupedPrimitives","groupPrimitives","primitiveType","buildGeometryType","normal","uv","uv2","BufferGeometry","materialKeys","g","vc","addGroup","input","prevLength","buildGeometryData","addAttribute","Float32BufferAttribute","pushVector","sourceStride","sourceArray","c","k","kl","getGeometry","buildKinematicsModel","parseKinematicsTechniqueCommon","parseKinematicsJoint","links","parseKinematicsLink","parseKinematicsJointParameter","axis","limits","min","static","zeroPosition","middlePosition","attachments","parseKinematicsAttachment","parseKinematicsTransform","joint","pop","obj","angle","MathUtils","degToRad","parsePhysicsRigidBody","parsePhysicsTechniqueCommon","inertia","mass","parseKinematicsBindJointAxis","param","tmpJointIndex","jointIndex","substr","buildKinematicsScene","buildTransformList","collada","querySelector","vector","parseNode","instanceCameras","instanceControllers","instanceLights","instanceGeometries","instanceNodes","parseNodeInstance","multiply","makeTranslation","makeRotationAxis","log","hasNode","skeletons","instances","instance","symbol","buildSkeleton","boneData","sortedBoneData","skeleton","buildBoneHierarchy","visualScenes","children","error","bone","processed","bones","boneInverses","Skeleton","traverse","isBone","buildNode","objects","instanceCamera","controller","controllers","newObjects","buildObjects","isSkinnedMesh","bind","normalizeSkinWeights","instanceLight","Bone","Group","add","fallbackMaterial","resolveMaterialBinding","instanceMaterials","LineBasicMaterial","skinning","attributes","LineSegments","Line","SkinnedMesh","Mesh","buildVisualScene","group","getVisualScene","scene","Scene","DOMParser","parseFromString","version","asset","unit","upAxis","TextureLoader","TGALoader","kinematics","kinematicsModels","physicsModels","kinematicsScenes","mesh","element","setAttribute","prepareNodes","rigidBodies","bindJointAxis","setupAnimations","kinematicsModelId","kinematicsSceneId","visualSceneId","kinematicsModel","kinematicsScene","getKinematicsScene","visualScene","jointMap","targetElement","parentVisualElement","parentElement","connect","m0","getJointValue","jointData","setJointValue","visualElement","visualElementName","setupKinematics","parseScene","setFromEuler","Euler","PI","multiplyScalar","removeScript","script","document","getElementById","parent","parentNode","removeChild","e","settings","Promise","resolve","reject","timeout","scriptId","Date","now","ceil","random","createElement","async","src","createScript","timeoutId","setTimeout","Error","disableTimeout","clearTimeout","addEventListener","ok","firstScript","insertBefore","appendScript","fetchScriptInternal","LoopMode","once","LoopOnce","LoopRepeat","pingpong","LoopPingPong","regExpEscape","s","AFRAME","registerComponent","schema","clip","default","useRegExp","clampWhenFinished","crossFadeDuration","loop","oneOf","repetitions","Infinity","timeScale","startAt","init","model","mixer","activeActions","el","getObject3D","detail","AnimationMixer","emit","action","loopDelta","direction","update","remove","stopAllAction","prevData","changes","utils","diff","stopAction","playAction","forEach","setDuration","setLoop","setEffectiveTimeScale","fadeOut","stop","re","RegExp","join","match","clipAction","enabled","fadeIn","play","tick","t","dt","isNaN","Component","rendererSystem","sceneEl","systems","renderer","colladaModel","isMesh","applyColorCorrection","setObject3D","format","removeObject3D","u8","Uint8Array","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","r","_a","fl","revfl","_b","fd","rev","hMap","cd","mb","co","le","rvb","sv","r_1","m","flt","fdt","bits","o","bits16","ec","err","ind","msg","nt","code","captureStackTrace","inflt","dat","st","buf","dict","sl","dl","noBuf","resize","noSt","cbuf","bl","nbuf","final","pos","bt","lm","dm","lbt","dbt","n","tbts","subarray","flrm","fdrm","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","lms","dms","lpos","sym","dsym","dend","slc","et","unzlibSync","opts","dictionary","out","td","TextDecoder","decode","stream","findSpan","u","U","low","high","mid","floor","calcKoverI","nom","denom","queueMicrotask","NURBSCurve","Curve","degree","knots","controlPoints","startKnot","endKnot","super","point","Vector4","getPoint","optionalTarget","hpoint","P","span","N","left","right","saved","rv","lv","temp","calcBasisFunctions","C","Nj","wNj","divideScalar","getTangent","tangent","ders","nd","Pders","du","CK","nders","zeroArr","ndu","s1","s2","rk","pk","j2","calcBasisFunctionDerivatives","Pw","calcBSplineDerivatives","Aders","wders","sub","calcRationalCurveDerivatives","normalize","fbxTree","connections","sceneGraph","FBXLoader","Loader","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","isFbxFormatBinary","BinaryParser","FBXText","cursor","read","result","isFbxFormatASCII","getFbxVersion","TextParser","FBXTreeParser","parseConnections","parseImages","textures","parseTextures","parseMaterials","deformers","parseDeformers","geometryMap","GeometryParser","connectionMap","Map","Connections","rawConnection","fromID","toID","relationship","has","parents","parentRelationship","ID","get","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","parseImage","filename","content","fileName","getHandler","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","parseTexture","textureNode","loadTexture","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","valueV","values","Scaling","Translation","currentPath","FileName","materialMap","materialNodes","Material","parseMaterial","materialNode","ShadingModel","parseParameters","setValues","BumpFactor","bumpScale","Diffuse","convertSRGBToLinear","DiffuseColor","DisplacementFactor","displacementScale","Emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","Opacity","ReflectionFactor","reflectivity","Shininess","Specular","SpecularColor","bumpMap","aoMap","colorSpace","SRGBColorSpace","displacementMap","envMap","mapping","EquirectangularReflectionMapping","alphaMap","LayeredTexture","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","transformLink","TransformLink","Indexes","Weights","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","modelMap","parseModels","modelNodes","Model","modelNode","setLookAtProperties","connection","bindSkeleton","addGlobalSceneSettings","userData","transformData","parentMatrix","parentMatrixWorld","matrixWorld","generateTransform","applyMatrix4","updateWorldMatrix","AnimationParser","isGroup","createCamera","createLight","createMesh","createCurve","PropertyBinding","sanitizeNodeName","originalName","getTransformData","subBone","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","setFocalLength","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","FarAttenuationEnd","EnableFarAttenuation","decay","InnerAngle","penumbra","OuterAngle","CastShadows","castShadow","DEFAULT_MATERIAL_NAME","vertexColors","FBX_Deformer","reduce","geo","linewidth","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","lookAt","bindMatrices","parsePoseNodes","geoConnParent","BindPoseNode","Pose","NbPoseNodes","poseNodes","PoseNode","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","unitScaleFactor","UnitScaleFactor","negativeMaterialIndices","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","vertex","colors","Uint16BufferAttribute","weightsIndices","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","groups","lastGroup","lastIndex","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","UV","parseUVs","weightTable","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","getNormalNewell","current","getNormalTangentAndBitangent","normalVector","abs","cross","bitangent","flattenVertex","normalTangent","normalBitangent","Vector2","dot","triangles","triangulationInput","ShapeUtils","triangulateShape","i0","i1","i2","parentGeo","parentGeoNode","morphTargetsRelative","morphAttributes","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","toArray","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","KnotVector","pointsValues","Points","Form","points","getPoints","setFromPoints","animationClips","rawClips","parseClips","rawClip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","toString","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","rawTracks","concat","generateTracks","T","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","interpolateRotations","invert","euler","quaternionValues","premultiply","val","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","targetIndex","lastValue","currentValue","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curvex","curvey","curvez","initialValueRad","currentValueRad","valuesSpan","absoluteSpan","numSubIntervals","E1","E2","Q1","Q2","initialTime","timeSpan","Q","E","slerp","setFromQuaternion","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","FBXTree","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","from","to","rest","elem","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","BinaryReader","skip","getUint32","endOfContent","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","encoding","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","reader2","littleEndian","dv","DataView","_textDecoder","nullByte","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lParentLX","lGlobalT","setPosition","DEFAULT_ORDER","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lParentTM","copyPosition","lParentGRSM","lParentGSM","lLSM","lGlobalRS","lParentLSM_inv","setFromMatrixScale","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","crossorigin","fetchScript","loadLoader","promise","loaderPromise","then","GLTFLoader","gltfModel","ObjectLoader","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Symbol","toStringTag","defineProperty"],"sourceRoot":""}